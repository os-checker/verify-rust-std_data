[
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/addr2line-0.25.0/src/lib.rs",
    "func": "<DebugFile as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/addr2line-0.25.0/src/lib.rs",
    "func": "<DebugFile as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/addr2line-0.25.0/src/lib.rs",
    "func": "<DebugFile as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/addr2line-0.25.0/src/line.rs",
    "func": "line::LazyLines::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/algo.rs",
    "func": "<algo::U32X4 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/algo.rs",
    "func": "<algo::U32X4 as rustc_std_workspace_core::ops::AddAssign>::add_assign"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/algo.rs",
    "func": "<algo::U32X4 as rustc_std_workspace_core::ops::MulAssign<u32>>::mul_assign"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/algo.rs",
    "func": "<algo::U32X4 as rustc_std_workspace_core::ops::RemAssign<u32>>::rem_assign"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/lib.rs",
    "func": "<Adler32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/lib.rs",
    "func": "<Adler32 as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/lib.rs",
    "func": "<Adler32 as rustc_std_workspace_core::hash::Hasher>::finish"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/lib.rs",
    "func": "Adler32::checksum"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/lib.rs",
    "func": "Adler32::from_checksum"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/lib.rs",
    "func": "Adler32::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "<arch::AArch64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "<arch::Arm as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "<arch::LoongArch as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "<arch::MIPS as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "<arch::PowerPc64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "<arch::RiscV as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "<arch::X86 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "<arch::X86_64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "arch::AArch64::register_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "arch::Arm::register_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "arch::LoongArch::register_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "arch::MIPS::register_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "arch::PowerPc64::register_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "arch::RiscV::register_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "arch::X86::register_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "arch::X86_64::register_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::DebugTypeSignature as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::DebugTypeSignature as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::DebugTypeSignature as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::DwarfFileType as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::DwarfFileType as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::DwarfFileType as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::DwarfFileType as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::DwoId as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::DwoId as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::DwoId as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Encoding as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Encoding as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Encoding as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Format as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Format as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Format as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::LineEncoding as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::LineEncoding as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::LineEncoding as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::LineEncoding as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Register as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Register as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Register as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Register as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Register as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::SectionId as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::SectionId as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::SectionId as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::SectionId as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::SectionId as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Vendor as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Vendor as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Vendor as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "common::Format::initial_length_size"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "common::Format::word_size"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "common::SectionId::dwo_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "common::SectionId::is_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "common::SectionId::name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "common::SectionId::xcoff_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAccess as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAccess as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAccess as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAccess as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAccess as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAddr as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAddr as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAddr as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAddr as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAddr as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAt as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAt as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAt as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAt as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAt as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAte as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAte as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAte as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAte as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAte as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwCc as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwCc as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwCc as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwCc as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwCc as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwCfa as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwCfa as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwCfa as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwCfa as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwCfa as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwChildren as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwChildren as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwChildren as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwChildren as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwChildren as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDefaulted as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDefaulted as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDefaulted as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDefaulted as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDefaulted as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDs as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDs as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDs as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDs as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDs as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDsc as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDsc as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDsc as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDsc as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDsc as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEhPe as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEhPe as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEhPe as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEhPe as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEhPe as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEhPe as rustc_std_workspace_core::ops::BitOr>::bitor"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEnd as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEnd as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEnd as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEnd as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEnd as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwForm as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwForm as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwForm as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwForm as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwForm as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwId as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwId as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwId as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwId as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwId as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwIdx as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwIdx as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwIdx as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwIdx as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwIdx as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwInl as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwInl as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwInl as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwInl as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwInl as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLang as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLang as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLang as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLang as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLang as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLle as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLle as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLle as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLle as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLle as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLnct as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLnct as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLnct as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLnct as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLnct as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLne as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLne as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLne as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLne as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLne as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLns as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLns as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLns as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLns as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLns as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwMacinfo as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwMacinfo as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwMacinfo as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwMacinfo as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwMacinfo as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwMacro as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwMacro as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwMacro as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwMacro as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwMacro as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwOp as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwOp as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwOp as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwOp as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwOp as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwOrd as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwOrd as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwOrd as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwOrd as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwOrd as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwRle as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwRle as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwRle as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwRle as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwRle as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwSect as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwSect as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwSect as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwSect as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwSect as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwSectV2 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwSectV2 as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwSectV2 as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwSectV2 as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwSectV2 as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwTag as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwTag as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwTag as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwTag as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwTag as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwUt as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwUt as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwUt as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwUt as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwUt as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwVirtuality as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwVirtuality as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwVirtuality as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwVirtuality as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwVirtuality as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwVis as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwVis as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwVis as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwVis as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwVis as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwAccess::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwAddr::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwAt::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwAte::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwCc::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwCfa::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwChildren::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwDefaulted::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwDs::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwDsc::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwEhPe::application"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwEhPe::format"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwEhPe::is_absent"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwEhPe::is_indirect"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwEhPe::is_valid_encoding"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwEhPe::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwEnd::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwForm::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwId::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwIdx::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwInl::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwLang::default_lower_bound"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwLang::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwLle::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwLnct::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwLne::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwLns::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwMacinfo::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwMacro::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwOp::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwOrd::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwRle::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwSect::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwSectV2::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwTag::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwUt::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwVirtuality::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwVis::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::BigEndian as endianity::Endianity>::is_big_endian"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::BigEndian as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::BigEndian as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::BigEndian as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::BigEndian as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::LittleEndian as endianity::Endianity>::is_big_endian"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::LittleEndian as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::LittleEndian as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::LittleEndian as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::LittleEndian as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::RunTimeEndian as endianity::Endianity>::is_big_endian"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::RunTimeEndian as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::RunTimeEndian as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::RunTimeEndian as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::RunTimeEndian as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/leb128.rs",
    "func": "leb128::low_bits_of_byte"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/leb128.rs",
    "func": "leb128::low_bits_of_u64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "<read::abbrev::Abbreviations as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "<read::abbrev::AbbreviationsCache as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "<read::abbrev::AbbreviationsCacheStrategy as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "<read::abbrev::AbbreviationsCacheStrategy as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "<read::abbrev::AbbreviationsCacheStrategy as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "<read::abbrev::AttributeSpecification as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "<read::abbrev::AttributeSpecification as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "<read::abbrev::AttributeSpecification as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "read::abbrev::Abbreviations::empty"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "read::abbrev::AbbreviationsCache::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "read::abbrev::AttributeSpecification::form"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "read::abbrev::AttributeSpecification::implicit_const_value"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "read::abbrev::AttributeSpecification::name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "read::abbrev::AttributeSpecification::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "read::abbrev::Attributes::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "read::abbrev::get_attribute_size"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/aranges.rs",
    "func": "<read::aranges::ArangeEntry as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/aranges.rs",
    "func": "<read::aranges::ArangeEntry as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/aranges.rs",
    "func": "<read::aranges::ArangeEntry as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/aranges.rs",
    "func": "<read::aranges::ArangeEntry as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/aranges.rs",
    "func": "<read::aranges::ArangeEntry as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/aranges.rs",
    "func": "read::aranges::ArangeEntry::address"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/aranges.rs",
    "func": "read::aranges::ArangeEntry::length"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/aranges.rs",
    "func": "read::aranges::ArangeEntry::range"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::Augmentation as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::AugmentationData as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::AugmentationData as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::AugmentationData as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::AugmentationData as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::BaseAddresses as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::BaseAddresses as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::BaseAddresses as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::BaseAddresses as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::CieOffsetEncoding as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::CieOffsetEncoding as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::CieOffsetEncoding as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::Pointer as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::Pointer as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::Pointer as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::Pointer as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::SectionBaseAddresses as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::SectionBaseAddresses as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::SectionBaseAddresses as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::SectionBaseAddresses as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "read::cfi::BaseAddresses::set_eh_frame"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "read::cfi::BaseAddresses::set_eh_frame_hdr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "read::cfi::BaseAddresses::set_got"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "read::cfi::BaseAddresses::set_text"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "read::cfi::Pointer::direct"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "read::cfi::Pointer::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "read::cfi::Pointer::pointer"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/index.rs",
    "func": "<read::index::IndexSectionId as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/index.rs",
    "func": "<read::index::IndexSectionId as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/index.rs",
    "func": "<read::index::IndexSectionId as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/index.rs",
    "func": "<read::index::UnitIndexSection as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/index.rs",
    "func": "<read::index::UnitIndexSection as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/index.rs",
    "func": "<read::index::UnitIndexSection as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/index.rs",
    "func": "read::index::IndexSectionId::dwo_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/index.rs",
    "func": "read::index::IndexSectionId::section_id"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::ColumnType as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::ColumnType as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::ColumnType as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::ColumnType as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::ColumnType as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::FileEntryFormat as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::FileEntryFormat as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::FileEntryFormat as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::LineRow as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::LineRow as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::LineRow as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::address"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::apply_line_advance"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::basic_block"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::column"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::discriminator"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::end_sequence"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::epilogue_begin"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::file_index"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::is_stmt"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::isa"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::line"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::op_index"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::prologue_end"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/lists.rs",
    "func": "<read::lists::ListsHeader as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/lists.rs",
    "func": "<read::lists::ListsHeader as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/lists.rs",
    "func": "read::lists::ListsHeader::size"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/lists.rs",
    "func": "read::lists::ListsHeader::size_for_encoding"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/loclists.rs",
    "func": "<read::loclists::LocListsFormat as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/loclists.rs",
    "func": "<read::loclists::LocListsFormat as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/loclists.rs",
    "func": "<read::loclists::LocListsFormat as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/mod.rs",
    "func": "<read::Error as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/mod.rs",
    "func": "<read::Error as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/mod.rs",
    "func": "<read::Error as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/mod.rs",
    "func": "<read::StoreOnHeap as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/mod.rs",
    "func": "<read::StoreOnHeap as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/mod.rs",
    "func": "<read::StoreOnHeap as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/mod.rs",
    "func": "read::<impl common::Register>::from_u64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/mod.rs",
    "func": "read::Error::description"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<read::reader::ReaderOffsetId as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<read::reader::ReaderOffsetId as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<read::reader::ReaderOffsetId as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u32 as read::reader::ReaderOffset>::checked_sub"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u32 as read::reader::ReaderOffset>::from_i16"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u32 as read::reader::ReaderOffset>::from_u16"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u32 as read::reader::ReaderOffset>::from_u32"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u32 as read::reader::ReaderOffset>::from_u64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u32 as read::reader::ReaderOffset>::from_u8"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u32 as read::reader::ReaderOffset>::into_u64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u32 as read::reader::ReaderOffset>::wrapping_add"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderAddress>::add_sized"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderAddress>::ones_sized"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderAddress>::wrapping_add_sized"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderOffset>::checked_sub"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderOffset>::from_i16"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderOffset>::from_u16"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderOffset>::from_u32"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderOffset>::from_u64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderOffset>::from_u8"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderOffset>::into_u64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderOffset>::wrapping_add"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<usize as read::reader::ReaderOffset>::checked_sub"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<usize as read::reader::ReaderOffset>::from_i16"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<usize as read::reader::ReaderOffset>::from_u16"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<usize as read::reader::ReaderOffset>::from_u32"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<usize as read::reader::ReaderOffset>::from_u64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<usize as read::reader::ReaderOffset>::from_u8"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<usize as read::reader::ReaderOffset>::into_u64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<usize as read::reader::ReaderOffset>::wrapping_add"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::Range as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::Range as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::Range as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::Range as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::Range as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::RangeListsFormat as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::RangeListsFormat as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::RangeListsFormat as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::RawRange as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::RawRange as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::RawRange as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "read::rnglists::Range::add_base_address"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "read::rnglists::RawRange::is_base_address"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "read::rnglists::RawRange::is_end"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/unit.rs",
    "func": "read::unit::allow_section_offset"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/util.rs",
    "func": "<read::util::sealed::CapacityFull as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "<read::value::Value as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "<read::value::Value as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "<read::value::ValueType as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "<read::value::ValueType as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "<read::value::ValueType as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::abs"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::add"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::and"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::convert"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::div"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::from_f32"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::from_f64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::from_u64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::ge"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::gt"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::le"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::lt"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::mul"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::ne"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::neg"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::not"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::or"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::reinterpret"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::rem"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::shift_length"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::shl"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::shr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::shra"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::sub"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::to_u64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::value_type"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::xor"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::ValueType::bit_size"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::ValueType::from_encoding"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::mask_bit_size"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::sign_extend"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "<control::bitmask::BitMask as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "<control::bitmask::BitMask as rustc_std_workspace_core::iter::IntoIterator>::into_iter"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "<control::bitmask::BitMaskIter as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "<control::bitmask::BitMaskIter as rustc_std_workspace_core::iter::Iterator>::next"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "control::bitmask::BitMask::any_bit_set"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "control::bitmask::BitMask::invert"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "control::bitmask::BitMask::leading_zeros"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "control::bitmask::BitMask::lowest_set_bit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "control::bitmask::BitMask::nonzero_trailing_zeros"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "control::bitmask::BitMask::remove_lowest_bit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "control::bitmask::BitMask::trailing_zeros"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/group/sse2.rs",
    "func": "<control::group::sse2::Group as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/group/sse2.rs",
    "func": "control::group::sse2::Group::convert_special_to_empty_and_full_to_deleted"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/group/sse2.rs",
    "func": "control::group::sse2::Group::match_empty"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/group/sse2.rs",
    "func": "control::group::sse2::Group::match_empty_or_deleted"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/group/sse2.rs",
    "func": "control::group::sse2::Group::match_full"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/group/sse2.rs",
    "func": "control::group::sse2::Group::match_tag"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/group/sse2.rs",
    "func": "control::group::sse2::Group::static_empty"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/tag.rs",
    "func": "<control::tag::Tag as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/tag.rs",
    "func": "<control::tag::Tag as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/tag.rs",
    "func": "<control::tag::Tag as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/tag.rs",
    "func": "control::tag::Tag::full"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/tag.rs",
    "func": "control::tag::Tag::is_full"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/tag.rs",
    "func": "control::tag::Tag::is_special"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/tag.rs",
    "func": "control::tag::Tag::special_is_empty"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/lib.rs",
    "func": "<TryReserveError as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/lib.rs",
    "func": "<TryReserveError as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/lib.rs",
    "func": "<TryReserveError as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/map.rs",
    "func": "map::assert_covariance"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "<raw::Fallibility as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "<raw::ProbeSeq as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "<raw::TableLayout as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "raw::Fallibility::alloc_err"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "raw::Fallibility::capacity_overflow"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "raw::ProbeSeq::move_next"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "raw::RawTableInner::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "raw::TableLayout::calculate_layout_for"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "raw::bucket_mask_to_capacity"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "raw::capacity_to_buckets"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "raw::h1"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/set.rs",
    "func": "set::assert_covariance"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<new::linux_uapi::linux::can::__c_anonymous_sockaddr_can_j1939 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<new::linux_uapi::linux::can::__c_anonymous_sockaddr_can_tp as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<new::linux_uapi::linux::can::can_filter as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<new::linux_uapi::linux::can::can_frame as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<new::linux_uapi::linux::can::canfd_frame as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<new::linux_uapi::linux::can::canxl_frame as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<new::linux_uapi::linux::can::j1939::j1939_filter as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::in6_addr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::ipv6_mreq as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::itimerval as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linger as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::arphdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::arpreq as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::arpreq_old as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::epoll_event as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::fd_set as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::file_clone_range as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::in6_rtmsg as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::in_addr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::in_pktinfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::ip_mreq as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::ip_mreq_source as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::ip_mreqn as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::Elf32_Ehdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::Elf32_Phdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::Elf32_Shdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::Elf32_Sym as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::Elf64_Ehdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::Elf64_Phdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::Elf64_Shdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::Elf64_Sym as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::__c_anonymous__kernel_fsid_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::__c_anonymous_elf32_rel as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::__c_anonymous_elf32_rela as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::__c_anonymous_elf64_rel as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::__c_anonymous_elf64_rela as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::__c_anonymous_ifru_map as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::af_alg_iv as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::arch::generic::termios2 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::arpd_request as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::cpu_set_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::dirent as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::dirent64 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::dmabuf_cmsg as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::dmabuf_token as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::dqblk as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::epoll_params as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::fanotify_event_info_fid as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::fanotify_event_info_header as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::fanotify_event_metadata as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::fanotify_response as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::fanout_args as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::ff_condition_effect as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::ff_constant_effect as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::ff_effect as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::ff_envelope as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::ff_ramp_effect as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::ff_replay as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::ff_rumble_effect as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::ff_trigger as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::fsid_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::genlmsghdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::Elf32_Chdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::Elf64_Chdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::__c_anonymous_ptrace_syscall_info_entry as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::__c_anonymous_ptrace_syscall_info_exit as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::__c_anonymous_ptrace_syscall_info_seccomp as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::__exit_status as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::__timeval as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::msqid_ds as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::semid_ds as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::sigset_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::sysinfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::timex as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::_libc_fpxreg as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::_libc_xmmreg as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::clone_args as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::flock as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::flock64 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::ipc_perm as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::max_align_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::not_x32::statvfs as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::pthread_attr_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::ptrace_rseq_configuration as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::shmid_ds as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::siginfo_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::stat as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::stat64 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::statfs as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::statfs64 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::statvfs64 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::user_fpregs_struct as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::user_regs_struct as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::cmsghdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::fanotify_event_info_error as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::fanotify_event_info_pidfd as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::fpos64_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::fpos_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::iocb as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::mallinfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::mallinfo2 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::mbstate_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::nl_mmap_hdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::nl_mmap_req as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::nl_pktinfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::ntptimeval as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::ptrace_peeksiginfo_args as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::ptrace_sud_config as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::sem_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::seminfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::tcp_info as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::termios as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::timespec as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::utmpx as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::hwtstamp_config as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::in6_ifreq as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::in6_pktinfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::inotify_event as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::input_absinfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::input_event as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::input_id as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::input_keymap_entry as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::input_mask as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::itimerspec as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_discarded as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_encode_ext as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_freq as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_michaelmicfailure as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_missed as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_mlme as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_param as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_pmkid_cand as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_pmksa as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_priv_args as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_quality as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_statistics as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_thrspy as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::mnt_ns_info as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::mount_attr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::mq_attr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::msginfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::nlattr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::nlmsgerr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::nlmsghdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::open_how as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::packet_mreq as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::pidfd_info as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::posix_spawnattr_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::pthread_barrier_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::pthread_barrierattr_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::pthread_cond_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::pthread_condattr_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::pthread_mutex_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::pthread_mutexattr_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::pthread_rwlock_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::pthread_rwlockattr_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::ptp_clock_caps as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::ptp_clock_time as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::ptp_extts_event as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::ptp_extts_request as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::ptp_pin_desc as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::ptp_sys_offset_precise as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::regmatch_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::rlimit64 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::sched_attr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::sctp_authinfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::sctp_initmsg as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::sctp_nxtinfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::sctp_prinfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::sctp_rcvinfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::sctp_sndinfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::sctp_sndrcvinfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::seccomp_data as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::seccomp_notif as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::seccomp_notif_addfd as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::seccomp_notif_resp as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::seccomp_notif_sizes as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::sembuf as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::signalfd_siginfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::sock_extended_err as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::sock_txtime as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::sockaddr_alg as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::sockaddr_nl as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::sockaddr_pkt as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::sockaddr_vm as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::sockaddr_xdp as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tls12_crypto_info_aes_ccm_128 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tls12_crypto_info_aes_gcm_128 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tls12_crypto_info_aes_gcm_256 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tls12_crypto_info_aria_gcm_128 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tls12_crypto_info_aria_gcm_256 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tls12_crypto_info_chacha20_poly1305 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tls12_crypto_info_sm4_ccm as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tls12_crypto_info_sm4_gcm as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tls_crypto_info as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket2_hdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket3_hdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_auxdata as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_bd_ts as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_hdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_hdr_v1 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_hdr_variant1 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_req as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_req3 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_rollover_stats as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_stats as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_stats_v3 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_versions as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::ucred as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::uinput_abs_setup as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::uinput_ff_erase as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::uinput_ff_upload as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::uinput_setup as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::uinput_user_dev as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::xdp_desc as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::xdp_mmap_offsets as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::xdp_mmap_offsets_v1 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::xdp_options as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::xdp_ring_offset as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::xdp_ring_offset_v1 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::xdp_statistics as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::xdp_statistics_v1 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::xdp_umem_reg as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::xdp_umem_reg_v1 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::xsk_tx_metadata_completion as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::xsk_tx_metadata_request as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::sched_param as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::sock_filter as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::sockaddr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::sockaddr_in as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::sockaddr_in6 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::sockaddr_ll as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::sockaddr_storage as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::sockaddr_un as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::statx as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::statx_timestamp as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::utsname as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::pollfd as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::rlimit as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::rusage as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::timeval as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::tms as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::utimbuf as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::winsize as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::htonl"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::htons"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::CMSG_ALIGN"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::CMSG_LEN"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::CMSG_SPACE"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::IPOPT_CLASS"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::IPOPT_COPIED"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::IPOPT_NUMBER"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::IPTOS_ECN"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::KERNEL_VERSION"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::QCMD"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::SIGRTMAX"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::SIGRTMIN"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::WCOREDUMP"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::WEXITSTATUS"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::WIFCONTINUED"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::WIFEXITED"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::WIFSIGNALED"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::WIFSTOPPED"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::WSTOPSIG"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::WTERMSIG"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::W_EXITCODE"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::W_STOPCODE"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_CLASS"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_JUMP"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_MISCOP"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_MODE"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_OP"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_RVAL"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_SIZE"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_SRC"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_STMT"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::CPU_ALLOC_SIZE"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::CPU_CLR"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::CPU_COUNT"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::CPU_COUNT_S"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::CPU_EQUAL"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::CPU_ISSET"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::CPU_SET"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::CPU_ZERO"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::ELF32_R_INFO"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::ELF32_R_SYM"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::ELF32_R_TYPE"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::ELF64_R_INFO"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::ELF64_R_SYM"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::ELF64_R_TYPE"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::IPTOS_PREC"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::IPTOS_TOS"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::NLA_ALIGN"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::RT_ADDRCLASS"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::RT_LOCALADDR"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::RT_TOS"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::SCTP_PR_INDEX"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::SCTP_PR_POLICY"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::SCTP_PR_PRIO_ENABLED"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::SCTP_PR_RTX_ENABLED"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::SCTP_PR_SET_POLICY"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::SCTP_PR_TTL_ENABLED"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::TPACKET_ALIGN"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::major"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::makedev"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::minor"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::ntohl"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::ntohs"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/unix/linux_like/linux/gnu/mod.rs",
    "func": "<unix::linux_like::linux::gnu::sifields_sigchld as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/unix/linux_like/linux/gnu/mod.rs",
    "func": "unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::si_addr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/unix/linux_like/linux/gnu/mod.rs",
    "func": "unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::si_pid"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/unix/linux_like/linux/gnu/mod.rs",
    "func": "unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::si_status"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/unix/linux_like/linux/gnu/mod.rs",
    "func": "unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::si_stime"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/unix/linux_like/linux/gnu/mod.rs",
    "func": "unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::si_uid"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/unix/linux_like/linux/gnu/mod.rs",
    "func": "unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::si_utime"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/unix/linux_like/linux/gnu/mod.rs",
    "func": "unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::si_value"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/unix/linux_like/linux/gnu/mod.rs",
    "func": "unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::sifields"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/unix/linux_like/linux/mod.rs",
    "func": "unix::linux_like::linux::FUTEX_OP"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/unix/linux_like/linux/mod.rs",
    "func": "unix::linux_like::linux::issecure_mask"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/unix/linux_like/mod.rs",
    "func": "unix::linux_like::_IO"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/unix/linux_like/mod.rs",
    "func": "unix::linux_like::_IOC"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "<arch::all::memchr::One as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "<arch::all::memchr::Three as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "<arch::all::memchr::Two as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::One::confirm"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::One::has_needle"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::One::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::Three::confirm"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::Three::has_needle"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::Three::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::Two::confirm"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::Two::has_needle"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::Two::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::has_zero_byte"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::splat"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/packedpair/mod.rs",
    "func": "<arch::all::packedpair::DefaultFrequencyRank as arch::all::packedpair::HeuristicFrequencyRank>::rank"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/packedpair/mod.rs",
    "func": "<arch::all::packedpair::Finder as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/packedpair/mod.rs",
    "func": "<arch::all::packedpair::Pair as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/packedpair/mod.rs",
    "func": "arch::all::packedpair::Finder::pair"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/packedpair/mod.rs",
    "func": "arch::all::packedpair::Pair::index1"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/packedpair/mod.rs",
    "func": "arch::all::packedpair::Pair::index2"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "<arch::all::rabinkarp::Finder as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "<arch::all::rabinkarp::FinderRev as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "<arch::all::rabinkarp::Hash as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "<arch::all::rabinkarp::Hash as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "<arch::all::rabinkarp::Hash as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "<arch::all::rabinkarp::Hash as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "arch::all::rabinkarp::Hash::add"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "arch::all::rabinkarp::Hash::del"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "arch::all::rabinkarp::Hash::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "arch::all::rabinkarp::Hash::roll"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/twoway.rs",
    "func": "<arch::all::twoway::ApproximateByteSet as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/twoway.rs",
    "func": "<arch::all::twoway::Finder as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/twoway.rs",
    "func": "<arch::all::twoway::FinderRev as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/twoway.rs",
    "func": "<arch::all::twoway::Shift as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/twoway.rs",
    "func": "<arch::all::twoway::SuffixKind as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/twoway.rs",
    "func": "<arch::all::twoway::SuffixOrdering as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/twoway.rs",
    "func": "<arch::all::twoway::TwoWay as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/twoway.rs",
    "func": "arch::all::twoway::ApproximateByteSet::contains"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/twoway.rs",
    "func": "arch::all::twoway::SuffixKind::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "<arch::x86_64::avx2::memchr::One as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "<arch::x86_64::avx2::memchr::Three as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "<arch::x86_64::avx2::memchr::Two as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::One::is_available"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::One::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::One::new_unchecked"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::Three::is_available"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::Three::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::Three::new_unchecked"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::Two::is_available"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::Two::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::Two::new_unchecked"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/packedpair.rs",
    "func": "<arch::x86_64::avx2::packedpair::Finder as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/packedpair.rs",
    "func": "arch::x86_64::avx2::packedpair::Finder::is_available"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/packedpair.rs",
    "func": "arch::x86_64::avx2::packedpair::Finder::min_haystack_len"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/packedpair.rs",
    "func": "arch::x86_64::avx2::packedpair::Finder::pair"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "<arch::x86_64::sse2::memchr::One as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "<arch::x86_64::sse2::memchr::Three as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "<arch::x86_64::sse2::memchr::Two as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::One::is_available"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::One::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::One::new_unchecked"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::Three::is_available"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::Three::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::Three::new_unchecked"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::Two::is_available"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::Two::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::Two::new_unchecked"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/packedpair.rs",
    "func": "<arch::x86_64::sse2::packedpair::Finder as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/packedpair.rs",
    "func": "arch::x86_64::sse2::packedpair::Finder::is_available"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/packedpair.rs",
    "func": "arch::x86_64::sse2::packedpair::Finder::min_haystack_len"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/packedpair.rs",
    "func": "arch::x86_64::sse2::packedpair::Finder::pair"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/mod.rs",
    "func": "<memmem::FinderBuilder as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/mod.rs",
    "func": "<memmem::FinderBuilder as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/mod.rs",
    "func": "memmem::FinderBuilder::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/mod.rs",
    "func": "memmem::FinderBuilder::prefilter"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "<memmem::searcher::PrefilterConfig as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "<memmem::searcher::PrefilterConfig as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "<memmem::searcher::PrefilterState as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "<memmem::searcher::SearcherRev as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "<memmem::searcher::SearcherRevKind as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "memmem::searcher::PrefilterConfig::is_none"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "memmem::searcher::PrefilterState::is_effective"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "memmem::searcher::PrefilterState::is_inert"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "memmem::searcher::PrefilterState::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "memmem::searcher::PrefilterState::skips"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "memmem::searcher::PrefilterState::update"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "<vector::SensibleMoveMask as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "<vector::SensibleMoveMask as vector::MoveMask>::all_zeros_except_least_significant"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "<vector::SensibleMoveMask as vector::MoveMask>::and"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "<vector::SensibleMoveMask as vector::MoveMask>::clear_least_significant_bit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "<vector::SensibleMoveMask as vector::MoveMask>::count_ones"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "<vector::SensibleMoveMask as vector::MoveMask>::first_offset"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "<vector::SensibleMoveMask as vector::MoveMask>::has_non_zero"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "<vector::SensibleMoveMask as vector::MoveMask>::last_offset"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "<vector::SensibleMoveMask as vector::MoveMask>::or"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::SensibleMoveMask::get_for_offset"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::x86avx2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m256i>::and"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::x86avx2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m256i>::cmpeq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::x86avx2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m256i>::movemask"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::x86avx2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m256i>::or"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::x86avx2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m256i>::splat"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::x86sse2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m128i>::and"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::x86sse2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m128i>::cmpeq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::x86sse2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m128i>::movemask"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::x86sse2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m128i>::or"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::x86sse2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m128i>::splat"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "<inflate::core::DecompressorOxide as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "<inflate::core::LocalVars as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "<inflate::core::State as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "<inflate::core::State as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "<inflate::core::State as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::DecompressorOxide::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::HuffmanTable::fast_lookup"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::HuffmanTable::lookup"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::HuffmanTable::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::HuffmanTable::tree_lookup"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::State::begin"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::end_of_input"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::num_extra_bits_for_distance_code"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::reverse_bits"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::undo_bytes"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::validate_zlib_header"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/mod.rs",
    "func": "<inflate::TINFLStatus as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/mod.rs",
    "func": "<inflate::TINFLStatus as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/mod.rs",
    "func": "<inflate::TINFLStatus as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/mod.rs",
    "func": "inflate::TINFLStatus::from_i32"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<DataFormat as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<DataFormat as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<DataFormat as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<MZError as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<MZError as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<MZError as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<MZFlush as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<MZFlush as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<MZFlush as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<MZStatus as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<MZStatus as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<MZStatus as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "MZFlush::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/archive.rs",
    "func": "<archive::AixFileHeader as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/archive.rs",
    "func": "<archive::AixHeader as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/archive.rs",
    "func": "<archive::AixMemberOffset as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/archive.rs",
    "func": "<archive::Header as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::AddressSize as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::AddressSize as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::AddressSize as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::Architecture as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::Architecture as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::Architecture as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::BinaryFormat as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::BinaryFormat as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::BinaryFormat as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::ComdatKind as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::ComdatKind as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::ComdatKind as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::FileFlags as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::FileFlags as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::FileFlags as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::RelocationEncoding as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::RelocationEncoding as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::RelocationEncoding as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::RelocationFlags as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::RelocationFlags as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::RelocationFlags as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::RelocationKind as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::RelocationKind as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::RelocationKind as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::SectionFlags as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::SectionFlags as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::SectionFlags as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::SectionKind as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::SectionKind as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::SectionKind as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::SegmentFlags as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::SegmentFlags as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::SegmentFlags as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::SubArchitecture as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::SubArchitecture as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::SubArchitecture as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::SymbolKind as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::SymbolKind as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::SymbolKind as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::SymbolScope as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::SymbolScope as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::SymbolScope as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "common::AddressSize::bytes"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "common::Architecture::address_size"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "common::BinaryFormat::native_object"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "common::SectionKind::is_bss"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/elf.rs",
    "func": "<elf::Ident as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/elf.rs",
    "func": "elf::ef_e2k_flag_to_mach"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/elf.rs",
    "func": "elf::ef_e2k_mach_to_flag"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/endian.rs",
    "func": "<endian::BigEndian as endian::Endian>::from_big_endian"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/endian.rs",
    "func": "<endian::BigEndian as endian::Endian>::is_big_endian"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/endian.rs",
    "func": "<endian::BigEndian as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/endian.rs",
    "func": "<endian::BigEndian as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/endian.rs",
    "func": "<endian::BigEndian as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/endian.rs",
    "func": "<endian::BigEndian as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/endian.rs",
    "func": "<endian::Endianness as endian::Endian>::from_big_endian"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/endian.rs",
    "func": "<endian::Endianness as endian::Endian>::is_big_endian"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/endian.rs",
    "func": "<endian::Endianness as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/endian.rs",
    "func": "<endian::Endianness as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/endian.rs",
    "func": "<endian::Endianness as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/endian.rs",
    "func": "<endian::Endianness as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/endian.rs",
    "func": "<endian::LittleEndian as endian::Endian>::from_big_endian"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/endian.rs",
    "func": "<endian::LittleEndian as endian::Endian>::is_big_endian"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/endian.rs",
    "func": "<endian::LittleEndian as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/endian.rs",
    "func": "<endian::LittleEndian as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/endian.rs",
    "func": "<endian::LittleEndian as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/endian.rs",
    "func": "<endian::LittleEndian as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "<macho::DyldCacheSlidePointer3 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "<macho::DyldCacheSlidePointer5 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "<macho::FatArch32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "<macho::FatArch64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "<macho::FatHeader as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "<macho::PtrauthKey as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "<macho::PtrauthKey as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "<macho::PtrauthKey as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "<macho::RelocationInfo as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "<macho::ScatteredRelocationInfo as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer3::addr_div"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer3::diversity"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer3::high8"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer3::is_auth"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer3::key"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer3::next"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer3::runtime_offset"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer3::target"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer5::addr_div"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer5::diversity"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer5::high8"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer5::is_auth"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer5::key_is_data"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer5::next"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer5::runtime_offset"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "macho::cpu_subtype_intel"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "macho::cpu_subtype_intel_family"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "macho::cpu_subtype_intel_model"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::AnonObjectHeader as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::AnonObjectHeaderBigobj as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::AnonObjectHeaderV2 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::Guid as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::Guid as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::Guid as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageAlpha64RuntimeFunctionEntry as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageAlphaRuntimeFunctionEntry as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageArchitectureEntry as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageArchiveMemberHeader as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageArm64RuntimeFunctionEntry as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageArmRuntimeFunctionEntry as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageAuxSymbolCrc as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageAuxSymbolFunction as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageAuxSymbolFunctionBeginEnd as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageAuxSymbolSection as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageAuxSymbolTokenDef as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageAuxSymbolWeak as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageBaseRelocation as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageBoundForwarderRef as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageBoundImportDescriptor as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageCoffSymbolsHeader as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageCor20Header as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageDataDirectory as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageDebugDirectory as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageDebugMisc as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageDelayloadDescriptor as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageDynamicRelocation32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageDynamicRelocation32V2 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageDynamicRelocation64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageDynamicRelocation64V2 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageDynamicRelocationTable as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageEnclaveConfig32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageEnclaveConfig64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageEnclaveImport as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageEpilogueDynamicRelocationHeader as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageExportDirectory as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageFileHeader as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageFunctionEntry as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageFunctionEntry64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageHotPatchBase as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageHotPatchHashes as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageHotPatchInfo as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageImportByName as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageImportDescriptor as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageLinenumber as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageLoadConfigCodeIntegrity as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageLoadConfigDirectory32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageLoadConfigDirectory64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageNtHeaders32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageNtHeaders64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageOptionalHeader32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageOptionalHeader64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageOs2Header as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImagePrologueDynamicRelocationHeader as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageRelocation as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageResourceDataEntry as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageResourceDirStringU as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageResourceDirectory as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageResourceDirectoryEntry as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageResourceDirectoryString as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageRuntimeFunctionEntry as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageSectionHeader as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageSectionHeader as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageSymbol as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageSymbolBytes as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageSymbolEx as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageSymbolExBytes as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageThunkData32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageThunkData64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageTlsDirectory32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageTlsDirectory64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageVxdHeader as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImportObjectHeader as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::MaskedRichHeaderEntry as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::NonPagedDebugInfo as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "pe::Guid::data1"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "pe::Guid::data2"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "pe::Guid::data3"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "pe::Guid::data4"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "pe::ImageDelayloadDescriptor::is_null"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "pe::ImageImportDescriptor::is_null"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/archive.rs",
    "func": "<read::archive::ArchiveKind as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/archive.rs",
    "func": "<read::archive::ArchiveKind as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/archive.rs",
    "func": "<read::archive::ArchiveKind as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/archive.rs",
    "func": "<read::archive::ArchiveOffset as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/file.rs",
    "func": "<pe::AnonObjectHeaderBigobj as read::coff::file::CoffHeader>::characteristics"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/file.rs",
    "func": "<pe::AnonObjectHeaderBigobj as read::coff::file::CoffHeader>::is_type_bigobj"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/file.rs",
    "func": "<pe::AnonObjectHeaderBigobj as read::coff::file::CoffHeader>::machine"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/file.rs",
    "func": "<pe::AnonObjectHeaderBigobj as read::coff::file::CoffHeader>::number_of_sections"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/file.rs",
    "func": "<pe::AnonObjectHeaderBigobj as read::coff::file::CoffHeader>::number_of_symbols"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/file.rs",
    "func": "<pe::AnonObjectHeaderBigobj as read::coff::file::CoffHeader>::pointer_to_symbol_table"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/file.rs",
    "func": "<pe::ImageFileHeader as read::coff::file::CoffHeader>::characteristics"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/file.rs",
    "func": "<pe::ImageFileHeader as read::coff::file::CoffHeader>::is_type_bigobj"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/file.rs",
    "func": "<pe::ImageFileHeader as read::coff::file::CoffHeader>::machine"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/file.rs",
    "func": "<pe::ImageFileHeader as read::coff::file::CoffHeader>::number_of_sections"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/file.rs",
    "func": "<pe::ImageFileHeader as read::coff::file::CoffHeader>::number_of_symbols"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/file.rs",
    "func": "<pe::ImageFileHeader as read::coff::file::CoffHeader>::pointer_to_symbol_table"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/import.rs",
    "func": "<read::coff::import::ImportType as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/import.rs",
    "func": "<read::coff::import::ImportType as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/import.rs",
    "func": "<read::coff::import::ImportType as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/import.rs",
    "func": "read::coff::import::<impl pe::ImportObjectHeader>::import_type"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/import.rs",
    "func": "read::coff::import::<impl pe::ImportObjectHeader>::name_type"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/relocation.rs",
    "func": "read::coff::relocation::<impl pe::ImageRelocation>::symbol"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/section.rs",
    "func": "<read::coff::section::SectionTable<'_> as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/section.rs",
    "func": "read::coff::section::<impl pe::ImageSectionHeader>::coff_alignment"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/section.rs",
    "func": "read::coff::section::<impl pe::ImageSectionHeader>::coff_file_range"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/section.rs",
    "func": "read::coff::section::<impl pe::ImageSectionHeader>::kind"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/section.rs",
    "func": "read::coff::section::<impl pe::ImageSectionHeader>::name_offset"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/section.rs",
    "func": "read::coff::section::<impl pe::ImageSectionHeader>::raw_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbol as read::coff::symbol::ImageSymbol>::number_of_aux_symbols"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbol as read::coff::symbol::ImageSymbol>::raw_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbol as read::coff::symbol::ImageSymbol>::section_number"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbol as read::coff::symbol::ImageSymbol>::storage_class"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbol as read::coff::symbol::ImageSymbol>::typ"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbol as read::coff::symbol::ImageSymbol>::value"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbolEx as read::coff::symbol::ImageSymbol>::number_of_aux_symbols"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbolEx as read::coff::symbol::ImageSymbol>::raw_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbolEx as read::coff::symbol::ImageSymbol>::section_number"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbolEx as read::coff::symbol::ImageSymbol>::storage_class"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbolEx as read::coff::symbol::ImageSymbol>::typ"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbolEx as read::coff::symbol::ImageSymbol>::value"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/symbol.rs",
    "func": "read::coff::symbol::<impl pe::ImageAuxSymbolWeak>::default_symbol"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/elf/relocation.rs",
    "func": "<read::elf::relocation::Crel as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/elf/relocation.rs",
    "func": "<read::elf::relocation::CrelIteratorHeader as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/elf/relocation.rs",
    "func": "<read::elf::relocation::CrelIteratorState as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/elf/relocation.rs",
    "func": "<read::elf::relocation::CrelIteratorState as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/elf/relocation.rs",
    "func": "<read::elf::relocation::RelocationSections as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/elf/relocation.rs",
    "func": "read::elf::relocation::Crel::symbol"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/elf/version.rs",
    "func": "<read::elf::version::Version<'_> as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/elf/version.rs",
    "func": "<read::elf::version::VersionIndex as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/elf/version.rs",
    "func": "<read::elf::version::VersionIndex as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/elf/version.rs",
    "func": "read::elf::version::VersionIndex::index"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/elf/version.rs",
    "func": "read::elf::version::VersionIndex::is_global"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/elf/version.rs",
    "func": "read::elf::version::VersionIndex::is_hidden"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/elf/version.rs",
    "func": "read::elf::version::VersionIndex::is_local"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/macho/dyld_cache.rs",
    "func": "<read::macho::dyld_cache::RelocationStateV2 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/macho/dyld_cache.rs",
    "func": "<read::macho::dyld_cache::RelocationStateV2 as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/macho/dyld_cache.rs",
    "func": "<read::macho::dyld_cache::RelocationStateV2 as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/macho/dyld_cache.rs",
    "func": "<read::macho::dyld_cache::RelocationStateV3 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/macho/dyld_cache.rs",
    "func": "<read::macho::dyld_cache::RelocationStateV3 as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/macho/dyld_cache.rs",
    "func": "<read::macho::dyld_cache::RelocationStateV3 as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/macho/dyld_cache.rs",
    "func": "<read::macho::dyld_cache::RelocationStateV5 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/macho/dyld_cache.rs",
    "func": "<read::macho::dyld_cache::RelocationStateV5 as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/macho/dyld_cache.rs",
    "func": "<read::macho::dyld_cache::RelocationStateV5 as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/macho/fat.rs",
    "func": "<macho::FatArch32 as read::macho::fat::FatArch>::align"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/macho/fat.rs",
    "func": "<macho::FatArch32 as read::macho::fat::FatArch>::cpusubtype"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/macho/fat.rs",
    "func": "<macho::FatArch32 as read::macho::fat::FatArch>::cputype"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/macho/fat.rs",
    "func": "<macho::FatArch32 as read::macho::fat::FatArch>::offset"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/macho/fat.rs",
    "func": "<macho::FatArch32 as read::macho::fat::FatArch>::size"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/macho/fat.rs",
    "func": "<macho::FatArch64 as read::macho::fat::FatArch>::align"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/macho/fat.rs",
    "func": "<macho::FatArch64 as read::macho::fat::FatArch>::cpusubtype"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/macho/fat.rs",
    "func": "<macho::FatArch64 as read::macho::fat::FatArch>::cputype"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/macho/fat.rs",
    "func": "<macho::FatArch64 as read::macho::fat::FatArch>::offset"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/macho/fat.rs",
    "func": "<macho::FatArch64 as read::macho::fat::FatArch>::size"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::CompressedFileRange as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::CompressedFileRange as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::CompressedFileRange as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::CompressionFormat as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::CompressionFormat as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::CompressionFormat as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::FileKind as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::FileKind as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::FileKind as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::ObjectKind as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::ObjectKind as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::ObjectKind as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::ObjectMap<'_> as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::ObjectMapEntry<'_> as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::RelocationMap as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::RelocationMapEntry as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::RelocationMapEntry as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::RelocationMapEntry as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::RelocationTarget as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::RelocationTarget as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::RelocationTarget as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::SectionIndex as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::SectionIndex as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::SectionIndex as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::SymbolIndex as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::SymbolIndex as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::SymbolIndex as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::SymbolSection as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::SymbolSection as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::SymbolSection as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "read::CompressedFileRange::none"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "read::Relocation::addend"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "read::Relocation::encoding"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "read::Relocation::flags"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "read::Relocation::has_implicit_addend"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "read::Relocation::kind"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "read::Relocation::set_addend"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "read::Relocation::size"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "read::Relocation::target"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "read::SymbolSection::index"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/data_directory.rs",
    "func": "read::pe::data_directory::<impl pe::ImageDataDirectory>::address_range"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageNtHeaders32 as read::pe::file::ImageNtHeaders>::file_header"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageNtHeaders32 as read::pe::file::ImageNtHeaders>::is_type_64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageNtHeaders32 as read::pe::file::ImageNtHeaders>::is_valid_optional_magic"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageNtHeaders32 as read::pe::file::ImageNtHeaders>::optional_header"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageNtHeaders32 as read::pe::file::ImageNtHeaders>::signature"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageNtHeaders64 as read::pe::file::ImageNtHeaders>::file_header"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageNtHeaders64 as read::pe::file::ImageNtHeaders>::is_type_64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageNtHeaders64 as read::pe::file::ImageNtHeaders>::is_valid_optional_magic"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageNtHeaders64 as read::pe::file::ImageNtHeaders>::optional_header"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageNtHeaders64 as read::pe::file::ImageNtHeaders>::signature"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::address_of_entry_point"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::base_of_code"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::base_of_data"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::check_sum"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::dll_characteristics"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::file_alignment"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::image_base"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::loader_flags"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::magic"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::major_image_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::major_linker_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::major_operating_system_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::major_subsystem_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::minor_image_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::minor_linker_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::minor_operating_system_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::minor_subsystem_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::number_of_rva_and_sizes"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::section_alignment"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_code"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_headers"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_heap_commit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_heap_reserve"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_image"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_initialized_data"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_stack_commit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_stack_reserve"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_uninitialized_data"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::subsystem"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::win32_version_value"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::address_of_entry_point"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::base_of_code"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::base_of_data"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::check_sum"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::dll_characteristics"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::file_alignment"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::image_base"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::loader_flags"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::magic"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::major_image_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::major_linker_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::major_operating_system_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::major_subsystem_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::minor_image_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::minor_linker_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::minor_operating_system_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::minor_subsystem_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::number_of_rva_and_sizes"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::section_alignment"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_code"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_headers"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_heap_commit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_heap_reserve"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_image"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_initialized_data"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_stack_commit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_stack_reserve"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_uninitialized_data"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::subsystem"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::win32_version_value"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/import.rs",
    "func": "<pe::ImageThunkData32 as read::pe::import::ImageThunkData>::address"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/import.rs",
    "func": "<pe::ImageThunkData32 as read::pe::import::ImageThunkData>::is_ordinal"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/import.rs",
    "func": "<pe::ImageThunkData32 as read::pe::import::ImageThunkData>::ordinal"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/import.rs",
    "func": "<pe::ImageThunkData32 as read::pe::import::ImageThunkData>::raw"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/import.rs",
    "func": "<pe::ImageThunkData64 as read::pe::import::ImageThunkData>::address"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/import.rs",
    "func": "<pe::ImageThunkData64 as read::pe::import::ImageThunkData>::is_ordinal"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/import.rs",
    "func": "<pe::ImageThunkData64 as read::pe::import::ImageThunkData>::ordinal"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/import.rs",
    "func": "<pe::ImageThunkData64 as read::pe::import::ImageThunkData>::raw"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/relocation.rs",
    "func": "<read::pe::relocation::Relocation as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/relocation.rs",
    "func": "<read::pe::relocation::Relocation as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/relocation.rs",
    "func": "<read::pe::relocation::RelocationBlockIterator<'_> as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/resource.rs",
    "func": "<read::pe::resource::ResourceName as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/resource.rs",
    "func": "read::pe::resource::<impl pe::ImageResourceDirectoryEntry>::data_offset"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/resource.rs",
    "func": "read::pe::resource::<impl pe::ImageResourceDirectoryEntry>::has_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/resource.rs",
    "func": "read::pe::resource::<impl pe::ImageResourceDirectoryEntry>::id"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/resource.rs",
    "func": "read::pe::resource::<impl pe::ImageResourceDirectoryEntry>::is_table"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/resource.rs",
    "func": "read::pe::resource::<impl pe::ImageResourceDirectoryEntry>::name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/resource.rs",
    "func": "read::pe::resource::<impl pe::ImageResourceDirectoryEntry>::name_or_id"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/resource.rs",
    "func": "read::pe::resource::ResourceNameOrId::id"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/resource.rs",
    "func": "read::pe::resource::ResourceNameOrId::name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/rich.rs",
    "func": "<read::pe::rich::RichHeaderEntry as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/section.rs",
    "func": "read::pe::section::<impl pe::ImageSectionHeader>::contains_rva"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/section.rs",
    "func": "read::pe::section::<impl pe::ImageSectionHeader>::pe_address_range"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/section.rs",
    "func": "read::pe::section::<impl pe::ImageSectionHeader>::pe_file_range"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/section.rs",
    "func": "read::pe::section::<impl pe::ImageSectionHeader>::pe_file_range_at"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/traits.rs",
    "func": "<read::traits::NoDynamicRelocationIterator as rustc_std_workspace_core::iter::Iterator>::next"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/util.rs",
    "func": "<read::util::ByteString<'_> as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/util.rs",
    "func": "<read::util::Bytes<'_> as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/util.rs",
    "func": "read::util::align"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_algndata"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_algntext"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_bsize"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_cpuflag"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_cputype"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_data_start"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_datapsize"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_debugger"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_dsize"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_entry"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_flags"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_maxdata"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_maxstack"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_mflag"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_modtype"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_snbss"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_sndata"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_snentry"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_snloader"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_sntbss"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_sntdata"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_sntext"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_sntoc"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_stackpsize"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_text_start"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_textpsize"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_toc"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_tsize"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_vstamp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_x64flags"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader32 as read::xcoff::file::FileHeader>::f_flags"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader32 as read::xcoff::file::FileHeader>::f_magic"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader32 as read::xcoff::file::FileHeader>::f_nscns"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader32 as read::xcoff::file::FileHeader>::f_nsyms"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader32 as read::xcoff::file::FileHeader>::f_opthdr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader32 as read::xcoff::file::FileHeader>::f_symptr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader32 as read::xcoff::file::FileHeader>::f_timdat"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader32 as read::xcoff::file::FileHeader>::is_type_64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader64 as read::xcoff::file::FileHeader>::f_flags"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader64 as read::xcoff::file::FileHeader>::f_magic"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader64 as read::xcoff::file::FileHeader>::f_nscns"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader64 as read::xcoff::file::FileHeader>::f_nsyms"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader64 as read::xcoff::file::FileHeader>::f_opthdr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader64 as read::xcoff::file::FileHeader>::f_symptr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader64 as read::xcoff::file::FileHeader>::f_timdat"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader64 as read::xcoff::file::FileHeader>::is_type_64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/relocation.rs",
    "func": "<xcoff::Rel32 as read::xcoff::relocation::Rel>::r_rsize"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/relocation.rs",
    "func": "<xcoff::Rel32 as read::xcoff::relocation::Rel>::r_rtype"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/relocation.rs",
    "func": "<xcoff::Rel32 as read::xcoff::relocation::Rel>::r_symndx"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/relocation.rs",
    "func": "<xcoff::Rel32 as read::xcoff::relocation::Rel>::r_vaddr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/relocation.rs",
    "func": "<xcoff::Rel64 as read::xcoff::relocation::Rel>::r_rsize"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/relocation.rs",
    "func": "<xcoff::Rel64 as read::xcoff::relocation::Rel>::r_rtype"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/relocation.rs",
    "func": "<xcoff::Rel64 as read::xcoff::relocation::Rel>::r_symndx"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/relocation.rs",
    "func": "<xcoff::Rel64 as read::xcoff::relocation::Rel>::r_vaddr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_flags"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_lnnoptr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_nlnno"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_nreloc"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_paddr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_relptr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_scnptr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_size"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_vaddr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_flags"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_lnnoptr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_nlnno"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_nreloc"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_paddr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_relptr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_scnptr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_size"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_vaddr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux32 as read::xcoff::symbol::CsectAux>::x_auxtype"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux32 as read::xcoff::symbol::CsectAux>::x_parmhash"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux32 as read::xcoff::symbol::CsectAux>::x_scnlen"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux32 as read::xcoff::symbol::CsectAux>::x_smclas"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux32 as read::xcoff::symbol::CsectAux>::x_smtyp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux32 as read::xcoff::symbol::CsectAux>::x_snhash"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux32 as read::xcoff::symbol::CsectAux>::x_snstab"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux32 as read::xcoff::symbol::CsectAux>::x_stab"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux64 as read::xcoff::symbol::CsectAux>::x_auxtype"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux64 as read::xcoff::symbol::CsectAux>::x_parmhash"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux64 as read::xcoff::symbol::CsectAux>::x_scnlen"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux64 as read::xcoff::symbol::CsectAux>::x_smclas"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux64 as read::xcoff::symbol::CsectAux>::x_smtyp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux64 as read::xcoff::symbol::CsectAux>::x_snhash"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux64 as read::xcoff::symbol::CsectAux>::x_snstab"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux64 as read::xcoff::symbol::CsectAux>::x_stab"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::FileAux32 as read::xcoff::symbol::FileAux>::x_auxtype"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::FileAux32 as read::xcoff::symbol::FileAux>::x_fname"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::FileAux32 as read::xcoff::symbol::FileAux>::x_ftype"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::FileAux64 as read::xcoff::symbol::FileAux>::x_auxtype"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::FileAux64 as read::xcoff::symbol::FileAux>::x_fname"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::FileAux64 as read::xcoff::symbol::FileAux>::x_ftype"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol32 as read::xcoff::symbol::Symbol>::n_numaux"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol32 as read::xcoff::symbol::Symbol>::n_sclass"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol32 as read::xcoff::symbol::Symbol>::n_scnum"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol32 as read::xcoff::symbol::Symbol>::n_type"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol32 as read::xcoff::symbol::Symbol>::n_value"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol32 as read::xcoff::symbol::Symbol>::name_offset"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol64 as read::xcoff::symbol::Symbol>::n_numaux"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol64 as read::xcoff::symbol::Symbol>::n_sclass"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol64 as read::xcoff::symbol::Symbol>::n_scnum"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol64 as read::xcoff::symbol::Symbol>::n_type"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol64 as read::xcoff::symbol::Symbol>::n_value"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol64 as read::xcoff::symbol::Symbol>::name_offset"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::AuxHeader32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::BlockAux32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::BlockAux64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::CsectAux32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::CsectAux64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::DwarfAux32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::DwarfAux64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::ExpAux as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::FileAux32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::FileAux64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::FileHeader32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::FileHeader64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::FunAux32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::FunAux64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::Rel32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::Rel64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::SectionHeader32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::SectionHeader64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::StatAux as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::Symbol32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::Symbol64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::SymbolBytes as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26/src/lib.rs",
    "func": "<SizeLimitExhausted as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26/src/lib.rs",
    "func": "<TryDemangleError as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26/src/lib.rs",
    "func": "is_ascii_alphanumeric"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26/src/lib.rs",
    "func": "is_ascii_punctuation"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26/src/v0.rs",
    "func": "<v0::ParseError as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26/src/v0.rs",
    "func": "<v0::ParseError as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26/src/v0.rs",
    "func": "v0::HexNibbles::<'s>::try_parse_str_chars::{closure#2}::{closure#0}::utf8_len_from_first_byte"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26/src/v0.rs",
    "func": "v0::ParseError::message"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26/src/v0.rs",
    "func": "v0::basic_type"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<EscapeError as rustc_std_workspace_std::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<EscapeError as rustc_std_workspace_std::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<MixedUnit as rustc_std_workspace_std::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<MixedUnit as rustc_std_workspace_std::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<MixedUnit as rustc_std_workspace_std::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<MixedUnit as rustc_std_workspace_std::convert::From<rustc_std_workspace_std::num::NonZero<char>>>::from"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<MixedUnit as rustc_std_workspace_std::convert::From<rustc_std_workspace_std::num::NonZero<u8>>>::from"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<MixedUnit as rustc_std_workspace_std::convert::TryFrom<char>>::try_from"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<MixedUnit as rustc_std_workspace_std::convert::TryFrom<u8>>::try_from"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<Mode as rustc_std_workspace_std::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<Mode as rustc_std_workspace_std::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<[u8] as CheckRaw>::char2raw_unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<[u8] as Unescape>::char2unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<[u8] as Unescape>::hex2unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<[u8] as Unescape>::nonzero_byte2unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<[u8] as Unescape>::unicode2unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<rustc_std_workspace_std::ffi::CStr as CheckRaw>::char2raw_unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<rustc_std_workspace_std::ffi::CStr as Unescape>::char2unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<rustc_std_workspace_std::ffi::CStr as Unescape>::hex2unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<rustc_std_workspace_std::ffi::CStr as Unescape>::nonzero_byte2unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<rustc_std_workspace_std::ffi::CStr as Unescape>::unicode2unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<str as CheckRaw>::char2raw_unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<str as Unescape>::char2unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<str as Unescape>::hex2unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<str as Unescape>::nonzero_byte2unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<str as Unescape>::unicode2unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "EscapeError::is_fatal"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "Mode::in_double_quotes"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "Mode::prefix_noraw"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "char2byte"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "simple_escape"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/arbitrary/pointer.rs",
    "func": "<kani::arbitrary_ptr::AllocationStatus as clone::Clone>::clone"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/arbitrary/pointer.rs",
    "func": "<kani::arbitrary_ptr::AllocationStatus as cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/arbitrary/pointer.rs",
    "func": "<kani::arbitrary_ptr::AllocationStatus as cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i128> as kani::KaniIntoIter>::kani_into_iter"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i128> as kani::KaniIter>::assumption"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i128> as kani::KaniIter>::first"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i128> as kani::KaniIter>::len"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i128> as kani::KaniIter>::nth"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i16> as kani::KaniIntoIter>::kani_into_iter"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i16> as kani::KaniIter>::assumption"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i16> as kani::KaniIter>::first"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i16> as kani::KaniIter>::len"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i16> as kani::KaniIter>::nth"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i32> as kani::KaniIntoIter>::kani_into_iter"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i32> as kani::KaniIter>::assumption"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i32> as kani::KaniIter>::first"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i32> as kani::KaniIter>::len"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i32> as kani::KaniIter>::nth"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i64> as kani::KaniIntoIter>::kani_into_iter"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i64> as kani::KaniIter>::assumption"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i64> as kani::KaniIter>::first"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i64> as kani::KaniIter>::len"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i64> as kani::KaniIter>::nth"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i8> as kani::KaniIntoIter>::kani_into_iter"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i8> as kani::KaniIter>::assumption"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i8> as kani::KaniIter>::first"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i8> as kani::KaniIter>::len"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i8> as kani::KaniIter>::nth"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<isize> as kani::KaniIntoIter>::kani_into_iter"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<isize> as kani::KaniIter>::assumption"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<isize> as kani::KaniIter>::first"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<isize> as kani::KaniIter>::len"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<isize> as kani::KaniIter>::nth"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u128> as kani::KaniIntoIter>::kani_into_iter"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u128> as kani::KaniIter>::assumption"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u128> as kani::KaniIter>::first"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u128> as kani::KaniIter>::len"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u128> as kani::KaniIter>::nth"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u16> as kani::KaniIntoIter>::kani_into_iter"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u16> as kani::KaniIter>::assumption"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u16> as kani::KaniIter>::first"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u16> as kani::KaniIter>::len"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u16> as kani::KaniIter>::nth"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u32> as kani::KaniIntoIter>::kani_into_iter"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u32> as kani::KaniIter>::assumption"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u32> as kani::KaniIter>::first"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u32> as kani::KaniIter>::len"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u32> as kani::KaniIter>::nth"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u64> as kani::KaniIntoIter>::kani_into_iter"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u64> as kani::KaniIter>::assumption"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u64> as kani::KaniIter>::first"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u64> as kani::KaniIter>::len"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u64> as kani::KaniIter>::nth"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u8> as kani::KaniIntoIter>::kani_into_iter"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u8> as kani::KaniIter>::assumption"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u8> as kani::KaniIter>::first"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u8> as kani::KaniIter>::len"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u8> as kani::KaniIter>::nth"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<usize> as kani::KaniIntoIter>::kani_into_iter"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<usize> as kani::KaniIter>::assumption"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<usize> as kani::KaniIter>::first"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<usize> as kani::KaniIter>::len"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<usize> as kani::KaniIter>::nth"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/mem_init.rs",
    "func": "kani::mem_init::MemoryInitializationState::new"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/models.rs",
    "func": "<isize as kani::rustc_intrinsics::ToISize>::to_isize"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/models.rs",
    "func": "<usize as kani::rustc_intrinsics::ToISize>::to_isize"
  },
  {
    "file": "alloc/src/wtf8/mod.rs",
    "func": "wtf8::<impl core::wtf8::Wtf8>::empty_box"
  },
  {
    "file": "alloc/src/wtf8/mod.rs",
    "func": "wtf8::Wtf8Buf::new"
  },
  {
    "file": "alloc/src/wtf8/mod.rs",
    "func": "wtf8::Wtf8Buf::with_capacity"
  },
  {
    "file": "alloc/src/wtf8/mod.rs",
    "func": "wtf8::decode_surrogate_pair"
  },
  {
    "file": "backtrace/src/backtrace/libunwind.rs",
    "func": "<backtrace_rs::backtrace::libunwind::Bomb as core::ops::Drop>::drop"
  },
  {
    "file": "backtrace/src/print.rs",
    "func": "<backtrace_rs::print::PrintFmt as core::clone::Clone>::clone"
  },
  {
    "file": "backtrace/src/print.rs",
    "func": "<backtrace_rs::print::PrintFmt as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "backtrace/src/print.rs",
    "func": "<backtrace_rs::print::PrintFmt as core::cmp::PartialEq>::eq"
  },
  {
    "file": "backtrace/src/symbolize/gimli.rs",
    "func": "<backtrace_rs::symbolize::gimli::Cache as core::default::Default>::default"
  },
  {
    "file": "backtrace/src/symbolize/gimli.rs",
    "func": "backtrace_rs::symbolize::gimli::Cache::new"
  },
  {
    "file": "backtrace/src/symbolize/gimli.rs",
    "func": "backtrace_rs::symbolize::gimli::clear_symbol_cache"
  },
  {
    "file": "backtrace/src/symbolize/gimli/elf.rs",
    "func": "backtrace_rs::symbolize::gimli::elf::debug_path_exists"
  },
  {
    "file": "backtrace/src/symbolize/gimli/libs_dl_iterate_phdr.rs",
    "func": "backtrace_rs::symbolize::gimli::libs_dl_iterate_phdr::native_libraries"
  },
  {
    "file": "backtrace/src/symbolize/gimli/mmap_unix.rs",
    "func": "backtrace_rs::symbolize::gimli::mmap::Mmap::map"
  },
  {
    "file": "backtrace/src/symbolize/gimli/parse_running_mmaps_unix.rs",
    "func": "backtrace_rs::symbolize::gimli::parse_running_mmaps::parse_maps"
  },
  {
    "file": "backtrace/src/symbolize/gimli/stash.rs",
    "func": "backtrace_rs::symbolize::gimli::stash::Stash::new"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/cmp.rs",
    "func": "<float::cmp::Result as core::clone::Clone>::clone"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/cmp.rs",
    "func": "float::cmp::Result::to_ge_abi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/cmp.rs",
    "func": "float::cmp::Result::to_le_abi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u128_to_f128_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u128_to_f32_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u128_to_f64_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u32_to_f128_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u32_to_f32_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u32_to_f64_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u64_to_f128_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u64_to_f32_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u64_to_f64_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::eq_repr"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::eq_repr::is_nan"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::exp"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::frac"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::from_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::from_parts"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::imp_frac"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::is_sign_negative"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::is_subnormal"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::normalize"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::to_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::to_bits_signed"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::eq_repr"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::eq_repr::is_nan"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::exp"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::frac"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::from_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::from_parts"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::imp_frac"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::is_sign_negative"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::is_subnormal"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::normalize"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::to_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::to_bits_signed"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::eq_repr"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::eq_repr::is_nan"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::exp"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::frac"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::from_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::from_parts"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::imp_frac"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::is_sign_negative"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::is_subnormal"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::normalize"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::to_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::to_bits_signed"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::eq_repr"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::eq_repr::is_nan"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::exp"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::frac"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::from_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::from_parts"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::imp_frac"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::is_sign_negative"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::is_subnormal"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::normalize"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::to_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::to_bits_signed"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::i256 as core::clone::Clone>::clone"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::i256 as core::cmp::PartialEq>::eq"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::i256 as core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::i256 as core::ops::BitOr>::bitor"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::i256 as core::ops::Not>::not"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::i256 as core::ops::Shl<u32>>::shl"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::i256 as int::traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::i256 as int::traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::u256 as core::clone::Clone>::clone"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::u256 as core::cmp::PartialEq>::eq"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::u256 as core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::u256 as core::ops::BitOr>::bitor"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::u256 as core::ops::Not>::not"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::u256 as core::ops::Shl<u32>>::shl"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::u256 as core::ops::Shr<u32>>::shr"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::u256 as int::traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::u256 as int::traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for i128>::widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for i128>::widen_hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for i128>::widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for i128>::zero_widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for i128>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for u128>::widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for u128>::widen_hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for u128>::widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for u128>::zero_widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for u128>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::i256::unsigned"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::u256::signed"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/mul.rs",
    "func": "int::mul::i128_overflowing_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/mul.rs",
    "func": "int::mul::i32_overflowing_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/mul.rs",
    "func": "int::mul::i64_overflowing_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/asymmetric.rs",
    "func": "int::specialized_div_rem::u128_div_rem"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/binary_long.rs",
    "func": "int::specialized_div_rem::u32_div_rem"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/binary_long.rs",
    "func": "int::specialized_div_rem::u64_div_rem"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/delegate.rs",
    "func": "int::specialized_div_rem::delegate::u128_divide_sparc"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/mod.rs",
    "func": "int::specialized_div_rem::u128_by_u64_div_rem"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/mod.rs",
    "func": "int::specialized_div_rem::u32_by_u32_div_rem"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/mod.rs",
    "func": "int::specialized_div_rem::u64_by_u64_div_rem"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/mod.rs",
    "func": "int::specialized_div_rem::zero_div_fn"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/norm_shift.rs",
    "func": "int::specialized_div_rem::u32_normalization_shift"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/norm_shift.rs",
    "func": "int::specialized_div_rem::u64_normalization_shift"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i128 as int::traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i128 as int::traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i16 as int::traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i16 as int::traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i16 as int::traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i16 as int::traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i16 as int::traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i16 as int::traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i16 as int::traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i32 as int::traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i32 as int::traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i32 as int::traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i32 as int::traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i32 as int::traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i32 as int::traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i32 as int::traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i64 as int::traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i64 as int::traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i64 as int::traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i64 as int::traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i64 as int::traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i64 as int::traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i64 as int::traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i8 as int::traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i8 as int::traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i8 as int::traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i8 as int::traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i8 as int::traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u128 as int::traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u128 as int::traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u16 as int::traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u16 as int::traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u16 as int::traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u16 as int::traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u16 as int::traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u16 as int::traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u16 as int::traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u32 as int::traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u32 as int::traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u32 as int::traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u32 as int::traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u32 as int::traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u32 as int::traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u32 as int::traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u64 as int::traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u64 as int::traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u64 as int::traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u64 as int::traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u64 as int::traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u64 as int::traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u64 as int::traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u8 as int::traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u8 as int::traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u8 as int::traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u8 as int::traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u8 as int::traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::add::__adddf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::add::__adddf3::__adddf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::add::__addhf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::add::__addhf3::__addhf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::add::__addsf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::add::__addsf3::__addsf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::add::__addtf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::add::__addtf3::__addtf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__eqdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__eqdf2::__eqdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__eqhf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__eqhf2::__eqhf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__eqsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__eqsf2::__eqsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__eqtf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__eqtf2::__eqtf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gedf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gedf2::__gedf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gehf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gehf2::__gehf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gesf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gesf2::__gesf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__getf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__getf2::__getf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gtdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gtdf2::__gtdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gthf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gthf2::__gthf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gtsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gtsf2::__gtsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gttf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gttf2::__gttf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__ledf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__ledf2::__ledf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__lehf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__lehf2::__lehf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__lesf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__lesf2::__lesf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__letf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__letf2::__letf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__ltdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__ltdf2::__ltdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__lthf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__lthf2::__lthf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__ltsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__ltsf2::__ltsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__lttf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__lttf2::__lttf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__nedf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__nedf2::__nedf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__nehf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__nehf2::__nehf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__nesf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__nesf2::__nesf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__netf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__netf2::__netf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__unorddf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__unorddf2::__unorddf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__unordhf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__unordhf2::__unordhf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__unordsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__unordsf2::__unordsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__unordtf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__unordtf2::__unordtf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixdfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixdfdi::__fixdfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixdfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixdfsi::__fixdfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixdfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixdfti::__fixdfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixsfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixsfdi::__fixsfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixsfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixsfsi::__fixsfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixsfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixsfti::__fixsfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixtfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixtfdi::__fixtfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixtfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixtfsi::__fixtfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixtfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixtfti::__fixtfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunsdfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunsdfdi::__fixunsdfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunsdfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunsdfsi::__fixunsdfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunsdfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunsdfti::__fixunsdfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunssfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunssfdi::__fixunssfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunssfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunssfsi::__fixunssfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunssfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunssfti::__fixunssfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunstfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunstfdi::__fixunstfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunstfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunstfsi::__fixunstfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunstfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunstfti::__fixunstfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatdidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatdidf::__floatdidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatdisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatdisf::__floatdisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatditf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatditf::__floatditf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatsidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatsidf::__floatsidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatsisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatsisf::__floatsisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatsitf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatsitf::__floatsitf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floattidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floattidf::__floattidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floattisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floattisf::__floattisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floattitf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floattitf::__floattitf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatundidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatundidf::__floatundidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatundisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatundisf::__floatundisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatunditf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatunditf::__floatunditf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatunsidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatunsidf::__floatunsidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatunsisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatunsisf::__floatunsisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatunsitf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatunsitf::__floatunsitf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatuntidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatuntidf::__floatuntidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatuntisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatuntisf::__floatuntisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatuntitf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatuntitf::__floatuntitf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::div::__divdf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::div::__divdf3::__divdf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::div::__divsf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::div::__divsf3::__divsf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::div::__divtf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::div::__divtf3::__divtf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extenddftf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extenddftf2::__extenddftf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendhfdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendhfdf2::__extendhfdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendhfsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendhfsf2::__extendhfsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendhftf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendhftf2::__extendhftf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendsfdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendsfdf2::__extendsfdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendsftf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendsftf2::__extendsftf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__gnu_h2f_ieee"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__gnu_h2f_ieee::__gnu_h2f_ieee"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::mul::__muldf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::mul::__muldf3::__muldf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::mul::__mulhf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::mul::__mulhf3::__mulhf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::mul::__mulsf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::mul::__mulsf3::__mulsf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::mul::__multf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::mul::__multf3::__multf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::pow::__powidf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::pow::__powidf2::__powidf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::pow::__powisf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::pow::__powisf2::__powisf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::pow::__powitf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::pow::__powitf2::__powitf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::sub::__subdf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::sub::__subdf3::__subdf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::sub::__subhf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::sub::__subhf3::__subhf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::sub::__subsf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::sub::__subsf3::__subsf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::sub::__subtf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::sub::__subtf3::__subtf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__gnu_f2h_ieee"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__gnu_f2h_ieee::__gnu_f2h_ieee"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__truncdfhf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__truncdfhf2::__truncdfhf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__truncdfsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__truncdfsf2::__truncdfsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__truncsfhf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__truncsfhf2::__truncsfhf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__trunctfdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__trunctfdf2::__trunctfdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__trunctfhf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__trunctfhf2::__trunctfhf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__trunctfsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__trunctfsf2::__trunctfsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_i128_add"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_i128_add::__rust_i128_add"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_i128_addo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_i128_addo::__rust_i128_addo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_i128_sub"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_i128_sub::__rust_i128_sub"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_i128_subo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_i128_subo::__rust_i128_subo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_u128_add"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_u128_add::__rust_u128_add"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_u128_addo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_u128_addo::__rust_u128_addo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_u128_sub"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_u128_sub::__rust_u128_sub"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_u128_subo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_u128_subo::__rust_u128_subo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::bswap::__bswapdi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::bswap::__bswapdi2::__bswapdi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::bswap::__bswapsi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::bswap::__bswapsi2::__bswapsi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::bswap::__bswapti2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::bswap::__bswapti2::__bswapti2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::leading_zeros::__clzdi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::leading_zeros::__clzdi2::__clzdi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::leading_zeros::__clzsi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::leading_zeros::__clzsi2::__clzsi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::leading_zeros::__clzti2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::leading_zeros::__clzti2::__clzti2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__muldi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__muldi3::__muldi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__mulodi4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__mulodi4::__mulodi4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__mulosi4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__mulosi4::__mulosi4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__muloti4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__muloti4::__muloti4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__multi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__multi3::__multi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__rust_i128_mulo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__rust_i128_mulo::__rust_i128_mulo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__rust_u128_mulo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__rust_u128_mulo::__rust_u128_mulo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divdi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divdi3::__divdi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divmoddi4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divmoddi4::__divmoddi4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divmodsi4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divmodsi4::__divmodsi4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divmodti4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divmodti4::__divmodti4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divsi3::__divsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divti3::__divti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__moddi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__moddi3::__moddi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__modsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__modsi3::__modsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__modti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__modti3::__modti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashldi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashldi3::__ashldi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashlsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashlsi3::__ashlsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashlti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashlti3::__ashlti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashrdi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashrdi3::__ashrdi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashrsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashrsi3::__ashrsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashrti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashrti3::__ashrti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__lshrdi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__lshrdi3::__lshrdi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__lshrsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__lshrsi3::__lshrsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__lshrti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__lshrti3::__lshrti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::trailing_zeros::__ctzdi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::trailing_zeros::__ctzdi2::__ctzdi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::trailing_zeros::__ctzsi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::trailing_zeros::__ctzsi2::__ctzsi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::trailing_zeros::__ctzti2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::trailing_zeros::__ctzti2::__ctzti2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivdi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivdi3::__udivdi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivmoddi4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivmoddi4::__udivmoddi4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivmodsi4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivmodsi4::__udivmodsi4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivmodti4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivmodti4::__udivmodti4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivsi3::__udivsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivti3::__udivti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__umoddi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__umoddi3::__umoddi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__umodsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__umodsi3::__umodsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__umodti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__umodti3::__umodti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::cbrt"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::cbrt::cbrt"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::cbrtf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::cbrtf::cbrtf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::ceil"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::ceil::ceil"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::ceilf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::ceilf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::ceilf128::ceilf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::ceilf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::ceilf16::ceilf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::ceilf::ceilf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::copysign"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::copysign::copysign"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::copysignf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::copysignf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::copysignf128::copysignf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::copysignf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::copysignf16::copysignf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::copysignf::copysignf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fabs"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fabs::fabs"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fabsf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fabsf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fabsf128::fabsf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fabsf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fabsf16::fabsf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fabsf::fabsf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fdim"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fdim::fdim"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fdimf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fdimf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fdimf128::fdimf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fdimf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fdimf16::fdimf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fdimf::fdimf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::floor"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::floor::floor"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::floorf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::floorf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::floorf128::floorf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::floorf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::floorf16::floorf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::floorf::floorf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fma"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fma::fma"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaf128::fmaf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaf::fmaf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmax"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmax::fmax"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaxf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaxf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaxf128::fmaxf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaxf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaxf16::fmaxf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaxf::fmaxf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaximum"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaximum::fmaximum"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaximumf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaximumf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaximumf128::fmaximumf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaximumf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaximumf16::fmaximumf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaximumf::fmaximumf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmin"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmin::fmin"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminf128::fminf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminf16::fminf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminf::fminf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminimum"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminimum::fminimum"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminimumf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminimumf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminimumf128::fminimumf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminimumf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminimumf16::fminimumf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminimumf::fminimumf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmod"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmod::fmod"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmodf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmodf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmodf128::fmodf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmodf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmodf16::fmodf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmodf::fmodf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::rint"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::rint::rint"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::rintf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::rintf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::rintf128::rintf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::rintf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::rintf16::rintf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::rintf::rintf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::round"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::round::round"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundeven"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundeven::roundeven"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundevenf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundevenf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundevenf128::roundevenf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundevenf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundevenf16::roundevenf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundevenf::roundevenf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundf128::roundf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundf16::roundf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundf::roundf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::sqrt"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::sqrt::sqrt"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::sqrtf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::sqrtf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::sqrtf128::sqrtf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::sqrtf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::sqrtf16::sqrtf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::sqrtf::sqrtf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::trunc"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::trunc::trunc"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::truncf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::truncf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::truncf128::truncf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::truncf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::truncf16::truncf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::truncf::truncf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/probestack.rs",
    "func": "probestack::__rust_probestack"
  },
  {
    "file": "compiler-builtins/libm/src/math/acos.rs",
    "func": "math::libm_math::acos::acos"
  },
  {
    "file": "compiler-builtins/libm/src/math/acos.rs",
    "func": "math::libm_math::acos::r"
  },
  {
    "file": "compiler-builtins/libm/src/math/acosf.rs",
    "func": "math::libm_math::acosf::acosf"
  },
  {
    "file": "compiler-builtins/libm/src/math/acosf.rs",
    "func": "math::libm_math::acosf::r"
  },
  {
    "file": "compiler-builtins/libm/src/math/acosh.rs",
    "func": "math::libm_math::acosh::acosh"
  },
  {
    "file": "compiler-builtins/libm/src/math/acoshf.rs",
    "func": "math::libm_math::acoshf::acoshf"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86.rs",
    "func": "math::libm_math::arch::x86::sqrt"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86.rs",
    "func": "math::libm_math::arch::x86::sqrtf"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/detect.rs",
    "func": "math::libm_math::arch::x86::detect::get_cpu_features"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/detect.rs",
    "func": "math::libm_math::arch::x86::detect::load_x86_features"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/fma.rs",
    "func": "math::libm_math::arch::x86::fma::fma"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/fma.rs",
    "func": "math::libm_math::arch::x86::fma::fma_fallback"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/fma.rs",
    "func": "math::libm_math::arch::x86::fma::fma_with_fma"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/fma.rs",
    "func": "math::libm_math::arch::x86::fma::fma_with_fma4"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/fma.rs",
    "func": "math::libm_math::arch::x86::fma::fmaf"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/fma.rs",
    "func": "math::libm_math::arch::x86::fma::fmaf_fallback"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/fma.rs",
    "func": "math::libm_math::arch::x86::fma::fmaf_with_fma"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/fma.rs",
    "func": "math::libm_math::arch::x86::fma::fmaf_with_fma4"
  },
  {
    "file": "compiler-builtins/libm/src/math/asin.rs",
    "func": "math::libm_math::asin::asin"
  },
  {
    "file": "compiler-builtins/libm/src/math/asin.rs",
    "func": "math::libm_math::asin::comp_r"
  },
  {
    "file": "compiler-builtins/libm/src/math/asinf.rs",
    "func": "math::libm_math::asinf::asinf"
  },
  {
    "file": "compiler-builtins/libm/src/math/asinf.rs",
    "func": "math::libm_math::asinf::r"
  },
  {
    "file": "compiler-builtins/libm/src/math/asinh.rs",
    "func": "math::libm_math::asinh::asinh"
  },
  {
    "file": "compiler-builtins/libm/src/math/asinhf.rs",
    "func": "math::libm_math::asinhf::asinhf"
  },
  {
    "file": "compiler-builtins/libm/src/math/atan.rs",
    "func": "math::libm_math::atan::atan"
  },
  {
    "file": "compiler-builtins/libm/src/math/atan2.rs",
    "func": "math::libm_math::atan2::atan2"
  },
  {
    "file": "compiler-builtins/libm/src/math/atan2f.rs",
    "func": "math::libm_math::atan2f::atan2f"
  },
  {
    "file": "compiler-builtins/libm/src/math/atanf.rs",
    "func": "math::libm_math::atanf::atanf"
  },
  {
    "file": "compiler-builtins/libm/src/math/atanh.rs",
    "func": "math::libm_math::atanh::atanh"
  },
  {
    "file": "compiler-builtins/libm/src/math/atanhf.rs",
    "func": "math::libm_math::atanhf::atanhf"
  },
  {
    "file": "compiler-builtins/libm/src/math/cbrt.rs",
    "func": "math::libm_math::cbrt::cbrt"
  },
  {
    "file": "compiler-builtins/libm/src/math/cbrt.rs",
    "func": "math::libm_math::cbrt::cbrt_round"
  },
  {
    "file": "compiler-builtins/libm/src/math/cbrtf.rs",
    "func": "math::libm_math::cbrtf::cbrtf"
  },
  {
    "file": "compiler-builtins/libm/src/math/ceil.rs",
    "func": "math::libm_math::ceil::ceil"
  },
  {
    "file": "compiler-builtins/libm/src/math/ceil.rs",
    "func": "math::libm_math::ceil::ceilf"
  },
  {
    "file": "compiler-builtins/libm/src/math/ceil.rs",
    "func": "math::libm_math::ceil::ceilf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/ceil.rs",
    "func": "math::libm_math::ceil::ceilf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/copysign.rs",
    "func": "math::libm_math::copysign::copysign"
  },
  {
    "file": "compiler-builtins/libm/src/math/copysign.rs",
    "func": "math::libm_math::copysign::copysignf"
  },
  {
    "file": "compiler-builtins/libm/src/math/copysign.rs",
    "func": "math::libm_math::copysign::copysignf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/copysign.rs",
    "func": "math::libm_math::copysign::copysignf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/cos.rs",
    "func": "math::libm_math::cos::cos"
  },
  {
    "file": "compiler-builtins/libm/src/math/cosf.rs",
    "func": "math::libm_math::cosf::cosf"
  },
  {
    "file": "compiler-builtins/libm/src/math/cosh.rs",
    "func": "math::libm_math::cosh::cosh"
  },
  {
    "file": "compiler-builtins/libm/src/math/coshf.rs",
    "func": "math::libm_math::coshf::coshf"
  },
  {
    "file": "compiler-builtins/libm/src/math/erf.rs",
    "func": "math::libm_math::erf::erf"
  },
  {
    "file": "compiler-builtins/libm/src/math/erf.rs",
    "func": "math::libm_math::erf::erfc"
  },
  {
    "file": "compiler-builtins/libm/src/math/erf.rs",
    "func": "math::libm_math::erf::erfc1"
  },
  {
    "file": "compiler-builtins/libm/src/math/erf.rs",
    "func": "math::libm_math::erf::erfc2"
  },
  {
    "file": "compiler-builtins/libm/src/math/erff.rs",
    "func": "math::libm_math::erff::erfc1"
  },
  {
    "file": "compiler-builtins/libm/src/math/erff.rs",
    "func": "math::libm_math::erff::erfc2"
  },
  {
    "file": "compiler-builtins/libm/src/math/erff.rs",
    "func": "math::libm_math::erff::erfcf"
  },
  {
    "file": "compiler-builtins/libm/src/math/erff.rs",
    "func": "math::libm_math::erff::erff"
  },
  {
    "file": "compiler-builtins/libm/src/math/exp.rs",
    "func": "math::libm_math::exp::exp"
  },
  {
    "file": "compiler-builtins/libm/src/math/exp10.rs",
    "func": "math::libm_math::exp10::exp10"
  },
  {
    "file": "compiler-builtins/libm/src/math/exp10f.rs",
    "func": "math::libm_math::exp10f::exp10f"
  },
  {
    "file": "compiler-builtins/libm/src/math/exp2.rs",
    "func": "math::libm_math::exp2::exp2"
  },
  {
    "file": "compiler-builtins/libm/src/math/exp2f.rs",
    "func": "math::libm_math::exp2f::exp2f"
  },
  {
    "file": "compiler-builtins/libm/src/math/expf.rs",
    "func": "math::libm_math::expf::expf"
  },
  {
    "file": "compiler-builtins/libm/src/math/expm1.rs",
    "func": "math::libm_math::expm1::expm1"
  },
  {
    "file": "compiler-builtins/libm/src/math/expm1f.rs",
    "func": "math::libm_math::expm1f::expm1f"
  },
  {
    "file": "compiler-builtins/libm/src/math/expo2.rs",
    "func": "math::libm_math::expo2::expo2"
  },
  {
    "file": "compiler-builtins/libm/src/math/fabs.rs",
    "func": "math::libm_math::fabs::fabs"
  },
  {
    "file": "compiler-builtins/libm/src/math/fabs.rs",
    "func": "math::libm_math::fabs::fabsf"
  },
  {
    "file": "compiler-builtins/libm/src/math/fabs.rs",
    "func": "math::libm_math::fabs::fabsf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/fabs.rs",
    "func": "math::libm_math::fabs::fabsf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/fdim.rs",
    "func": "math::libm_math::fdim::fdim"
  },
  {
    "file": "compiler-builtins/libm/src/math/fdim.rs",
    "func": "math::libm_math::fdim::fdimf"
  },
  {
    "file": "compiler-builtins/libm/src/math/fdim.rs",
    "func": "math::libm_math::fdim::fdimf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/fdim.rs",
    "func": "math::libm_math::fdim::fdimf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/floor.rs",
    "func": "math::libm_math::floor::floor"
  },
  {
    "file": "compiler-builtins/libm/src/math/floor.rs",
    "func": "math::libm_math::floor::floorf"
  },
  {
    "file": "compiler-builtins/libm/src/math/floor.rs",
    "func": "math::libm_math::floor::floorf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/floor.rs",
    "func": "math::libm_math::floor::floorf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/fma.rs",
    "func": "math::libm_math::fma::fma"
  },
  {
    "file": "compiler-builtins/libm/src/math/fma.rs",
    "func": "math::libm_math::fma::fmaf"
  },
  {
    "file": "compiler-builtins/libm/src/math/fma.rs",
    "func": "math::libm_math::fma::fmaf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/fma.rs",
    "func": "math::libm_math::fma::fmaf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmin_fmax.rs",
    "func": "math::libm_math::fmin_fmax::fmax"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmin_fmax.rs",
    "func": "math::libm_math::fmin_fmax::fmaxf"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmin_fmax.rs",
    "func": "math::libm_math::fmin_fmax::fmaxf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmin_fmax.rs",
    "func": "math::libm_math::fmin_fmax::fmaxf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmin_fmax.rs",
    "func": "math::libm_math::fmin_fmax::fmin"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmin_fmax.rs",
    "func": "math::libm_math::fmin_fmax::fminf"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmin_fmax.rs",
    "func": "math::libm_math::fmin_fmax::fminf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmin_fmax.rs",
    "func": "math::libm_math::fmin_fmax::fminf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum.rs",
    "func": "math::libm_math::fminimum_fmaximum::fmaximum"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum.rs",
    "func": "math::libm_math::fminimum_fmaximum::fmaximumf"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum.rs",
    "func": "math::libm_math::fminimum_fmaximum::fmaximumf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum.rs",
    "func": "math::libm_math::fminimum_fmaximum::fmaximumf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum.rs",
    "func": "math::libm_math::fminimum_fmaximum::fminimum"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum.rs",
    "func": "math::libm_math::fminimum_fmaximum::fminimumf"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum.rs",
    "func": "math::libm_math::fminimum_fmaximum::fminimumf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum.rs",
    "func": "math::libm_math::fminimum_fmaximum::fminimumf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum_num.rs",
    "func": "math::libm_math::fminimum_fmaximum_num::fmaximum_num"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum_num.rs",
    "func": "math::libm_math::fminimum_fmaximum_num::fmaximum_numf"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum_num.rs",
    "func": "math::libm_math::fminimum_fmaximum_num::fmaximum_numf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum_num.rs",
    "func": "math::libm_math::fminimum_fmaximum_num::fmaximum_numf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum_num.rs",
    "func": "math::libm_math::fminimum_fmaximum_num::fminimum_num"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum_num.rs",
    "func": "math::libm_math::fminimum_fmaximum_num::fminimum_numf"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum_num.rs",
    "func": "math::libm_math::fminimum_fmaximum_num::fminimum_numf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum_num.rs",
    "func": "math::libm_math::fminimum_fmaximum_num::fminimum_numf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmod.rs",
    "func": "math::libm_math::fmod::fmod"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmod.rs",
    "func": "math::libm_math::fmod::fmodf"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmod.rs",
    "func": "math::libm_math::fmod::fmodf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmod.rs",
    "func": "math::libm_math::fmod::fmodf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/frexp.rs",
    "func": "math::libm_math::frexp::frexp"
  },
  {
    "file": "compiler-builtins/libm/src/math/frexpf.rs",
    "func": "math::libm_math::frexpf::frexpf"
  },
  {
    "file": "compiler-builtins/libm/src/math/hypot.rs",
    "func": "math::libm_math::hypot::hypot"
  },
  {
    "file": "compiler-builtins/libm/src/math/hypot.rs",
    "func": "math::libm_math::hypot::sq"
  },
  {
    "file": "compiler-builtins/libm/src/math/hypotf.rs",
    "func": "math::libm_math::hypotf::hypotf"
  },
  {
    "file": "compiler-builtins/libm/src/math/ilogb.rs",
    "func": "math::libm_math::ilogb::ilogb"
  },
  {
    "file": "compiler-builtins/libm/src/math/ilogbf.rs",
    "func": "math::libm_math::ilogbf::ilogbf"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0.rs",
    "func": "math::libm_math::j0::common"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0.rs",
    "func": "math::libm_math::j0::j0"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0.rs",
    "func": "math::libm_math::j0::pzero"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0.rs",
    "func": "math::libm_math::j0::qzero"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0.rs",
    "func": "math::libm_math::j0::y0"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0f.rs",
    "func": "math::libm_math::j0f::common"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0f.rs",
    "func": "math::libm_math::j0f::j0f"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0f.rs",
    "func": "math::libm_math::j0f::pzerof"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0f.rs",
    "func": "math::libm_math::j0f::qzerof"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0f.rs",
    "func": "math::libm_math::j0f::y0f"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1.rs",
    "func": "math::libm_math::j1::common"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1.rs",
    "func": "math::libm_math::j1::j1"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1.rs",
    "func": "math::libm_math::j1::pone"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1.rs",
    "func": "math::libm_math::j1::qone"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1.rs",
    "func": "math::libm_math::j1::y1"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1f.rs",
    "func": "math::libm_math::j1f::common"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1f.rs",
    "func": "math::libm_math::j1f::j1f"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1f.rs",
    "func": "math::libm_math::j1f::ponef"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1f.rs",
    "func": "math::libm_math::j1f::qonef"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1f.rs",
    "func": "math::libm_math::j1f::y1f"
  },
  {
    "file": "compiler-builtins/libm/src/math/jn.rs",
    "func": "math::libm_math::jn::jn"
  },
  {
    "file": "compiler-builtins/libm/src/math/jn.rs",
    "func": "math::libm_math::jn::yn"
  },
  {
    "file": "compiler-builtins/libm/src/math/jnf.rs",
    "func": "math::libm_math::jnf::jnf"
  },
  {
    "file": "compiler-builtins/libm/src/math/jnf.rs",
    "func": "math::libm_math::jnf::ynf"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_cos.rs",
    "func": "math::libm_math::k_cos::k_cos"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_cosf.rs",
    "func": "math::libm_math::k_cosf::k_cosf"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_expo2.rs",
    "func": "math::libm_math::k_expo2::k_expo2"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_expo2f.rs",
    "func": "math::libm_math::k_expo2f::k_expo2f"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_sin.rs",
    "func": "math::libm_math::k_sin::k_sin"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_sinf.rs",
    "func": "math::libm_math::k_sinf::k_sinf"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_tan.rs",
    "func": "math::libm_math::k_tan::k_tan"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_tan.rs",
    "func": "math::libm_math::k_tan::zero_low_word"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_tanf.rs",
    "func": "math::libm_math::k_tanf::k_tanf"
  },
  {
    "file": "compiler-builtins/libm/src/math/ldexp.rs",
    "func": "math::libm_math::ldexp::ldexp"
  },
  {
    "file": "compiler-builtins/libm/src/math/ldexp.rs",
    "func": "math::libm_math::ldexp::ldexpf"
  },
  {
    "file": "compiler-builtins/libm/src/math/ldexp.rs",
    "func": "math::libm_math::ldexp::ldexpf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/ldexp.rs",
    "func": "math::libm_math::ldexp::ldexpf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/lgamma.rs",
    "func": "math::libm_math::lgamma::lgamma"
  },
  {
    "file": "compiler-builtins/libm/src/math/lgamma_r.rs",
    "func": "math::libm_math::lgamma_r::lgamma_r"
  },
  {
    "file": "compiler-builtins/libm/src/math/lgamma_r.rs",
    "func": "math::libm_math::lgamma_r::sin_pi"
  },
  {
    "file": "compiler-builtins/libm/src/math/lgammaf.rs",
    "func": "math::libm_math::lgammaf::lgammaf"
  },
  {
    "file": "compiler-builtins/libm/src/math/lgammaf_r.rs",
    "func": "math::libm_math::lgammaf_r::lgammaf_r"
  },
  {
    "file": "compiler-builtins/libm/src/math/lgammaf_r.rs",
    "func": "math::libm_math::lgammaf_r::sin_pi"
  },
  {
    "file": "compiler-builtins/libm/src/math/log.rs",
    "func": "math::libm_math::log::log"
  },
  {
    "file": "compiler-builtins/libm/src/math/log10.rs",
    "func": "math::libm_math::log10::log10"
  },
  {
    "file": "compiler-builtins/libm/src/math/log10f.rs",
    "func": "math::libm_math::log10f::log10f"
  },
  {
    "file": "compiler-builtins/libm/src/math/log1p.rs",
    "func": "math::libm_math::log1p::log1p"
  },
  {
    "file": "compiler-builtins/libm/src/math/log1pf.rs",
    "func": "math::libm_math::log1pf::log1pf"
  },
  {
    "file": "compiler-builtins/libm/src/math/log2.rs",
    "func": "math::libm_math::log2::log2"
  },
  {
    "file": "compiler-builtins/libm/src/math/log2f.rs",
    "func": "math::libm_math::log2f::log2f"
  },
  {
    "file": "compiler-builtins/libm/src/math/logf.rs",
    "func": "math::libm_math::logf::logf"
  },
  {
    "file": "compiler-builtins/libm/src/math/mod.rs",
    "func": "math::libm_math::combine_words"
  },
  {
    "file": "compiler-builtins/libm/src/math/mod.rs",
    "func": "math::libm_math::get_high_word"
  },
  {
    "file": "compiler-builtins/libm/src/math/mod.rs",
    "func": "math::libm_math::get_low_word"
  },
  {
    "file": "compiler-builtins/libm/src/math/mod.rs",
    "func": "math::libm_math::with_set_high_word"
  },
  {
    "file": "compiler-builtins/libm/src/math/mod.rs",
    "func": "math::libm_math::with_set_low_word"
  },
  {
    "file": "compiler-builtins/libm/src/math/modf.rs",
    "func": "math::libm_math::modf::modf"
  },
  {
    "file": "compiler-builtins/libm/src/math/modff.rs",
    "func": "math::libm_math::modff::modff"
  },
  {
    "file": "compiler-builtins/libm/src/math/nextafter.rs",
    "func": "math::libm_math::nextafter::nextafter"
  },
  {
    "file": "compiler-builtins/libm/src/math/nextafterf.rs",
    "func": "math::libm_math::nextafterf::nextafterf"
  },
  {
    "file": "compiler-builtins/libm/src/math/pow.rs",
    "func": "math::libm_math::pow::pow"
  },
  {
    "file": "compiler-builtins/libm/src/math/powf.rs",
    "func": "math::libm_math::powf::powf"
  },
  {
    "file": "compiler-builtins/libm/src/math/rem_pio2.rs",
    "func": "math::libm_math::rem_pio2::rem_pio2"
  },
  {
    "file": "compiler-builtins/libm/src/math/rem_pio2.rs",
    "func": "math::libm_math::rem_pio2::rem_pio2::medium"
  },
  {
    "file": "compiler-builtins/libm/src/math/rem_pio2_large.rs",
    "func": "math::libm_math::rem_pio2_large::rem_pio2_large::floor"
  },
  {
    "file": "compiler-builtins/libm/src/math/rem_pio2f.rs",
    "func": "math::libm_math::rem_pio2f::rem_pio2f"
  },
  {
    "file": "compiler-builtins/libm/src/math/remainder.rs",
    "func": "math::libm_math::remainder::remainder"
  },
  {
    "file": "compiler-builtins/libm/src/math/remainderf.rs",
    "func": "math::libm_math::remainderf::remainderf"
  },
  {
    "file": "compiler-builtins/libm/src/math/remquo.rs",
    "func": "math::libm_math::remquo::remquo"
  },
  {
    "file": "compiler-builtins/libm/src/math/remquof.rs",
    "func": "math::libm_math::remquof::remquof"
  },
  {
    "file": "compiler-builtins/libm/src/math/rint.rs",
    "func": "math::libm_math::rint::rint"
  },
  {
    "file": "compiler-builtins/libm/src/math/rint.rs",
    "func": "math::libm_math::rint::rintf"
  },
  {
    "file": "compiler-builtins/libm/src/math/rint.rs",
    "func": "math::libm_math::rint::rintf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/rint.rs",
    "func": "math::libm_math::rint::rintf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/round.rs",
    "func": "math::libm_math::round::round"
  },
  {
    "file": "compiler-builtins/libm/src/math/round.rs",
    "func": "math::libm_math::round::roundf"
  },
  {
    "file": "compiler-builtins/libm/src/math/round.rs",
    "func": "math::libm_math::round::roundf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/round.rs",
    "func": "math::libm_math::round::roundf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/roundeven.rs",
    "func": "math::libm_math::roundeven::roundeven"
  },
  {
    "file": "compiler-builtins/libm/src/math/roundeven.rs",
    "func": "math::libm_math::roundeven::roundevenf"
  },
  {
    "file": "compiler-builtins/libm/src/math/roundeven.rs",
    "func": "math::libm_math::roundeven::roundevenf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/roundeven.rs",
    "func": "math::libm_math::roundeven::roundevenf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/scalbn.rs",
    "func": "math::libm_math::scalbn::scalbn"
  },
  {
    "file": "compiler-builtins/libm/src/math/scalbn.rs",
    "func": "math::libm_math::scalbn::scalbnf"
  },
  {
    "file": "compiler-builtins/libm/src/math/scalbn.rs",
    "func": "math::libm_math::scalbn::scalbnf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/scalbn.rs",
    "func": "math::libm_math::scalbn::scalbnf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/sin.rs",
    "func": "math::libm_math::sin::sin"
  },
  {
    "file": "compiler-builtins/libm/src/math/sincos.rs",
    "func": "math::libm_math::sincos::sincos"
  },
  {
    "file": "compiler-builtins/libm/src/math/sincosf.rs",
    "func": "math::libm_math::sincosf::sincosf"
  },
  {
    "file": "compiler-builtins/libm/src/math/sinf.rs",
    "func": "math::libm_math::sinf::sinf"
  },
  {
    "file": "compiler-builtins/libm/src/math/sinh.rs",
    "func": "math::libm_math::sinh::sinh"
  },
  {
    "file": "compiler-builtins/libm/src/math/sinhf.rs",
    "func": "math::libm_math::sinhf::sinhf"
  },
  {
    "file": "compiler-builtins/libm/src/math/sqrt.rs",
    "func": "math::libm_math::sqrt::sqrt"
  },
  {
    "file": "compiler-builtins/libm/src/math/sqrt.rs",
    "func": "math::libm_math::sqrt::sqrtf"
  },
  {
    "file": "compiler-builtins/libm/src/math/sqrt.rs",
    "func": "math::libm_math::sqrt::sqrtf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/sqrt.rs",
    "func": "math::libm_math::sqrt::sqrtf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::clone::Clone>::clone"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::cmp::Ord>::cmp"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::cmp::PartialEq>::eq"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::ops::Add>::add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::ops::BitOr>::bitor"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::ops::Not>::not"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::ops::Shl<u32>>::shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::ops::Shr<u32>>::shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::ops::Sub>::sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as math::libm_math::support::int_traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as math::libm_math::support::int_traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::clone::Clone>::clone"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::cmp::Ord>::cmp"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::cmp::PartialEq>::eq"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::ops::Add>::add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::ops::BitOr>::bitor"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::ops::Not>::not"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::ops::Shl<u32>>::shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::ops::Shr<u32>>::shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::ops::Sub>::sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as math::libm_math::support::int_traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as math::libm_math::support::int_traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for i128>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for i128>::widen_hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for i128>::widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for i128>::zero_widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for i128>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for u128>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for u128>::widen_hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for u128>::widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for u128>::zero_widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for u128>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::u256::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "<math::libm_math::support::env::Round as core::clone::Clone>::clone"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "<math::libm_math::support::env::Round as core::cmp::PartialEq>::eq"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "<math::libm_math::support::env::Status as core::clone::Clone>::clone"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "<math::libm_math::support::env::Status as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "<math::libm_math::support::env::Status as core::cmp::PartialEq>::eq"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "math::libm_math::support::env::Status::inexact"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "math::libm_math::support::env::Status::overflow"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "math::libm_math::support::env::Status::set_flag"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "math::libm_math::support::env::Status::set_inexact"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "math::libm_math::support::env::Status::set_underflow"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "math::libm_math::support::env::Status::underflow"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "math::libm_math::support::env::Status::with"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "<math::libm_math::support::feature_detect::Flags as core::clone::Clone>::clone"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "<math::libm_math::support::feature_detect::Flags as core::cmp::PartialEq>::eq"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "math::libm_math::arch::x86::fma::fma::initializer"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "math::libm_math::arch::x86::fma::fmaf::initializer"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "math::libm_math::support::feature_detect::Flags::bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "math::libm_math::support::feature_detect::Flags::contains"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "math::libm_math::support::feature_detect::Flags::empty"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "math::libm_math::support::feature_detect::Flags::from_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "math::libm_math::support::feature_detect::Flags::insert"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "math::libm_math::support::feature_detect::Flags::test_nth"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::DFloat>::narrow"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::copysign"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::fma"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::from_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::is_infinite"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::is_nan"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::is_sign_negative"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::normalize"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::to_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::copysign"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::fma"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::from_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::is_infinite"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::is_nan"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::is_sign_negative"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::normalize"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::to_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::HFloat>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::DFloat>::narrow"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::copysign"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::fma"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::from_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::is_infinite"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::is_nan"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::is_sign_negative"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::normalize"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::to_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::HFloat>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::DFloat>::narrow"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::copysign"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::fma"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::from_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::is_infinite"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::is_nan"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::is_sign_negative"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::normalize"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::to_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::HFloat>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "math::libm_math::support::float_traits::f32_from_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "math::libm_math::support::float_traits::f32_to_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "math::libm_math::support::float_traits::f64_from_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "math::libm_math::support::float_traits::f64_to_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/hex_float.rs",
    "func": "math::libm_math::support::hex_float::dec_digit"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/hex_float.rs",
    "func": "math::libm_math::support::hex_float::hex_digit"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/hex_float.rs",
    "func": "math::libm_math::support::hex_float::shr2_round"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/hex_float.rs",
    "func": "math::libm_math::support::hex_float::shr_odd_rounding"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/hex_float.rs",
    "func": "math::libm_math::support::hex_float::u128_ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<f128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<f128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<f16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<f16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<f32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<f32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<f64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<f64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::borrowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::carrying_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::trailing_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<f128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<f128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<f16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<f16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<f32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<f32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<f64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<f64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::borrowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::carrying_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::trailing_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<f128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<f128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<f16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<f16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<f32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<f32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<f64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<f64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::borrowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::carrying_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::trailing_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<f128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<f128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<f16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<f16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<f32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<f32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<f64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<f64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::borrowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::carrying_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::trailing_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<f128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<f128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<f16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<f16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<f32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<f32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<f64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<f64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::borrowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::carrying_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::trailing_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::borrowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::carrying_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::trailing_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::borrowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::carrying_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::trailing_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::borrowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::carrying_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::trailing_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::borrowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::carrying_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::trailing_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::borrowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::carrying_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::trailing_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::borrowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::carrying_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::trailing_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::borrowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::carrying_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::trailing_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/mod.rs",
    "func": "math::libm_math::support::cold_path"
  },
  {
    "file": "compiler-builtins/libm/src/math/tan.rs",
    "func": "math::libm_math::tan::tan"
  },
  {
    "file": "compiler-builtins/libm/src/math/tanf.rs",
    "func": "math::libm_math::tanf::tanf"
  },
  {
    "file": "compiler-builtins/libm/src/math/tanh.rs",
    "func": "math::libm_math::tanh::tanh"
  },
  {
    "file": "compiler-builtins/libm/src/math/tanhf.rs",
    "func": "math::libm_math::tanhf::tanhf"
  },
  {
    "file": "compiler-builtins/libm/src/math/tgamma.rs",
    "func": "math::libm_math::tgamma::s"
  },
  {
    "file": "compiler-builtins/libm/src/math/tgamma.rs",
    "func": "math::libm_math::tgamma::sinpi"
  },
  {
    "file": "compiler-builtins/libm/src/math/tgamma.rs",
    "func": "math::libm_math::tgamma::tgamma"
  },
  {
    "file": "compiler-builtins/libm/src/math/tgammaf.rs",
    "func": "math::libm_math::tgammaf::tgammaf"
  },
  {
    "file": "compiler-builtins/libm/src/math/trunc.rs",
    "func": "math::libm_math::trunc::trunc"
  },
  {
    "file": "compiler-builtins/libm/src/math/trunc.rs",
    "func": "math::libm_math::trunc::truncf"
  },
  {
    "file": "compiler-builtins/libm/src/math/trunc.rs",
    "func": "math::libm_math::trunc::truncf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/trunc.rs",
    "func": "math::libm_math::trunc::truncf16"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::array::{closure#0}::{closure#1}::{closure#2}::inner"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::array::{closure#2}::{closure#2}::inner"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::array::{closure#3}::{closure#0}::inner"
  },
  {
    "file": "core/src/array/ascii.rs",
    "func": "array::ascii::verify::proof_for_as_ascii_unchecked"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_case_ignorable"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_cased"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u128 as intrinsics::fallback::FunnelShift>::unchecked_funnel_shl"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u128 as intrinsics::fallback::FunnelShift>::unchecked_funnel_shr"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u16 as intrinsics::fallback::FunnelShift>::unchecked_funnel_shl"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u16 as intrinsics::fallback::FunnelShift>::unchecked_funnel_shr"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u32 as intrinsics::fallback::FunnelShift>::unchecked_funnel_shl"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u32 as intrinsics::fallback::FunnelShift>::unchecked_funnel_shr"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u64 as intrinsics::fallback::FunnelShift>::unchecked_funnel_shl"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u64 as intrinsics::fallback::FunnelShift>::unchecked_funnel_shr"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u8 as intrinsics::fallback::FunnelShift>::unchecked_funnel_shl"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u8 as intrinsics::fallback::FunnelShift>::unchecked_funnel_shr"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<usize as intrinsics::fallback::FunnelShift>::unchecked_funnel_shl"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<usize as intrinsics::fallback::FunnelShift>::unchecked_funnel_shr"
  },
  {
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "num::dec2flt::decimal_seq::decimal_seq_verify::check_left_shift"
  },
  {
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "num::dec2flt::decimal_seq::decimal_seq_verify::check_number_of_digits_decimal_left_shift"
  },
  {
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "num::dec2flt::decimal_seq::decimal_seq_verify::check_right_shift"
  },
  {
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "num::dec2flt::decimal_seq::decimal_seq_verify::check_round"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::exact_shl"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::exact_shr"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unchecked_exact_shl"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unchecked_exact_shr"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::exact_shl"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::exact_shr"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unchecked_exact_shl"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unchecked_exact_shr"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::exact_shl"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::exact_shr"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unchecked_exact_shl"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unchecked_exact_shr"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::exact_shl"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::exact_shr"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unchecked_exact_shl"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unchecked_exact_shr"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::exact_shl"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::exact_shr"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unchecked_exact_shl"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unchecked_exact_shr"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::exact_shl"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::exact_shr"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unchecked_exact_shl"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unchecked_exact_shr"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::CodePointInner as clone::Clone>::clone"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::CodePointInner as cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::CodePointInner as cmp::Ord>::cmp"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::CodePointInner as cmp::PartialEq>::eq"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::CodePointInner as cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::CodePointInner as default::Default>::default"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::CodePointInner::as_inner"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::CodePointInner::new"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::CodePointInner::new_unchecked"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::exact_shl"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::exact_shr"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::funnel_shl"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::funnel_shr"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unchecked_exact_shl"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unchecked_exact_shr"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::exact_shl"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::exact_shr"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::funnel_shl"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::funnel_shr"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unchecked_exact_shl"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unchecked_exact_shr"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::exact_shl"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::exact_shr"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::funnel_shl"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::funnel_shr"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unchecked_exact_shl"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unchecked_exact_shr"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::exact_shl"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::exact_shr"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::funnel_shl"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::funnel_shr"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unchecked_exact_shl"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unchecked_exact_shr"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::exact_shl"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::exact_shr"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::funnel_shl"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::funnel_shr"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unchecked_exact_shl"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unchecked_exact_shr"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::exact_shl"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::exact_shr"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::funnel_shl"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::funnel_shr"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unchecked_exact_shl"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unchecked_exact_shr"
  },
  {
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::align_offset::{closure#0}::{closure#1}::{closure#1}::mod_inv"
  },
  {
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::align_offset::{closure#2}::{closure#1}::mod_inv"
  },
  {
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::align_offset::{closure#3}::{closure#0}::mod_inv"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::check_reverse"
  },
  {
    "file": "core/src/str/pattern.rs",
    "func": "str::pattern::verify::check_small_slice_eq"
  },
  {
    "file": "core/src/str/pattern.rs",
    "func": "str::pattern::verify::check_small_slice_eq_empty"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::from_nanos_u128"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "alloc::layout::Layout::from_size_align_unchecked::{closure#0}::{closure#1}::{closure#3}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "alloc::layout::Layout::from_size_align_unchecked::{closure#2}::{closure#3}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "alloc::layout::Layout::from_size_align_unchecked::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "char::convert::from_u32_unchecked::{closure#0}::{closure#1}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "char::convert::from_u32_unchecked::{closure#2}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "char::convert::from_u32_unchecked::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "hint::assert_unchecked::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "hint::assert_unchecked::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "hint::assert_unchecked::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "hint::unreachable_unchecked::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "hint::unreachable_unchecked::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "hint::unreachable_unchecked::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_exact_shl::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_exact_shr::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_neg::{closure#0}::{closure#1}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_neg::{closure#2}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_neg::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_exact_shl::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_exact_shr::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_neg::{closure#0}::{closure#1}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_neg::{closure#2}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_neg::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_exact_shl::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_exact_shr::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_neg::{closure#0}::{closure#1}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_neg::{closure#2}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_neg::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_exact_shl::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_exact_shr::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_neg::{closure#0}::{closure#1}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_neg::{closure#2}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_neg::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_exact_shl::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_exact_shr::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_neg::{closure#0}::{closure#1}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_neg::{closure#2}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_neg::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_exact_shl::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_exact_shr::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_neg::{closure#0}::{closure#1}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_neg::{closure#2}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_neg::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_disjoint_bitor::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_disjoint_bitor::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_disjoint_bitor::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_exact_shl::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_exact_shr::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_disjoint_bitor::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_disjoint_bitor::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_disjoint_bitor::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_exact_shl::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_exact_shr::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_disjoint_bitor::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_disjoint_bitor::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_disjoint_bitor::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_exact_shl::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_exact_shr::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_disjoint_bitor::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_disjoint_bitor::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_disjoint_bitor::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_exact_shl::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_exact_shr::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_disjoint_bitor::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_disjoint_bitor::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_disjoint_bitor::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_exact_shl::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_exact_shr::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_disjoint_bitor::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_disjoint_bitor::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_disjoint_bitor::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_exact_shl::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_exact_shr::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::nonzero::NonZero::<T>::from_mut_unchecked::{closure#0}::{closure#1}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::nonzero::NonZero::<T>::from_mut_unchecked::{closure#2}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::nonzero::NonZero::<T>::from_mut_unchecked::{closure#3}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::nonzero::NonZero::<T>::new_unchecked::{closure#0}::{closure#1}::{closure#2}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::nonzero::NonZero::<T>::new_unchecked::{closure#2}::{closure#2}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::nonzero::NonZero::<T>::new_unchecked::{closure#3}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "ops::index_range::IndexRange::new_unchecked::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "ops::index_range::IndexRange::new_unchecked::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "ops::index_range::IndexRange::new_unchecked::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "ptr::alignment::Alignment::new_unchecked::{closure#0}::{closure#1}::{closure#2}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "ptr::alignment::Alignment::new_unchecked::{closure#2}::{closure#2}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "ptr::alignment::Alignment::new_unchecked::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::alphabetic::lookup_slow"
  },
  {
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::case_ignorable::lookup_slow"
  },
  {
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::cased::lookup_slow"
  },
  {
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::n::lookup_slow"
  },
  {
    "file": "core/src/wtf8.rs",
    "func": "<wtf8::CodePoint as clone::Clone>::clone"
  },
  {
    "file": "core/src/wtf8.rs",
    "func": "<wtf8::CodePoint as cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "core/src/wtf8.rs",
    "func": "<wtf8::CodePoint as cmp::Ord>::cmp"
  },
  {
    "file": "core/src/wtf8.rs",
    "func": "<wtf8::CodePoint as cmp::PartialEq>::eq"
  },
  {
    "file": "core/src/wtf8.rs",
    "func": "<wtf8::CodePoint as cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "core/src/wtf8.rs",
    "func": "wtf8::CodePoint::from_char"
  },
  {
    "file": "core/src/wtf8.rs",
    "func": "wtf8::CodePoint::from_u32"
  },
  {
    "file": "core/src/wtf8.rs",
    "func": "wtf8::CodePoint::from_u32_unchecked"
  },
  {
    "file": "core/src/wtf8.rs",
    "func": "wtf8::CodePoint::to_char"
  },
  {
    "file": "core/src/wtf8.rs",
    "func": "wtf8::CodePoint::to_char_lossy"
  },
  {
    "file": "core/src/wtf8.rs",
    "func": "wtf8::CodePoint::to_lead_surrogate"
  },
  {
    "file": "core/src/wtf8.rs",
    "func": "wtf8::CodePoint::to_trail_surrogate"
  },
  {
    "file": "core/src/wtf8.rs",
    "func": "wtf8::CodePoint::to_u32"
  },
  {
    "file": "core/src/wtf8.rs",
    "func": "wtf8::decode_surrogate"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i16>::eq"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i16>::max_unsigned"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i16>::to_usize"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i32>::eq"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i32>::max_unsigned"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i32>::to_usize"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i64>::eq"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i64>::max_unsigned"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i64>::to_usize"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i8>::eq"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i8>::max_unsigned"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i8>::to_usize"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for isize>::eq"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for isize>::max_unsigned"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for isize>::to_usize"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks/full_masks.rs",
    "func": "<u16 as core_simd::masks::mask_impl::ReverseBits>::reverse_bits"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks/full_masks.rs",
    "func": "<u32 as core_simd::masks::mask_impl::ReverseBits>::reverse_bits"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks/full_masks.rs",
    "func": "<u64 as core_simd::masks::mask_impl::ReverseBits>::reverse_bits"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks/full_masks.rs",
    "func": "<u8 as core_simd::masks::mask_impl::ReverseBits>::reverse_bits"
  },
  {
    "file": "portable-simd/crates/core_simd/src/swizzle_dyn.rs",
    "func": "core_simd::swizzle_dyn::avx2_pshufb"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 32> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 32> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 32> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 32> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 32> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 32> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 32> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 32> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 32> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 32> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 32> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 32> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 64> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 64> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 64> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 64> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 64> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 64> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 32> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 32> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 32> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 32> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 32> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 32> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 32> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 32> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 32> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 32> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 32> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 32> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 64> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 64> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 64> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 64> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 64> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 64> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128> for core_simd::vector::Simd<f32, 4>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128d> for core_simd::vector::Simd<f64, 2>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<i16, 8>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<i32, 4>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<i64, 2>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<i8, 16>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<u16, 8>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<u32, 4>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<u64, 2>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<u8, 16>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256> for core_simd::vector::Simd<f32, 8>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256d> for core_simd::vector::Simd<f64, 4>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<i16, 16>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<i32, 8>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<i64, 4>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<i8, 32>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<u16, 16>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<u32, 8>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<u64, 4>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<u8, 32>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512> for core_simd::vector::Simd<f32, 16>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512d> for core_simd::vector::Simd<f64, 8>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<i16, 32>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<i32, 16>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<i64, 8>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<i8, 64>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<u16, 32>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<u32, 16>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<u64, 8>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<u8, 64>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<f32, 16>> for core_arch::x86::__m512>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<f32, 4>> for core_arch::x86::__m128>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<f32, 8>> for core_arch::x86::__m256>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<f64, 2>> for core_arch::x86::__m128d>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<f64, 4>> for core_arch::x86::__m256d>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<f64, 8>> for core_arch::x86::__m512d>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i16, 16>> for core_arch::x86::__m256i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i16, 32>> for core_arch::x86::__m512i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i16, 8>> for core_arch::x86::__m128i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i32, 16>> for core_arch::x86::__m512i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i32, 4>> for core_arch::x86::__m128i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i32, 8>> for core_arch::x86::__m256i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i64, 2>> for core_arch::x86::__m128i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i64, 4>> for core_arch::x86::__m256i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i64, 8>> for core_arch::x86::__m512i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i8, 16>> for core_arch::x86::__m128i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i8, 32>> for core_arch::x86::__m256i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i8, 64>> for core_arch::x86::__m512i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u16, 16>> for core_arch::x86::__m256i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u16, 32>> for core_arch::x86::__m512i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u16, 8>> for core_arch::x86::__m128i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u32, 16>> for core_arch::x86::__m512i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u32, 4>> for core_arch::x86::__m128i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u32, 8>> for core_arch::x86::__m256i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u64, 2>> for core_arch::x86::__m128i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u64, 4>> for core_arch::x86::__m256i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u64, 8>> for core_arch::x86::__m512i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u8, 16>> for core_arch::x86::__m128i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u8, 32>> for core_arch::x86::__m256i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u8, 64>> for core_arch::x86::__m512i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<isize, 2>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<usize, 2>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<isize, 4>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<usize, 4>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<isize, 8>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<usize, 8>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_simd::vector::Simd<isize, 2>> for core_arch::x86::__m128i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_simd::vector::Simd<isize, 4>> for core_arch::x86::__m256i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_simd::vector::Simd<isize, 8>> for core_arch::x86::__m512i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_simd::vector::Simd<usize, 2>> for core_arch::x86::__m128i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_simd::vector::Simd<usize, 4>> for core_arch::x86::__m256i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_simd::vector::Simd<usize, 8>> for core_arch::x86::__m512i>::from"
  },
  {
    "file": "proc_macro/src/bridge/arena.rs",
    "func": "bridge::arena::Arena::new"
  },
  {
    "file": "proc_macro/src/bridge/buffer.rs",
    "func": "<bridge::buffer::Buffer as std::default::Default>::default"
  },
  {
    "file": "proc_macro/src/bridge/buffer.rs",
    "func": "bridge::buffer::Buffer::new"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "<bridge::client::FreeFunctions as std::ops::Drop>::drop"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "<bridge::client::Span as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "<bridge::client::Span as std::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "<bridge::client::Span as std::cmp::PartialEq>::eq"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "<bridge::client::TokenStream as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "<bridge::client::TokenStream as std::ops::Drop>::drop"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::FreeFunctions::drop"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::byte_range"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::call_site"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::column"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::debug"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::def_site"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::end"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::file"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::join"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::line"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::local_file"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::mixed_site"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::parent"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::recover_proc_macro_span"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::resolved_at"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::save_span"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::source"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::source_text"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::start"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::subspan"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::TokenStream::clone"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::TokenStream::drop"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::TokenStream::expand_expr"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::TokenStream::from_token_tree"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::TokenStream::into_trees"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::TokenStream::is_empty"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::TokenStream::to_string"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::is_available"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::maybe_install_panic_hook"
  },
  {
    "file": "proc_macro/src/bridge/fxhash.rs",
    "func": "<bridge::fxhash::FxHasher as std::default::Default>::default"
  },
  {
    "file": "proc_macro/src/bridge/fxhash.rs",
    "func": "<bridge::fxhash::FxHasher as std::hash::Hasher>::finish"
  },
  {
    "file": "proc_macro/src/bridge/fxhash.rs",
    "func": "<bridge::fxhash::FxHasher as std::hash::Hasher>::write_u16"
  },
  {
    "file": "proc_macro/src/bridge/fxhash.rs",
    "func": "<bridge::fxhash::FxHasher as std::hash::Hasher>::write_u32"
  },
  {
    "file": "proc_macro/src/bridge/fxhash.rs",
    "func": "<bridge::fxhash::FxHasher as std::hash::Hasher>::write_u64"
  },
  {
    "file": "proc_macro/src/bridge/fxhash.rs",
    "func": "<bridge::fxhash::FxHasher as std::hash::Hasher>::write_u8"
  },
  {
    "file": "proc_macro/src/bridge/fxhash.rs",
    "func": "<bridge::fxhash::FxHasher as std::hash::Hasher>::write_usize"
  },
  {
    "file": "proc_macro/src/bridge/fxhash.rs",
    "func": "bridge::fxhash::FxHasher::add_to_hash"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<() as bridge::Mark>::mark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<() as bridge::Unmark>::unmark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<Delimiter as bridge::Mark>::mark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<Delimiter as bridge::Unmark>::unmark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<Spacing as bridge::Mark>::mark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<Spacing as bridge::Unmark>::unmark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<bool as bridge::Mark>::mark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<bool as bridge::Unmark>::unmark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<bridge::LitKind as bridge::Mark>::mark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<bridge::LitKind as bridge::Unmark>::unmark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<bridge::LitKind as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<bridge::LitKind as std::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<bridge::LitKind as std::cmp::PartialEq>::eq"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<char as bridge::Mark>::mark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<char as bridge::Unmark>::unmark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<diagnostic::Level as bridge::Mark>::mark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<diagnostic::Level as bridge::Unmark>::unmark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<u8 as bridge::Mark>::mark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<u8 as bridge::Unmark>::unmark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<usize as bridge::Mark>::mark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<usize as bridge::Unmark>::unmark"
  },
  {
    "file": "proc_macro/src/bridge/server.rs",
    "func": "<bridge::server::RunningSameThreadGuard as std::ops::Drop>::drop"
  },
  {
    "file": "proc_macro/src/bridge/server.rs",
    "func": "bridge::server::RunningSameThreadGuard::new"
  },
  {
    "file": "proc_macro/src/bridge/symbol.rs",
    "func": "<bridge::symbol::Symbol as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/bridge/symbol.rs",
    "func": "<bridge::symbol::Symbol as std::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "proc_macro/src/bridge/symbol.rs",
    "func": "<bridge::symbol::Symbol as std::cmp::PartialEq>::eq"
  },
  {
    "file": "proc_macro/src/bridge/symbol.rs",
    "func": "bridge::symbol::Symbol::invalidate_all"
  },
  {
    "file": "proc_macro/src/diagnostic.rs",
    "func": "<Span as diagnostic::MultiSpan>::into_spans"
  },
  {
    "file": "proc_macro/src/diagnostic.rs",
    "func": "<diagnostic::Level as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/escape.rs",
    "func": "<escape::EscapeOptions as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<ConversionErrorKind as std::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<ConversionErrorKind as std::cmp::PartialEq>::eq"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Delimiter as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Delimiter as std::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Delimiter as std::cmp::PartialEq>::eq"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Group as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Ident as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Literal as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Punct as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Punct as std::cmp::PartialEq<char>>::eq"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Spacing as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Spacing as std::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Spacing as std::cmp::PartialEq>::eq"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Span as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<TokenStream as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<TokenStream as std::convert::From<TokenTree>>::from"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<TokenStream as std::default::Default>::default"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<TokenTree as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<TokenTree as std::convert::From<Group>>::from"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<TokenTree as std::convert::From<Ident>>::from"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<TokenTree as std::convert::From<Literal>>::from"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<TokenTree as std::convert::From<Punct>>::from"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<impl std::cmp::PartialEq<Punct> for char>::eq"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "ConcatStreamsHelper::new"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "ConcatTreesHelper::new"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Group::delimiter"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Group::new"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Group::set_span"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Group::span"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Group::span_close"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Group::span_open"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Group::stream"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Ident::set_span"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Ident::span"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::byte_character"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::byte_str_value"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::character"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::cstr_value"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::f32_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::f32_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::f64_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::f64_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i128_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i128_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i16_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i16_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i32_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i32_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i64_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i64_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i8_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i8_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::isize_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::isize_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::set_span"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::span"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::str_value"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u128_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u128_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u16_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u16_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u32_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u32_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u64_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u64_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u8_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u8_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::usize_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::usize_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::with_stringify_parts::get_hashes_str"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Punct::as_char"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Punct::new"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Punct::set_span"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Punct::spacing"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Punct::span"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::byte_range"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::call_site"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::column"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::def_site"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::end"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::eq"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::file"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::join"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::line"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::local_file"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::located_at"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::mixed_site"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::parent"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::recover_proc_macro_span"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::resolved_at"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::save_span"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::source"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::source_text"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::start"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "TokenStream::expand_expr"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "TokenStream::is_empty"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "TokenStream::new"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "TokenTree::set_span"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "TokenTree::span"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "is_available"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "token_stream::<impl std::iter::IntoIterator for TokenStream>::into_iter"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "tree_to_bridge_tree"
  },
  {
    "file": "proc_macro/src/quote.rs",
    "func": "<quote::HasIterator as std::ops::BitOr<quote::ThereIsNoIteratorInRepetition>>::bitor"
  },
  {
    "file": "proc_macro/src/quote.rs",
    "func": "<quote::HasIterator as std::ops::BitOr>::bitor"
  },
  {
    "file": "proc_macro/src/quote.rs",
    "func": "<quote::ThereIsNoIteratorInRepetition as std::ops::BitOr<quote::HasIterator>>::bitor"
  },
  {
    "file": "proc_macro/src/quote.rs",
    "func": "<quote::ThereIsNoIteratorInRepetition as std::ops::BitOr>::bitor"
  },
  {
    "file": "proc_macro/src/quote.rs",
    "func": "quote::collect_meta_vars"
  },
  {
    "file": "proc_macro/src/quote.rs",
    "func": "quote::quote"
  },
  {
    "file": "proc_macro/src/quote.rs",
    "func": "quote::quote_span"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<Group as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<Ident as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<Literal as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<Punct as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<TokenStream as to_tokens::ToTokens>::into_token_stream"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<TokenStream as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<TokenTree as to_tokens::ToTokens>::into_token_stream"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<TokenTree as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<bool as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<char as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<f32 as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<f64 as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<i128 as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<i16 as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<i32 as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<i64 as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<i8 as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<isize as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<u128 as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<u16 as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<u32 as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<u64 as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<u8 as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<usize as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "src/lib.rs",
    "func": "dummy"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "<alloc::System as core::alloc::Allocator>::allocate"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "<alloc::System as core::alloc::Allocator>::allocate_zeroed"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "<alloc::System as core::alloc::Allocator>::deallocate"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "<alloc::System as core::alloc::Allocator>::grow"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "<alloc::System as core::alloc::Allocator>::grow_zeroed"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "<alloc::System as core::alloc::Allocator>::shrink"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "<alloc::System as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "<alloc::System as core::default::Default>::default"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "alloc::System::alloc_impl"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "alloc::System::grow_impl"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "alloc::_::__rg_oom"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "alloc::__default_lib_allocator::__rdl_alloc"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "alloc::__default_lib_allocator::__rdl_alloc_zeroed"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "alloc::default_alloc_error_hook"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "alloc::rust_oom"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "alloc::take_alloc_error_hook"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<char as ascii::AsciiExt>::eq_ignore_ascii_case"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<char as ascii::AsciiExt>::is_ascii"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<char as ascii::AsciiExt>::make_ascii_lowercase"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<char as ascii::AsciiExt>::make_ascii_uppercase"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<char as ascii::AsciiExt>::to_ascii_lowercase"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<char as ascii::AsciiExt>::to_ascii_uppercase"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<u8 as ascii::AsciiExt>::eq_ignore_ascii_case"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<u8 as ascii::AsciiExt>::is_ascii"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<u8 as ascii::AsciiExt>::make_ascii_lowercase"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<u8 as ascii::AsciiExt>::make_ascii_uppercase"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<u8 as ascii::AsciiExt>::to_ascii_lowercase"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<u8 as ascii::AsciiExt>::to_ascii_uppercase"
  },
  {
    "file": "std/src/backtrace.rs",
    "func": "<backtrace::BacktraceStatus as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/backtrace.rs",
    "func": "<backtrace::BacktraceStatus as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/backtrace.rs",
    "func": "backtrace::Backtrace::capture"
  },
  {
    "file": "std/src/backtrace.rs",
    "func": "backtrace::Backtrace::create"
  },
  {
    "file": "std/src/backtrace.rs",
    "func": "backtrace::Backtrace::disabled"
  },
  {
    "file": "std/src/backtrace.rs",
    "func": "backtrace::Backtrace::enabled"
  },
  {
    "file": "std/src/backtrace.rs",
    "func": "backtrace::Backtrace::force_capture"
  },
  {
    "file": "std/src/backtrace.rs",
    "func": "backtrace::_assert_send_sync"
  },
  {
    "file": "std/src/collections/hash/map.rs",
    "func": "collections::hash::map::assert_covariance"
  },
  {
    "file": "std/src/collections/hash/map.rs",
    "func": "collections::hash::map::map_try_reserve_error"
  },
  {
    "file": "std/src/collections/hash/set.rs",
    "func": "collections::hash::set::assert_covariance"
  },
  {
    "file": "std/src/env.rs",
    "func": "<env::JoinPathsError as core::error::Error>::description"
  },
  {
    "file": "std/src/env.rs",
    "func": "env::args"
  },
  {
    "file": "std/src/env.rs",
    "func": "env::args_os"
  },
  {
    "file": "std/src/env.rs",
    "func": "env::current_dir"
  },
  {
    "file": "std/src/env.rs",
    "func": "env::current_exe"
  },
  {
    "file": "std/src/env.rs",
    "func": "env::home_dir"
  },
  {
    "file": "std/src/env.rs",
    "func": "env::temp_dir"
  },
  {
    "file": "std/src/env.rs",
    "func": "env::vars"
  },
  {
    "file": "std/src/env.rs",
    "func": "env::vars_os"
  },
  {
    "file": "std/src/ffi/os_str.rs",
    "func": "<&ffi::os_str::OsStr as core::default::Default>::default"
  },
  {
    "file": "std/src/ffi/os_str.rs",
    "func": "<ffi::os_str::OsString as core::default::Default>::default"
  },
  {
    "file": "std/src/ffi/os_str.rs",
    "func": "ffi::os_str::<impl core::default::Default for alloc_crate::boxed::Box<ffi::os_str::OsStr>>::default"
  },
  {
    "file": "std/src/ffi/os_str.rs",
    "func": "ffi::os_str::OsString::new"
  },
  {
    "file": "std/src/ffi/os_str.rs",
    "func": "ffi::os_str::OsString::with_capacity"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<&fs::File as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<&fs::File as io::Seek>::seek"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<&fs::File as io::Seek>::stream_len"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<&fs::File as io::Seek>::stream_position"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<&fs::File as io::Write>::flush"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<&fs::File as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::DirBuilder as sys_common::AsInnerMut<sys::fs::unix::DirBuilder>>::as_inner_mut"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::File as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::File as io::Seek>::seek"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::File as io::Seek>::stream_len"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::File as io::Seek>::stream_position"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::File as io::Write>::flush"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::File as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::File as sys_common::AsInner<sys::fs::unix::File>>::as_inner"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::File as sys_common::FromInner<sys::fs::unix::File>>::from_inner"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::File as sys_common::IntoInner<sys::fs::unix::File>>::into_inner"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::FileTimes as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::FileTimes as core::default::Default>::default"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::FileTimes as sys_common::AsInnerMut<sys::fs::unix::FileTimes>>::as_inner_mut"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::FileType as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::FileType as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::FileType as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::FileType as sys_common::AsInner<sys::fs::unix::FileType>>::as_inner"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::Metadata as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::Metadata as sys_common::AsInner<sys::fs::unix::FileAttr>>::as_inner"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::Metadata as sys_common::FromInner<sys::fs::unix::FileAttr>>::from_inner"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::OpenOptions as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::OpenOptions as sys_common::AsInner<sys::fs::unix::OpenOptions>>::as_inner"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::OpenOptions as sys_common::AsInnerMut<sys::fs::unix::OpenOptions>>::as_inner_mut"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::Permissions as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::Permissions as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::Permissions as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::Permissions as sys_common::AsInner<sys::fs::unix::FilePermissions>>::as_inner"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::Permissions as sys_common::FromInner<sys::fs::unix::FilePermissions>>::from_inner"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::DirBuilder::new"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::DirBuilder::recursive"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::lock"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::lock_shared"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::metadata"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::options"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::set_len"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::set_modified"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::set_permissions"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::set_times"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::sync_all"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::sync_data"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::try_clone"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::try_lock"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::try_lock_shared"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::unlock"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::FileTimes::new"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::FileTimes::set_accessed"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::FileTimes::set_modified"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::FileType::is_dir"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::FileType::is_file"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::FileType::is_symlink"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Metadata::accessed"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Metadata::created"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Metadata::file_type"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Metadata::is_dir"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Metadata::is_file"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Metadata::is_symlink"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Metadata::len"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Metadata::modified"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Metadata::permissions"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::OpenOptions::append"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::OpenOptions::create"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::OpenOptions::create_new"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::OpenOptions::new"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::OpenOptions::read"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::OpenOptions::truncate"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::OpenOptions::write"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Permissions::readonly"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Permissions::set_readonly"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::buffer_capacity_required"
  },
  {
    "file": "std/src/hash/random.rs",
    "func": "<hash::random::DefaultHasher as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/hash/random.rs",
    "func": "<hash::random::DefaultHasher as core::default::Default>::default"
  },
  {
    "file": "std/src/hash/random.rs",
    "func": "<hash::random::DefaultHasher as core::hash::Hasher>::finish"
  },
  {
    "file": "std/src/hash/random.rs",
    "func": "<hash::random::RandomState as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/hash/random.rs",
    "func": "<hash::random::RandomState as core::default::Default>::default"
  },
  {
    "file": "std/src/hash/random.rs",
    "func": "<hash::random::RandomState as core::hash::BuildHasher>::build_hasher"
  },
  {
    "file": "std/src/hash/random.rs",
    "func": "hash::random::DefaultHasher::new"
  },
  {
    "file": "std/src/hash/random.rs",
    "func": "hash::random::RandomState::new"
  },
  {
    "file": "std/src/io/buffered/bufreader/buffer.rs",
    "func": "io::buffered::bufreader::buffer::Buffer::try_with_capacity"
  },
  {
    "file": "std/src/io/buffered/bufreader/buffer.rs",
    "func": "io::buffered::bufreader::buffer::Buffer::with_capacity"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "<io::error::Error as core::convert::From<alloc_crate::collections::TryReserveError>>::from"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "<io::error::Error as core::convert::From<io::error::ErrorKind>>::from"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "<io::error::ErrorKind as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "<io::error::ErrorKind as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "<io::error::ErrorKind as core::cmp::Ord>::cmp"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "<io::error::ErrorKind as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "<io::error::ErrorKind as core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "io::error::Error::from_raw_os_error"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "io::error::Error::last_os_error"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "io::error::ErrorKind::as_str"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "io::error::_assert_error_is_sync_send"
  },
  {
    "file": "std/src/io/error/repr_bitpacked.rs",
    "func": "io::error::repr_bitpacked::Repr::new_os"
  },
  {
    "file": "std/src/io/error/repr_bitpacked.rs",
    "func": "io::error::repr_bitpacked::Repr::new_simple"
  },
  {
    "file": "std/src/io/error/repr_bitpacked.rs",
    "func": "io::error::repr_bitpacked::kind_from_prim"
  },
  {
    "file": "std/src/io/mod.rs",
    "func": "<io::SeekFrom as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/io/mod.rs",
    "func": "<io::SeekFrom as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/io/mod.rs",
    "func": "<io::SeekFrom as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "<&io::pipe::PipeReader as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "<&io::pipe::PipeWriter as io::Write>::flush"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "<&io::pipe::PipeWriter as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "<io::pipe::PipeReader as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "<io::pipe::PipeReader as sys_common::FromInner<sys::fd::unix::FileDesc>>::from_inner"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "<io::pipe::PipeReader as sys_common::IntoInner<sys::fd::unix::FileDesc>>::into_inner"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "<io::pipe::PipeWriter as io::Write>::flush"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "<io::pipe::PipeWriter as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "<io::pipe::PipeWriter as sys_common::FromInner<sys::fd::unix::FileDesc>>::from_inner"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "<io::pipe::PipeWriter as sys_common::IntoInner<sys::fd::unix::FileDesc>>::into_inner"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "io::pipe::PipeReader::try_clone"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "io::pipe::PipeWriter::try_clone"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "io::pipe::pipe"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<&io::stdio::Stderr as io::Write>::flush"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<&io::stdio::Stderr as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<fs::File as io::stdio::IsTerminal>::is_terminal"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<io::stdio::Stderr as io::Write>::flush"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<io::stdio::Stderr as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<io::stdio::Stderr as io::stdio::IsTerminal>::is_terminal"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<io::stdio::StderrRaw as io::Write>::flush"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<io::stdio::StderrRaw as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<io::stdio::StdinRaw as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<io::stdio::StdoutRaw as io::Write>::flush"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<io::stdio::StdoutRaw as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "io::stdio::Stderr::lock"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "io::stdio::cleanup"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "io::stdio::stderr"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "io::stdio::stderr_raw"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "io::stdio::stdin"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "io::stdio::stdin_raw"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "io::stdio::stdout"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "io::stdio::stdout_raw"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<&io::util::Empty as io::Write>::flush"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<&io::util::Empty as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<&io::util::Sink as io::Write>::flush"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<&io::util::Sink as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as core::default::Default>::default"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::BufRead>::consume"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::BufRead>::fill_buf"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::BufRead>::has_data_left"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::BufRead>::skip_until"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::Seek>::seek"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::Seek>::stream_len"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::Seek>::stream_position"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::SizeHint>::upper_bound"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::Write>::flush"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Repeat as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Repeat as io::SizeHint>::lower_bound"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Repeat as io::SizeHint>::upper_bound"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Sink as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Sink as core::default::Default>::default"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Sink as io::Write>::flush"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Sink as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "io::util::empty"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "io::util::repeat"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "io::util::sink"
  },
  {
    "file": "std/src/net/mod.rs",
    "func": "<net::Shutdown as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/net/mod.rs",
    "func": "<net::Shutdown as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/net/mod.rs",
    "func": "<net::Shutdown as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/net/socket_addr.rs",
    "func": "<core::net::SocketAddr as net::socket_addr::ToSocketAddrs>::to_socket_addrs"
  },
  {
    "file": "std/src/net/socket_addr.rs",
    "func": "<core::net::SocketAddrV4 as net::socket_addr::ToSocketAddrs>::to_socket_addrs"
  },
  {
    "file": "std/src/net/socket_addr.rs",
    "func": "<core::net::SocketAddrV6 as net::socket_addr::ToSocketAddrs>::to_socket_addrs"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<&net::tcp::TcpStream as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<&net::tcp::TcpStream as io::Write>::flush"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<&net::tcp::TcpStream as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<net::tcp::IntoIncoming as core::iter::Iterator>::next"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<net::tcp::TcpListener as sys_common::AsInner<sys::net::connection::socket::TcpListener>>::as_inner"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<net::tcp::TcpListener as sys_common::FromInner<sys::net::connection::socket::TcpListener>>::from_inner"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<net::tcp::TcpListener as sys_common::IntoInner<sys::net::connection::socket::TcpListener>>::into_inner"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<net::tcp::TcpStream as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<net::tcp::TcpStream as io::Write>::flush"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<net::tcp::TcpStream as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<net::tcp::TcpStream as sys_common::AsInner<sys::net::connection::socket::TcpStream>>::as_inner"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<net::tcp::TcpStream as sys_common::FromInner<sys::net::connection::socket::TcpStream>>::from_inner"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<net::tcp::TcpStream as sys_common::IntoInner<sys::net::connection::socket::TcpStream>>::into_inner"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::accept"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::incoming"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::into_incoming"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::local_addr"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::only_v6"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::set_nonblocking"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::set_only_v6"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::set_ttl"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::take_error"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::try_clone"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::ttl"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::connect_timeout"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::linger"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::local_addr"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::nodelay"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::peer_addr"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::read_timeout"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::set_linger"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::set_nodelay"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::set_nonblocking"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::set_read_timeout"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::set_ttl"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::set_write_timeout"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::shutdown"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::take_error"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::try_clone"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::ttl"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::write_timeout"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "<net::udp::UdpSocket as sys_common::AsInner<sys::net::connection::socket::UdpSocket>>::as_inner"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "<net::udp::UdpSocket as sys_common::FromInner<sys::net::connection::socket::UdpSocket>>::from_inner"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "<net::udp::UdpSocket as sys_common::IntoInner<sys::net::connection::socket::UdpSocket>>::into_inner"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::broadcast"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::join_multicast_v4"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::join_multicast_v6"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::leave_multicast_v4"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::leave_multicast_v6"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::local_addr"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::multicast_loop_v4"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::multicast_loop_v6"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::multicast_ttl_v4"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::peer_addr"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::read_timeout"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::set_broadcast"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::set_multicast_loop_v4"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::set_multicast_loop_v6"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::set_multicast_ttl_v4"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::set_nonblocking"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::set_read_timeout"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::set_ttl"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::set_write_timeout"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::take_error"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::try_clone"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::ttl"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::write_timeout"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::acos"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::acosh"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::asin"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::asinh"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::atan"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::atan2"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::atanh"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::cbrt"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::cos"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::cosh"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::erf"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::erfc"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::exp"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::exp2"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::exp_m1"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::gamma"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::hypot"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::ln"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::ln_1p"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::ln_gamma"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::log"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::log10"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::log2"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::powf"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::sin"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::sin_cos"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::sinh"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::tan"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::tanh"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::acos"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::acosh"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::asin"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::asinh"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::atan"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::atan2"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::atanh"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::cos"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::cosh"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::erf"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::erfc"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::exp"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::exp2"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::exp_m1"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::gamma"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::hypot"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::ln"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::ln_1p"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::ln_gamma"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::log"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::log10"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::log2"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::powf"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::sin"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::sin_cos"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::sinh"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::tan"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::tanh"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::abs_sub"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::acos"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::acosh"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::asin"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::asinh"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::atan"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::atan2"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::atanh"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::cbrt"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::ceil"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::cos"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::cosh"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::div_euclid"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::erf"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::erfc"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::exp"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::exp2"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::exp_m1"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::floor"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::fract"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::gamma"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::hypot"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::ln"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::ln_1p"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::ln_gamma"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::log"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::log10"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::log2"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::mul_add"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::powf"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::powi"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::rem_euclid"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::round"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::round_ties_even"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::sin"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::sin_cos"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::sinh"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::sqrt"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::tan"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::tanh"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::trunc"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::abs_sub"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::acos"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::acosh"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::asin"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::asinh"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::atan"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::atan2"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::atanh"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::cbrt"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::ceil"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::cos"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::cosh"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::div_euclid"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::erf"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::erfc"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::exp"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::exp2"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::exp_m1"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::floor"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::fract"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::gamma"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::hypot"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::ln"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::ln_1p"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::ln_gamma"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::log"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::log10"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::log2"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::mul_add"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::powf"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::powi"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::rem_euclid"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::round"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::round_ties_even"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::sin"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::sin_cos"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::sinh"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::sqrt"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::tan"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::tanh"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::trunc"
  },
  {
    "file": "std/src/os/fd/net.rs",
    "func": "os::fd::net::<impl os::fd::raw::AsRawFd for net::tcp::TcpListener>::as_raw_fd"
  },
  {
    "file": "std/src/os/fd/net.rs",
    "func": "os::fd::net::<impl os::fd::raw::AsRawFd for net::tcp::TcpStream>::as_raw_fd"
  },
  {
    "file": "std/src/os/fd/net.rs",
    "func": "os::fd::net::<impl os::fd::raw::AsRawFd for net::udp::UdpSocket>::as_raw_fd"
  },
  {
    "file": "std/src/os/fd/net.rs",
    "func": "os::fd::net::<impl os::fd::raw::FromRawFd for net::tcp::TcpListener>::from_raw_fd"
  },
  {
    "file": "std/src/os/fd/net.rs",
    "func": "os::fd::net::<impl os::fd::raw::FromRawFd for net::tcp::TcpStream>::from_raw_fd"
  },
  {
    "file": "std/src/os/fd/net.rs",
    "func": "os::fd::net::<impl os::fd::raw::FromRawFd for net::udp::UdpSocket>::from_raw_fd"
  },
  {
    "file": "std/src/os/fd/net.rs",
    "func": "os::fd::net::<impl os::fd::raw::IntoRawFd for net::tcp::TcpListener>::into_raw_fd"
  },
  {
    "file": "std/src/os/fd/net.rs",
    "func": "os::fd::net::<impl os::fd::raw::IntoRawFd for net::tcp::TcpStream>::into_raw_fd"
  },
  {
    "file": "std/src/os/fd/net.rs",
    "func": "os::fd::net::<impl os::fd::raw::IntoRawFd for net::udp::UdpSocket>::into_raw_fd"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<fs::File as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<io::pipe::PipeReader as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<io::pipe::PipeWriter as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<io::stdio::Stderr as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<net::tcp::TcpListener as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<net::tcp::TcpStream as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<net::udp::UdpSocket as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as core::convert::From<fs::File>>::from"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as core::convert::From<io::pipe::PipeReader>>::from"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as core::convert::From<io::pipe::PipeWriter>>::from"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as core::convert::From<net::tcp::TcpListener>>::from"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as core::convert::From<net::tcp::TcpStream>>::from"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as core::convert::From<net::udp::UdpSocket>>::from"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as core::ops::Drop>::drop"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as io::stdio::IsTerminal>::is_terminal"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as os::fd::raw::AsRawFd>::as_raw_fd"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as os::fd::raw::IntoRawFd>::into_raw_fd"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "os::fd::owned::<impl core::convert::From<os::fd::owned::OwnedFd> for fs::File>::from"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "os::fd::owned::<impl core::convert::From<os::fd::owned::OwnedFd> for io::pipe::PipeReader>::from"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "os::fd::owned::<impl core::convert::From<os::fd::owned::OwnedFd> for io::pipe::PipeWriter>::from"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "os::fd::owned::<impl core::convert::From<os::fd::owned::OwnedFd> for net::tcp::TcpListener>::from"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "os::fd::owned::<impl core::convert::From<os::fd::owned::OwnedFd> for net::tcp::TcpStream>::from"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "os::fd::owned::<impl core::convert::From<os::fd::owned::OwnedFd> for net::udp::UdpSocket>::from"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "os::fd::owned::BorrowedFd::<'_>::borrow_raw"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "os::fd::owned::OwnedFd::try_clone"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<fs::File as os::fd::raw::AsRawFd>::as_raw_fd"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<fs::File as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<fs::File as os::fd::raw::IntoRawFd>::into_raw_fd"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<i32 as os::fd::raw::AsRawFd>::as_raw_fd"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<i32 as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<i32 as os::fd::raw::IntoRawFd>::into_raw_fd"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<io::pipe::PipeReader as os::fd::raw::AsRawFd>::as_raw_fd"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<io::pipe::PipeReader as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<io::pipe::PipeReader as os::fd::raw::IntoRawFd>::into_raw_fd"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<io::pipe::PipeWriter as os::fd::raw::AsRawFd>::as_raw_fd"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<io::pipe::PipeWriter as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<io::pipe::PipeWriter as os::fd::raw::IntoRawFd>::into_raw_fd"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<io::stdio::Stderr as os::fd::raw::AsRawFd>::as_raw_fd"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::as_raw_stat"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_atime"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_atime_nsec"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_blksize"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_blocks"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_ctime"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_ctime_nsec"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_dev"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_gid"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_ino"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_mode"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_mtime"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_mtime_nsec"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_nlink"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_rdev"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_size"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_uid"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "<os::linux::process::PidFd as core::convert::From<os::fd::owned::OwnedFd>>::from"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "<os::linux::process::PidFd as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "<os::linux::process::PidFd as os::fd::raw::AsRawFd>::as_raw_fd"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "<os::linux::process::PidFd as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "<os::linux::process::PidFd as os::fd::raw::IntoRawFd>::into_raw_fd"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "<os::linux::process::PidFd as sys_common::AsInner<sys::pal::unix::linux::pidfd::PidFd>>::as_inner"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "<os::linux::process::PidFd as sys_common::FromInner<sys::pal::unix::linux::pidfd::PidFd>>::from_inner"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "<os::linux::process::PidFd as sys_common::IntoInner<sys::pal::unix::linux::pidfd::PidFd>>::into_inner"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "os::linux::process::<impl core::convert::From<os::linux::process::PidFd> for os::fd::owned::OwnedFd>::from"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "os::linux::process::PidFd::kill"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "os::linux::process::PidFd::try_wait"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "os::linux::process::PidFd::wait"
  },
  {
    "file": "std/src/os/linux/raw.rs",
    "func": "<os::linux::raw::arch::stat as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/os/net/linux_ext/socket.rs",
    "func": "<os::unix::net::datagram::UnixDatagram as os::net::linux_ext::socket::UnixSocketExt>::passcred"
  },
  {
    "file": "std/src/os/net/linux_ext/socket.rs",
    "func": "<os::unix::net::datagram::UnixDatagram as os::net::linux_ext::socket::UnixSocketExt>::set_passcred"
  },
  {
    "file": "std/src/os/net/linux_ext/socket.rs",
    "func": "<os::unix::net::stream::UnixStream as os::net::linux_ext::socket::UnixSocketExt>::passcred"
  },
  {
    "file": "std/src/os/net/linux_ext/socket.rs",
    "func": "<os::unix::net::stream::UnixStream as os::net::linux_ext::socket::UnixSocketExt>::set_passcred"
  },
  {
    "file": "std/src/os/net/linux_ext/tcp.rs",
    "func": "<net::tcp::TcpStream as os::net::linux_ext::tcp::TcpStreamExt>::deferaccept"
  },
  {
    "file": "std/src/os/net/linux_ext/tcp.rs",
    "func": "<net::tcp::TcpStream as os::net::linux_ext::tcp::TcpStreamExt>::quickack"
  },
  {
    "file": "std/src/os/net/linux_ext/tcp.rs",
    "func": "<net::tcp::TcpStream as os::net::linux_ext::tcp::TcpStreamExt>::set_deferaccept"
  },
  {
    "file": "std/src/os/net/linux_ext/tcp.rs",
    "func": "<net::tcp::TcpStream as os::net::linux_ext::tcp::TcpStreamExt>::set_quickack"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::DirBuilder as os::unix::fs::DirBuilderExt>::mode"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::FileType as os::unix::fs::FileTypeExt>::is_block_device"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::FileType as os::unix::fs::FileTypeExt>::is_char_device"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::FileType as os::unix::fs::FileTypeExt>::is_fifo"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::FileType as os::unix::fs::FileTypeExt>::is_socket"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::atime"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::atime_nsec"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::blksize"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::blocks"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::ctime"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::ctime_nsec"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::dev"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::gid"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::ino"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::mode"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::mtime"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::mtime_nsec"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::nlink"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::rdev"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::size"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::uid"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::OpenOptions as os::unix::fs::OpenOptionsExt>::custom_flags"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::OpenOptions as os::unix::fs::OpenOptionsExt>::mode"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Permissions as os::unix::fs::PermissionsExt>::from_mode"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Permissions as os::unix::fs::PermissionsExt>::mode"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Permissions as os::unix::fs::PermissionsExt>::set_mode"
  },
  {
    "file": "std/src/os/unix/net/addr.rs",
    "func": "<os::unix::net::addr::SocketAddr as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/os/unix/net/addr.rs",
    "func": "<os::unix::net::addr::SocketAddr as os::net::linux_ext::addr::SocketAddrExt>::as_abstract_name"
  },
  {
    "file": "std/src/os/unix/net/addr.rs",
    "func": "os::unix::net::addr::SocketAddr::address"
  },
  {
    "file": "std/src/os/unix/net/addr.rs",
    "func": "os::unix::net::addr::SocketAddr::as_pathname"
  },
  {
    "file": "std/src/os/unix/net/addr.rs",
    "func": "os::unix::net::addr::SocketAddr::from_parts"
  },
  {
    "file": "std/src/os/unix/net/addr.rs",
    "func": "os::unix::net::addr::SocketAddr::is_unnamed"
  },
  {
    "file": "std/src/os/unix/net/ancillary.rs",
    "func": "<os::unix::net::ancillary::SocketCred as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/os/unix/net/ancillary.rs",
    "func": "os::unix::net::ancillary::AncillaryData::<'_>::try_from_cmsghdr"
  },
  {
    "file": "std/src/os/unix/net/ancillary.rs",
    "func": "os::unix::net::ancillary::SocketCred::get_gid"
  },
  {
    "file": "std/src/os/unix/net/ancillary.rs",
    "func": "os::unix::net::ancillary::SocketCred::get_pid"
  },
  {
    "file": "std/src/os/unix/net/ancillary.rs",
    "func": "os::unix::net::ancillary::SocketCred::get_uid"
  },
  {
    "file": "std/src/os/unix/net/ancillary.rs",
    "func": "os::unix::net::ancillary::SocketCred::new"
  },
  {
    "file": "std/src/os/unix/net/ancillary.rs",
    "func": "os::unix::net::ancillary::SocketCred::set_gid"
  },
  {
    "file": "std/src/os/unix/net/ancillary.rs",
    "func": "os::unix::net::ancillary::SocketCred::set_pid"
  },
  {
    "file": "std/src/os/unix/net/ancillary.rs",
    "func": "os::unix::net::ancillary::SocketCred::set_uid"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "<os::unix::net::datagram::UnixDatagram as core::convert::From<os::fd::owned::OwnedFd>>::from"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "<os::unix::net::datagram::UnixDatagram as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "<os::unix::net::datagram::UnixDatagram as os::fd::raw::AsRawFd>::as_raw_fd"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "<os::unix::net::datagram::UnixDatagram as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "<os::unix::net::datagram::UnixDatagram as os::fd::raw::IntoRawFd>::into_raw_fd"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "<os::unix::net::datagram::UnixDatagram as sys_common::AsInner<sys::net::connection::socket::unix::Socket>>::as_inner"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::<impl core::convert::From<os::unix::net::datagram::UnixDatagram> for os::fd::owned::OwnedFd>::from"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::bind_addr"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::connect_addr"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::local_addr"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::pair"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::peer_addr"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::read_timeout"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::set_mark"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::set_nonblocking"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::set_read_timeout"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::set_write_timeout"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::shutdown"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::take_error"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::try_clone"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::unbound"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::write_timeout"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "<&os::unix::net::listener::UnixListener as core::iter::IntoIterator>::into_iter"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "<os::unix::net::listener::UnixListener as core::convert::From<os::fd::owned::OwnedFd>>::from"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "<os::unix::net::listener::UnixListener as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "<os::unix::net::listener::UnixListener as os::fd::raw::AsRawFd>::as_raw_fd"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "<os::unix::net::listener::UnixListener as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "<os::unix::net::listener::UnixListener as os::fd::raw::IntoRawFd>::into_raw_fd"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "os::unix::net::listener::<impl core::convert::From<os::unix::net::listener::UnixListener> for os::fd::owned::OwnedFd>::from"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "os::unix::net::listener::UnixListener::accept"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "os::unix::net::listener::UnixListener::bind_addr"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "os::unix::net::listener::UnixListener::incoming"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "os::unix::net::listener::UnixListener::local_addr"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "os::unix::net::listener::UnixListener::set_nonblocking"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "os::unix::net::listener::UnixListener::take_error"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "os::unix::net::listener::UnixListener::try_clone"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<&os::unix::net::stream::UnixStream as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<&os::unix::net::stream::UnixStream as io::Write>::flush"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<&os::unix::net::stream::UnixStream as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<os::unix::net::stream::UnixStream as core::convert::From<os::fd::owned::OwnedFd>>::from"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<os::unix::net::stream::UnixStream as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<os::unix::net::stream::UnixStream as io::Write>::flush"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<os::unix::net::stream::UnixStream as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<os::unix::net::stream::UnixStream as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<os::unix::net::stream::UnixStream as os::fd::raw::AsRawFd>::as_raw_fd"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<os::unix::net::stream::UnixStream as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<os::unix::net::stream::UnixStream as os::fd::raw::IntoRawFd>::into_raw_fd"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<os::unix::net::stream::UnixStream as sys_common::AsInner<sys::net::connection::socket::unix::Socket>>::as_inner"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::<impl core::convert::From<os::unix::net::stream::UnixStream> for os::fd::owned::OwnedFd>::from"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::connect_addr"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::local_addr"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::pair"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::peer_addr"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::peer_cred"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::read_timeout"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::set_mark"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::set_nonblocking"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::set_read_timeout"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::set_write_timeout"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::shutdown"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::take_error"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::try_clone"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::write_timeout"
  },
  {
    "file": "std/src/os/unix/net/ucred.rs",
    "func": "<os::unix::net::ucred::UCred as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/os/unix/net/ucred.rs",
    "func": "<os::unix::net::ucred::UCred as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/os/unix/net/ucred.rs",
    "func": "<os::unix::net::ucred::UCred as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/os/unix/net/ucred.rs",
    "func": "os::unix::net::ucred::impl_linux::peer_cred"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::Child as os::unix::process::ChildExt>::send_signal"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatus as os::unix::process::ExitStatusExt>::continued"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatus as os::unix::process::ExitStatusExt>::core_dumped"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatus as os::unix::process::ExitStatusExt>::from_raw"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatus as os::unix::process::ExitStatusExt>::into_raw"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatus as os::unix::process::ExitStatusExt>::signal"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatus as os::unix::process::ExitStatusExt>::stopped_signal"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatusError as os::unix::process::ExitStatusExt>::continued"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatusError as os::unix::process::ExitStatusExt>::core_dumped"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatusError as os::unix::process::ExitStatusExt>::from_raw"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatusError as os::unix::process::ExitStatusExt>::into_raw"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatusError as os::unix::process::ExitStatusExt>::signal"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatusError as os::unix::process::ExitStatusExt>::stopped_signal"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl core::convert::From<os::fd::owned::OwnedFd> for process::ChildStderr>::from"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl core::convert::From<os::fd::owned::OwnedFd> for process::ChildStdin>::from"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl core::convert::From<os::fd::owned::OwnedFd> for process::ChildStdout>::from"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl core::convert::From<os::fd::owned::OwnedFd> for process::Stdio>::from"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl core::convert::From<process::ChildStderr> for os::fd::owned::OwnedFd>::from"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl core::convert::From<process::ChildStdin> for os::fd::owned::OwnedFd>::from"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl core::convert::From<process::ChildStdout> for os::fd::owned::OwnedFd>::from"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl os::fd::owned::AsFd for process::ChildStderr>::as_fd"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl os::fd::owned::AsFd for process::ChildStdin>::as_fd"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl os::fd::owned::AsFd for process::ChildStdout>::as_fd"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl os::fd::raw::AsRawFd for process::ChildStderr>::as_raw_fd"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl os::fd::raw::AsRawFd for process::ChildStdin>::as_raw_fd"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl os::fd::raw::AsRawFd for process::ChildStdout>::as_raw_fd"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl os::fd::raw::FromRawFd for process::Stdio>::from_raw_fd"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl os::fd::raw::IntoRawFd for process::ChildStderr>::into_raw_fd"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl os::fd::raw::IntoRawFd for process::ChildStdin>::into_raw_fd"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl os::fd::raw::IntoRawFd for process::ChildStdout>::into_raw_fd"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::parent_id"
  },
  {
    "file": "std/src/panic.rs",
    "func": "<panic::BacktraceStyle as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/panic.rs",
    "func": "<panic::BacktraceStyle as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/panic.rs",
    "func": "<panic::BacktraceStyle as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/panic.rs",
    "func": "panic::BacktraceStyle::as_u8"
  },
  {
    "file": "std/src/panic.rs",
    "func": "panic::BacktraceStyle::from_u8"
  },
  {
    "file": "std/src/panic.rs",
    "func": "panic::BacktraceStyle::full"
  },
  {
    "file": "std/src/panic.rs",
    "func": "panic::always_abort"
  },
  {
    "file": "std/src/panic.rs",
    "func": "panic::get_backtrace_style"
  },
  {
    "file": "std/src/panic.rs",
    "func": "panic::set_backtrace_style"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "<panicking::Hook as core::default::Default>::default"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::__rust_drop_panic"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::__rust_foreign_exception"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::panic_count::count_is_zero"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::panic_count::decrease"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::panic_count::finished_panic_hook"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::panic_count::get_count"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::panic_count::increase"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::panic_count::is_zero_slow_path"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::panic_count::set_always_abort"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::panicking"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::take_hook"
  },
  {
    "file": "std/src/path.rs",
    "func": "<path::NormalizeError as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/path.rs",
    "func": "<path::PathBuf as core::default::Default>::default"
  },
  {
    "file": "std/src/path.rs",
    "func": "<path::State as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/path.rs",
    "func": "<path::State as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/path.rs",
    "func": "<path::State as core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "std/src/path.rs",
    "func": "<path::StripPrefixError as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/path.rs",
    "func": "<path::StripPrefixError as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/path.rs",
    "func": "<path::StripPrefixError as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/path.rs",
    "func": "path::PathBuf::new"
  },
  {
    "file": "std/src/path.rs",
    "func": "path::PathBuf::with_capacity"
  },
  {
    "file": "std/src/path.rs",
    "func": "path::is_separator"
  },
  {
    "file": "std/src/process.rs",
    "func": "<&process::ChildStdin as io::Write>::flush"
  },
  {
    "file": "std/src/process.rs",
    "func": "<&process::ChildStdin as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/process.rs",
    "func": "<() as process::Termination>::report"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::Child as sys_common::AsInner<sys::process::unix::unix::Process>>::as_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::Child as sys_common::IntoInner<sys::process::unix::unix::Process>>::into_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStderr as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStderr as sys_common::AsInner<sys::pal::unix::pipe::AnonPipe>>::as_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStderr as sys_common::FromInner<sys::pal::unix::pipe::AnonPipe>>::from_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStderr as sys_common::IntoInner<sys::pal::unix::pipe::AnonPipe>>::into_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStdin as io::Write>::flush"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStdin as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStdin as sys_common::AsInner<sys::pal::unix::pipe::AnonPipe>>::as_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStdin as sys_common::FromInner<sys::pal::unix::pipe::AnonPipe>>::from_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStdin as sys_common::IntoInner<sys::pal::unix::pipe::AnonPipe>>::into_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStdout as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStdout as sys_common::AsInner<sys::pal::unix::pipe::AnonPipe>>::as_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStdout as sys_common::FromInner<sys::pal::unix::pipe::AnonPipe>>::from_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStdout as sys_common::IntoInner<sys::pal::unix::pipe::AnonPipe>>::into_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitCode as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitCode as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitCode as core::convert::From<u8>>::from"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitCode as core::default::Default>::default"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitCode as process::Termination>::report"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitCode as sys_common::AsInner<sys::process::unix::common::ExitCode>>::as_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitCode as sys_common::FromInner<sys::process::unix::common::ExitCode>>::from_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitStatus as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitStatus as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitStatus as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitStatus as core::convert::From<process::ExitStatusError>>::from"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitStatus as core::default::Default>::default"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitStatus as sys_common::AsInner<sys::process::unix::unix::ExitStatus>>::as_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitStatus as sys_common::FromInner<sys::process::unix::unix::ExitStatus>>::from_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitStatusError as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitStatusError as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitStatusError as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::Stdio as core::convert::From<fs::File>>::from"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::Stdio as core::convert::From<io::pipe::PipeReader>>::from"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::Stdio as core::convert::From<io::pipe::PipeWriter>>::from"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::Stdio as core::convert::From<io::stdio::Stderr>>::from"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::Stdio as core::convert::From<process::ChildStderr>>::from"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::Stdio as core::convert::From<process::ChildStdin>>::from"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::Stdio as core::convert::From<process::ChildStdout>>::from"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::Child::id"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::Child::kill"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::Child::try_wait"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::Child::wait"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::Child::wait_with_output"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::ExitCode::exit_process"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::ExitCode::to_i32"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::ExitStatus::code"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::ExitStatus::exit_ok"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::ExitStatus::success"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::ExitStatusError::code"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::ExitStatusError::code_nonzero"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::ExitStatusError::into_status"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::Stdio::inherit"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::Stdio::null"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::Stdio::piped"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::abort"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::exit"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::id"
  },
  {
    "file": "std/src/random.rs",
    "func": "<random::DefaultRandomSource as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/random.rs",
    "func": "<random::DefaultRandomSource as core::default::Default>::default"
  },
  {
    "file": "std/src/rt.rs",
    "func": "rt::__rust_abort"
  },
  {
    "file": "std/src/rt.rs",
    "func": "rt::cleanup"
  },
  {
    "file": "std/src/rt.rs",
    "func": "rt::thread_cleanup"
  },
  {
    "file": "std/src/sync/barrier.rs",
    "func": "sync::barrier::Barrier::new"
  },
  {
    "file": "std/src/sync/barrier.rs",
    "func": "sync::barrier::Barrier::wait"
  },
  {
    "file": "std/src/sync/barrier.rs",
    "func": "sync::barrier::BarrierWaitResult::is_leader"
  },
  {
    "file": "std/src/sync/lazy_lock.rs",
    "func": "sync::lazy_lock::panic_poisoned"
  },
  {
    "file": "std/src/sync/mod.rs",
    "func": "<sync::WaitTimeoutResult as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sync/mod.rs",
    "func": "<sync::WaitTimeoutResult as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sync/mod.rs",
    "func": "<sync::WaitTimeoutResult as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sync/mod.rs",
    "func": "sync::WaitTimeoutResult::timed_out"
  },
  {
    "file": "std/src/sync/mpmc/array.rs",
    "func": "<sync::mpmc::array::ArrayToken as core::default::Default>::default"
  },
  {
    "file": "std/src/sync/mpmc/context.rs",
    "func": "sync::mpmc::context::Context::new"
  },
  {
    "file": "std/src/sync/mpmc/list.rs",
    "func": "<sync::mpmc::list::ListToken as core::default::Default>::default"
  },
  {
    "file": "std/src/sync/mpmc/select.rs",
    "func": "<sync::mpmc::select::Operation as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sync/mpmc/select.rs",
    "func": "<sync::mpmc::select::Operation as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sync/mpmc/select.rs",
    "func": "<sync::mpmc::select::Operation as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sync/mpmc/select.rs",
    "func": "<sync::mpmc::select::Selected as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sync/mpmc/select.rs",
    "func": "<sync::mpmc::select::Selected as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sync/mpmc/select.rs",
    "func": "<sync::mpmc::select::Selected as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sync/mpmc/select.rs",
    "func": "<sync::mpmc::select::Selected as core::convert::From<usize>>::from"
  },
  {
    "file": "std/src/sync/mpmc/select.rs",
    "func": "<sync::mpmc::select::Selected as core::convert::Into<usize>>::into"
  },
  {
    "file": "std/src/sync/mpmc/select.rs",
    "func": "<sync::mpmc::select::Token as core::default::Default>::default"
  },
  {
    "file": "std/src/sync/mpmc/utils.rs",
    "func": "sync::mpmc::utils::Backoff::new"
  },
  {
    "file": "std/src/sync/mpmc/utils.rs",
    "func": "sync::mpmc::utils::Backoff::spin_heavy"
  },
  {
    "file": "std/src/sync/mpmc/utils.rs",
    "func": "sync::mpmc::utils::Backoff::spin_light"
  },
  {
    "file": "std/src/sync/mpmc/waker.rs",
    "func": "sync::mpmc::waker::SyncWaker::new"
  },
  {
    "file": "std/src/sync/mpmc/waker.rs",
    "func": "sync::mpmc::waker::Waker::new"
  },
  {
    "file": "std/src/sync/mpmc/waker.rs",
    "func": "sync::mpmc::waker::current_thread_id"
  },
  {
    "file": "std/src/sync/mpmc/zero.rs",
    "func": "<sync::mpmc::zero::ZeroToken as core::default::Default>::default"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::RecvError as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::RecvError as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::RecvError as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::RecvTimeoutError as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::RecvTimeoutError as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::RecvTimeoutError as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::RecvTimeoutError as core::convert::From<sync::mpsc::RecvError>>::from"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::TryRecvError as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::TryRecvError as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::TryRecvError as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::TryRecvError as core::convert::From<sync::mpsc::RecvError>>::from"
  },
  {
    "file": "std/src/sync/nonpoison/condvar.rs",
    "func": "<sync::nonpoison::condvar::Condvar as core::default::Default>::default"
  },
  {
    "file": "std/src/sync/nonpoison/condvar.rs",
    "func": "sync::nonpoison::condvar::Condvar::new"
  },
  {
    "file": "std/src/sync/nonpoison/condvar.rs",
    "func": "sync::nonpoison::condvar::Condvar::notify_all"
  },
  {
    "file": "std/src/sync/nonpoison/condvar.rs",
    "func": "sync::nonpoison::condvar::Condvar::notify_one"
  },
  {
    "file": "std/src/sync/poison.rs",
    "func": "<sync::poison::Guard as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sync/poison.rs",
    "func": "sync::poison::Flag::borrow"
  },
  {
    "file": "std/src/sync/poison.rs",
    "func": "sync::poison::Flag::clear"
  },
  {
    "file": "std/src/sync/poison.rs",
    "func": "sync::poison::Flag::done"
  },
  {
    "file": "std/src/sync/poison.rs",
    "func": "sync::poison::Flag::get"
  },
  {
    "file": "std/src/sync/poison.rs",
    "func": "sync::poison::Flag::guard"
  },
  {
    "file": "std/src/sync/poison.rs",
    "func": "sync::poison::Flag::new"
  },
  {
    "file": "std/src/sync/poison/condvar.rs",
    "func": "<sync::poison::condvar::Condvar as core::default::Default>::default"
  },
  {
    "file": "std/src/sync/poison/condvar.rs",
    "func": "sync::poison::condvar::Condvar::new"
  },
  {
    "file": "std/src/sync/poison/condvar.rs",
    "func": "sync::poison::condvar::Condvar::notify_all"
  },
  {
    "file": "std/src/sync/poison/condvar.rs",
    "func": "sync::poison::condvar::Condvar::notify_one"
  },
  {
    "file": "std/src/sync/poison/once.rs",
    "func": "sync::poison::once::Once::is_completed"
  },
  {
    "file": "std/src/sync/poison/once.rs",
    "func": "sync::poison::once::Once::new"
  },
  {
    "file": "std/src/sync/poison/once.rs",
    "func": "sync::poison::once::Once::set_state"
  },
  {
    "file": "std/src/sync/poison/once.rs",
    "func": "sync::poison::once::Once::state"
  },
  {
    "file": "std/src/sync/poison/once.rs",
    "func": "sync::poison::once::Once::wait"
  },
  {
    "file": "std/src/sync/poison/once.rs",
    "func": "sync::poison::once::Once::wait_force"
  },
  {
    "file": "std/src/sync/poison/once.rs",
    "func": "sync::poison::once::OnceState::is_poisoned"
  },
  {
    "file": "std/src/sync/poison/once.rs",
    "func": "sync::poison::once::OnceState::poison"
  },
  {
    "file": "std/src/sync/reentrant_lock.rs",
    "func": "sync::reentrant_lock::Tid::contains"
  },
  {
    "file": "std/src/sync/reentrant_lock.rs",
    "func": "sync::reentrant_lock::Tid::new"
  },
  {
    "file": "std/src/sync/reentrant_lock.rs",
    "func": "sync::reentrant_lock::Tid::set"
  },
  {
    "file": "std/src/sys/alloc/unix.rs",
    "func": "sys::alloc::unix::<impl core::alloc::GlobalAlloc for alloc::System>::alloc"
  },
  {
    "file": "std/src/sys/alloc/unix.rs",
    "func": "sys::alloc::unix::<impl core::alloc::GlobalAlloc for alloc::System>::alloc_zeroed"
  },
  {
    "file": "std/src/sys/alloc/unix.rs",
    "func": "sys::alloc::unix::aligned_malloc"
  },
  {
    "file": "std/src/sys/anonymous_pipe/unix.rs",
    "func": "sys::anonymous_pipe::unix::pipe"
  },
  {
    "file": "std/src/sys/args/unix.rs",
    "func": "sys::args::unix::args"
  },
  {
    "file": "std/src/sys/args/unix.rs",
    "func": "sys::args::unix::imp::argc_argv"
  },
  {
    "file": "std/src/sys/backtrace.rs",
    "func": "sys::backtrace::lock::<'_>"
  },
  {
    "file": "std/src/sys/backtrace.rs",
    "func": "sys::backtrace::set_image_base"
  },
  {
    "file": "std/src/sys/env/unix.rs",
    "func": "sys::env::unix::env"
  },
  {
    "file": "std/src/sys/env/unix.rs",
    "func": "sys::env::unix::env_read_lock"
  },
  {
    "file": "std/src/sys/env/unix.rs",
    "func": "sys::env::unix::environ"
  },
  {
    "file": "std/src/sys/exit_guard.rs",
    "func": "sys::exit_guard::unique_thread_exit"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "<&sys::fd::unix::FileDesc as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "<sys::fd::unix::FileDesc as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "<sys::fd::unix::FileDesc as os::fd::raw::AsRawFd>::as_raw_fd"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "<sys::fd::unix::FileDesc as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "<sys::fd::unix::FileDesc as os::fd::raw::IntoRawFd>::into_raw_fd"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "<sys::fd::unix::FileDesc as sys_common::AsInner<os::fd::owned::OwnedFd>>::as_inner"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "<sys::fd::unix::FileDesc as sys_common::FromInner<os::fd::owned::OwnedFd>>::from_inner"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "<sys::fd::unix::FileDesc as sys_common::IntoInner<os::fd::owned::OwnedFd>>::into_inner"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "sys::fd::unix::FileDesc::duplicate"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "sys::fd::unix::FileDesc::is_read_vectored"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "sys::fd::unix::FileDesc::is_write_vectored"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "sys::fd::unix::FileDesc::set_cloexec"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "sys::fd::unix::FileDesc::set_nonblocking"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "sys::fd::unix::FileDesc::try_clone"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "sys::fd::unix::max_iov"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as core::fmt::Debug>::fmt::get_mode"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as core::fmt::Debug>::fmt::get_path"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as os::fd::raw::AsRawFd>::as_raw_fd"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as os::fd::raw::IntoRawFd>::into_raw_fd"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as sys_common::AsInner<sys::fd::unix::FileDesc>>::as_inner"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as sys_common::AsInnerMut<sys::fd::unix::FileDesc>>::as_inner_mut"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as sys_common::FromInner<sys::fd::unix::FileDesc>>::from_inner"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as sys_common::IntoInner<sys::fd::unix::FileDesc>>::into_inner"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FileAttr as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FileAttr as sys_common::AsInner<libc::stat64>>::as_inner"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FilePermissions as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FilePermissions as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FilePermissions as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FilePermissions as sys_common::FromInner<u32>>::from_inner"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FileTimes as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FileTimes as core::default::Default>::default"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FileType as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FileType as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FileType as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::Mode as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::OpenOptions as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::StatxExtraFields as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::cfm::CachedFileMetadata as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::cfm::CachedFileMetadata as io::Write>::flush"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::cfm::CachedFileMetadata as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::DirBuilder::new"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::DirBuilder::set_mode"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::datasync"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::datasync::os_datasync"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::duplicate"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::file_attr"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::flush"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::fsync"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::fsync::os_fsync"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::is_read_vectored"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::is_write_vectored"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::lock"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::lock_shared"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::seek"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::set_permissions"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::set_times"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::size"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::tell"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::truncate"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::try_lock"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::try_lock_shared"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::unlock"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileAttr::accessed"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileAttr::created"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileAttr::file_type"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileAttr::from_stat64"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileAttr::modified"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileAttr::perm"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileAttr::size"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FilePermissions::mode"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FilePermissions::readonly"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FilePermissions::set_readonly"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileTimes::set_accessed"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileTimes::set_modified"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileType::is"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileType::is_dir"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileType::is_file"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileType::is_symlink"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileType::masked"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::append"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::create"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::create_new"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::custom_flags"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::get_access_mode"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::get_creation_mode"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::mode"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::new"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::read"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::truncate"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::write"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::debug_assert_fd_is_open"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::fchown"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::remove_dir_impl::fdreaddir"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "<sys::net::connection::socket::TcpListener as sys_common::FromInner<sys::net::connection::socket::unix::Socket>>::from_inner"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "<sys::net::connection::socket::TcpStream as sys_common::AsInner<sys::net::connection::socket::unix::Socket>>::as_inner"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "<sys::net::connection::socket::TcpStream as sys_common::FromInner<sys::net::connection::socket::unix::Socket>>::from_inner"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "<sys::net::connection::socket::UdpSocket as sys_common::FromInner<sys::net::connection::socket::unix::Socket>>::from_inner"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::accept"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::duplicate"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::into_socket"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::only_v6"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::set_nonblocking"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::set_only_v6"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::set_ttl"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::socket"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::socket_addr"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::take_error"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::ttl"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::connect_timeout"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::duplicate"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::into_socket"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::is_read_vectored"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::is_write_vectored"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::linger"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::nodelay"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::peer_addr"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::read_timeout"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::set_linger"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::set_nodelay"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::set_nonblocking"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::set_read_timeout"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::set_ttl"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::set_write_timeout"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::shutdown"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::socket"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::socket_addr"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::take_error"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::ttl"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::write_timeout"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::broadcast"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::duplicate"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::into_socket"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::join_multicast_v4"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::join_multicast_v6"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::leave_multicast_v4"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::leave_multicast_v6"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::multicast_loop_v4"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::multicast_loop_v6"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::multicast_ttl_v4"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::peer_addr"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::read_timeout"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::set_broadcast"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::set_multicast_loop_v4"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::set_multicast_loop_v6"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::set_multicast_ttl_v4"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::set_nonblocking"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::set_read_timeout"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::set_ttl"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::set_write_timeout"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::socket"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::socket_addr"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::take_error"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::ttl"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::write_timeout"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::ip_v4_addr_from_c"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::ip_v4_addr_to_c"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::ip_v6_addr_from_c"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::ip_v6_addr_to_c"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::socket_addr_to_c"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::socket_addr_v4_from_c"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::socket_addr_v4_to_c"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::socket_addr_v6_from_c"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::socket_addr_v6_to_c"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::to_ipv6mr_interface"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "<sys::net::connection::socket::unix::Socket as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "<sys::net::connection::socket::unix::Socket as os::fd::raw::AsRawFd>::as_raw_fd"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "<sys::net::connection::socket::unix::Socket as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "<sys::net::connection::socket::unix::Socket as os::fd::raw::IntoRawFd>::into_raw_fd"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "<sys::net::connection::socket::unix::Socket as sys_common::AsInner<sys::fd::unix::FileDesc>>::as_inner"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "<sys::net::connection::socket::unix::Socket as sys_common::FromInner<sys::fd::unix::FileDesc>>::from_inner"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "<sys::net::connection::socket::unix::Socket as sys_common::IntoInner<sys::fd::unix::FileDesc>>::into_inner"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::as_raw"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::connect"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::connect_timeout"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::deferaccept"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::duplicate"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::is_read_vectored"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::is_write_vectored"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::linger"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::new"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::new_pair"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::new_raw"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::nodelay"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::passcred"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::quickack"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::set_deferaccept"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::set_linger"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::set_mark"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::set_nodelay"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::set_nonblocking"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::set_passcred"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::set_quickack"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::set_timeout"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::shutdown"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::take_error"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::timeout"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::cvt_gai"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::init"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::on_resolver_failure"
  },
  {
    "file": "std/src/sys/os_str/bytes.rs",
    "func": "sys::os_str::bytes::Buf::with_capacity"
  },
  {
    "file": "std/src/sys/os_str/bytes.rs",
    "func": "sys::os_str::bytes::Slice::empty_box"
  },
  {
    "file": "std/src/sys/pal/unix/futex.rs",
    "func": "sys::pal::unix::futex::futex_wait"
  },
  {
    "file": "std/src/sys/pal/unix/futex.rs",
    "func": "sys::pal::unix::futex::futex_wake"
  },
  {
    "file": "std/src/sys/pal/unix/futex.rs",
    "func": "sys::pal::unix::futex::futex_wake_all"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<&fs::File as sys::pal::unix::kernel_copy::CopyRead>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<&fs::File as sys::pal::unix::kernel_copy::CopyWrite>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<&io::pipe::PipeReader as sys::pal::unix::kernel_copy::CopyRead>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<&io::pipe::PipeWriter as sys::pal::unix::kernel_copy::CopyWrite>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<&net::tcp::TcpStream as sys::pal::unix::kernel_copy::CopyRead>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<&net::tcp::TcpStream as sys::pal::unix::kernel_copy::CopyWrite>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<&os::unix::net::stream::UnixStream as sys::pal::unix::kernel_copy::CopyRead>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<&os::unix::net::stream::UnixStream as sys::pal::unix::kernel_copy::CopyWrite>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<fs::File as sys::pal::unix::kernel_copy::CopyRead>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<fs::File as sys::pal::unix::kernel_copy::CopyWrite>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<io::pipe::PipeReader as sys::pal::unix::kernel_copy::CopyRead>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<io::pipe::PipeWriter as sys::pal::unix::kernel_copy::CopyWrite>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<net::tcp::TcpStream as sys::pal::unix::kernel_copy::CopyRead>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<net::tcp::TcpStream as sys::pal::unix::kernel_copy::CopyWrite>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<os::unix::net::stream::UnixStream as sys::pal::unix::kernel_copy::CopyRead>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<os::unix::net::stream::UnixStream as sys::pal::unix::kernel_copy::CopyWrite>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<process::ChildStderr as sys::pal::unix::kernel_copy::CopyRead>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<process::ChildStdin as sys::pal::unix::kernel_copy::CopyWrite>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<process::ChildStdout as sys::pal::unix::kernel_copy::CopyRead>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<sys::fs::unix::cfm::CachedFileMetadata as sys::pal::unix::kernel_copy::CopyRead>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<sys::fs::unix::cfm::CachedFileMetadata as sys::pal::unix::kernel_copy::CopyWrite>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<sys::pal::unix::kernel_copy::FdHandle as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<sys::pal::unix::kernel_copy::SpliceMode as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "sys::pal::unix::kernel_copy::FdMeta::copy_file_range_candidate"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "sys::pal::unix::kernel_copy::FdMeta::maybe_fifo"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "sys::pal::unix::kernel_copy::FdMeta::potential_sendfile_source"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "sys::pal::unix::kernel_copy::copy_regular_files"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "sys::pal::unix::kernel_copy::copy_regular_files::probe_copy_file_range_support"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "sys::pal::unix::kernel_copy::safe_kernel_copy"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "sys::pal::unix::kernel_copy::sendfile_splice"
  },
  {
    "file": "std/src/sys/pal/unix/linux/pidfd.rs",
    "func": "<sys::pal::unix::linux::pidfd::PidFd as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/sys/pal/unix/linux/pidfd.rs",
    "func": "<sys::pal::unix::linux::pidfd::PidFd as sys_common::AsInner<sys::fd::unix::FileDesc>>::as_inner"
  },
  {
    "file": "std/src/sys/pal/unix/linux/pidfd.rs",
    "func": "<sys::pal::unix::linux::pidfd::PidFd as sys_common::FromInner<sys::fd::unix::FileDesc>>::from_inner"
  },
  {
    "file": "std/src/sys/pal/unix/linux/pidfd.rs",
    "func": "<sys::pal::unix::linux::pidfd::PidFd as sys_common::IntoInner<sys::fd::unix::FileDesc>>::into_inner"
  },
  {
    "file": "std/src/sys/pal/unix/linux/pidfd.rs",
    "func": "sys::pal::unix::linux::pidfd::PidFd::kill"
  },
  {
    "file": "std/src/sys/pal/unix/linux/pidfd.rs",
    "func": "sys::pal::unix::linux::pidfd::PidFd::send_signal"
  },
  {
    "file": "std/src/sys/pal/unix/linux/pidfd.rs",
    "func": "sys::pal::unix::linux::pidfd::PidFd::try_wait"
  },
  {
    "file": "std/src/sys/pal/unix/linux/pidfd.rs",
    "func": "sys::pal::unix::linux::pidfd::PidFd::wait"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "<i16 as sys::pal::unix::IsMinusOne>::is_minus_one"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "<i32 as sys::pal::unix::IsMinusOne>::is_minus_one"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "<i64 as sys::pal::unix::IsMinusOne>::is_minus_one"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "<i8 as sys::pal::unix::IsMinusOne>::is_minus_one"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "<isize as sys::pal::unix::IsMinusOne>::is_minus_one"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "sys::pal::unix::abort_internal"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "sys::pal::unix::cleanup"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "sys::pal::unix::cvt_nz"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "sys::pal::unix::decode_error_kind"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "sys::pal::unix::init::reset_sigpipe"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "sys::pal::unix::init::sanitize_standard_fds"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "sys::pal::unix::is_interrupted"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "sys::pal::unix::on_broken_pipe_flag_used"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::current_exe"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::errno"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::error_string"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::exit"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::getcwd"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::getpid"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::getppid"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::glibc_version"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::home_dir"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::home_dir::fallback"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::page_size"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::set_errno"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::split_paths::is_separator"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::temp_dir"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "<sys::pal::unix::pipe::AnonPipe as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "<sys::pal::unix::pipe::AnonPipe as os::fd::raw::AsRawFd>::as_raw_fd"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "<sys::pal::unix::pipe::AnonPipe as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "<sys::pal::unix::pipe::AnonPipe as os::fd::raw::IntoRawFd>::into_raw_fd"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "<sys::pal::unix::pipe::AnonPipe as sys_common::FromInner<sys::fd::unix::FileDesc>>::from_inner"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "<sys::pal::unix::pipe::AnonPipe as sys_common::IntoInner<sys::fd::unix::FileDesc>>::into_inner"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "sys::pal::unix::pipe::AnonPipe::as_file_desc"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "sys::pal::unix::pipe::AnonPipe::is_read_vectored"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "sys::pal::unix::pipe::AnonPipe::is_write_vectored"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "sys::pal::unix::pipe::AnonPipe::try_clone"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "sys::pal::unix::pipe::anon_pipe"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::Handler::null"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::cleanup"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::current_guard"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::get_stack"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::get_stack_start"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::init"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::install_main_guard"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::install_main_guard_bsds"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::install_main_guard_default"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::install_main_guard_freebsd"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::install_main_guard_linux"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::install_main_guard_linux_musl"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::sigstack_size"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::stack_start_aligned"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow/thread_info.rs",
    "func": "<sys::pal::unix::stack_overflow::thread_info::UnlockOnDrop as core::ops::Drop>::drop"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow/thread_info.rs",
    "func": "sys::pal::unix::stack_overflow::thread_info::delete_current_info"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow/thread_info.rs",
    "func": "sys::pal::unix::stack_overflow::thread_info::spin_lock_in_setup"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "<sys::pal::unix::thread::Thread as core::ops::Drop>::drop"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "<sys::pal::unix::thread::cgroups::Cgroup as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "sys::pal::unix::thread::Thread::id"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "sys::pal::unix::thread::Thread::into_id"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "sys::pal::unix::thread::Thread::join"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "sys::pal::unix::thread::Thread::sleep"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "sys::pal::unix::thread::Thread::sleep_until"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "sys::pal::unix::thread::Thread::yield_now"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "sys::pal::unix::thread::available_parallelism"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "sys::pal::unix::thread::cgroups::quota"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "sys::pal::unix::thread::current_os_id"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::Instant as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::Instant as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::Instant as core::cmp::Ord>::cmp"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::Instant as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::Instant as core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::SystemTime as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::SystemTime as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::SystemTime as core::cmp::Ord>::cmp"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::SystemTime as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::SystemTime as core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::Timespec as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::Timespec as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::Timespec as core::cmp::Ord>::cmp"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::Timespec as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::Timespec as core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Instant::checked_add_duration"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Instant::checked_sub_duration"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Instant::checked_sub_instant"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Instant::into_timespec"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Instant::now"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::SystemTime::checked_add_duration"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::SystemTime::checked_sub_duration"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::SystemTime::new"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::SystemTime::now"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::SystemTime::sub_time"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Timespec::checked_add_duration"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Timespec::checked_sub_duration"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Timespec::new"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Timespec::new_unchecked"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Timespec::now"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Timespec::sub_timespec"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Timespec::to_timespec"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Timespec::zero"
  },
  {
    "file": "std/src/sys/pal/unix/weak.rs",
    "func": "sys::pal::unix::thread::current_os_id::gettid"
  },
  {
    "file": "std/src/sys/path/unix.rs",
    "func": "sys::path::unix::is_sep_byte"
  },
  {
    "file": "std/src/sys/path/unix.rs",
    "func": "sys::path::unix::is_verbatim_sep"
  },
  {
    "file": "std/src/sys/personality/dwarf/eh.rs",
    "func": "sys::personality::dwarf::eh::round_up"
  },
  {
    "file": "std/src/sys/process/env.rs",
    "func": "<sys::process::env::CommandEnv as core::default::Default>::default"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::ExitCode as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::ExitCode as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::ExitCode as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::ExitCode as core::convert::From<u8>>::from"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::ProgramKind as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::ProgramKind as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::ProgramKind as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::Stdio as core::convert::From<io::stdio::Stderr>>::from"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::Stdio as core::convert::From<sys::fd::unix::FileDesc>>::from"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::Stdio as core::convert::From<sys::fs::unix::File>>::from"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::Stdio as core::convert::From<sys::pal::unix::pipe::AnonPipe>>::from"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "sys::process::unix::common::ChildStdio::fd"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "sys::process::unix::common::ExitCode::as_i32"
  },
  {
    "file": "std/src/sys/process/unix/common/cstring_array.rs",
    "func": "sys::process::unix::common::cstring_array::CStringArray::with_capacity"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "<sys::process::unix::unix::ExitStatus as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "<sys::process::unix::unix::ExitStatus as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "<sys::process::unix::unix::ExitStatus as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "<sys::process::unix::unix::ExitStatus as core::convert::From<i32>>::from"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "<sys::process::unix::unix::ExitStatus as core::default::Default>::default"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "<sys::process::unix::unix::ExitStatusError as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "<sys::process::unix::unix::ExitStatusError as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "<sys::process::unix::unix::ExitStatusError as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "<sys::process::unix::unix::ExitStatusError as core::convert::Into<sys::process::unix::unix::ExitStatus>>::into"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::<impl sys::process::unix::common::Command>::posix_spawn::get_posix_spawn_addchdir"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatus::code"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatus::continued"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatus::core_dumped"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatus::exit_ok"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatus::exited"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatus::from_waitid_siginfo"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatus::into_raw"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatus::new"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatus::signal"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatus::stopped_signal"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatusError::code"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::Process::id"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::Process::kill"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::Process::new"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::Process::send_signal"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::Process::try_wait"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::Process::wait"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::linux_child_ext::<impl os::linux::process::ChildExt for process::Child>::into_pidfd"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::linux_child_ext::<impl os::linux::process::ChildExt for process::Child>::pidfd"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::signal_string"
  },
  {
    "file": "std/src/sys/random/linux.rs",
    "func": "sys::random::linux::hashmap_random_keys"
  },
  {
    "file": "std/src/sys/stdio/unix.rs",
    "func": "<sys::stdio::unix::Stderr as io::Write>::flush"
  },
  {
    "file": "std/src/sys/stdio/unix.rs",
    "func": "<sys::stdio::unix::Stderr as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/sys/stdio/unix.rs",
    "func": "<sys::stdio::unix::Stdin as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/sys/stdio/unix.rs",
    "func": "<sys::stdio::unix::Stdout as io::Write>::flush"
  },
  {
    "file": "std/src/sys/stdio/unix.rs",
    "func": "<sys::stdio::unix::Stdout as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/sys/stdio/unix.rs",
    "func": "sys::stdio::unix::Stderr::new"
  },
  {
    "file": "std/src/sys/stdio/unix.rs",
    "func": "sys::stdio::unix::Stdin::new"
  },
  {
    "file": "std/src/sys/stdio/unix.rs",
    "func": "sys::stdio::unix::Stdout::new"
  },
  {
    "file": "std/src/sys/stdio/unix.rs",
    "func": "sys::stdio::unix::panic_output"
  },
  {
    "file": "std/src/sys/sync/condvar/futex.rs",
    "func": "sys::sync::condvar::futex::Condvar::new"
  },
  {
    "file": "std/src/sys/sync/condvar/futex.rs",
    "func": "sys::sync::condvar::futex::Condvar::notify_all"
  },
  {
    "file": "std/src/sys/sync/condvar/futex.rs",
    "func": "sys::sync::condvar::futex::Condvar::notify_one"
  },
  {
    "file": "std/src/sys/sync/condvar/futex.rs",
    "func": "sys::sync::condvar::futex::Condvar::wait"
  },
  {
    "file": "std/src/sys/sync/condvar/futex.rs",
    "func": "sys::sync::condvar::futex::Condvar::wait_optional_timeout"
  },
  {
    "file": "std/src/sys/sync/condvar/futex.rs",
    "func": "sys::sync::condvar::futex::Condvar::wait_timeout"
  },
  {
    "file": "std/src/sys/sync/mutex/futex.rs",
    "func": "sys::sync::mutex::futex::Mutex::lock"
  },
  {
    "file": "std/src/sys/sync/mutex/futex.rs",
    "func": "sys::sync::mutex::futex::Mutex::lock_contended"
  },
  {
    "file": "std/src/sys/sync/mutex/futex.rs",
    "func": "sys::sync::mutex::futex::Mutex::new"
  },
  {
    "file": "std/src/sys/sync/mutex/futex.rs",
    "func": "sys::sync::mutex::futex::Mutex::spin"
  },
  {
    "file": "std/src/sys/sync/mutex/futex.rs",
    "func": "sys::sync::mutex::futex::Mutex::try_lock"
  },
  {
    "file": "std/src/sys/sync/mutex/futex.rs",
    "func": "sys::sync::mutex::futex::Mutex::unlock"
  },
  {
    "file": "std/src/sys/sync/mutex/futex.rs",
    "func": "sys::sync::mutex::futex::Mutex::wake"
  },
  {
    "file": "std/src/sys/sync/once/futex.rs",
    "func": "sys::sync::once::futex::Once::is_completed"
  },
  {
    "file": "std/src/sys/sync/once/futex.rs",
    "func": "sys::sync::once::futex::Once::new"
  },
  {
    "file": "std/src/sys/sync/once/futex.rs",
    "func": "sys::sync::once::futex::Once::set_state"
  },
  {
    "file": "std/src/sys/sync/once/futex.rs",
    "func": "sys::sync::once::futex::Once::state"
  },
  {
    "file": "std/src/sys/sync/once/futex.rs",
    "func": "sys::sync::once::futex::Once::wait"
  },
  {
    "file": "std/src/sys/sync/once/futex.rs",
    "func": "sys::sync::once::futex::OnceState::is_poisoned"
  },
  {
    "file": "std/src/sys/sync/once/futex.rs",
    "func": "sys::sync::once::futex::OnceState::poison"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::downgrade"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::new"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::read"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::read_contended"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::read_unlock"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::spin_read"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::spin_write"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::try_read"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::try_write"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::wake_writer"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::wake_writer_or_readers"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::write"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::write_contended"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::write_unlock"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::has_reached_max_readers"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::has_readers_waiting"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::has_writers_waiting"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::is_read_lockable"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::is_read_lockable_after_wakeup"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::is_unlocked"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::is_write_locked"
  },
  {
    "file": "std/src/sys/sync/thread_parking/futex.rs",
    "func": "sys::sync::thread_parking::futex::Parker::park"
  },
  {
    "file": "std/src/sys/sync/thread_parking/futex.rs",
    "func": "sys::sync::thread_parking::futex::Parker::park_timeout"
  },
  {
    "file": "std/src/sys/sync/thread_parking/futex.rs",
    "func": "sys::sync::thread_parking::futex::Parker::unpark"
  },
  {
    "file": "std/src/sys/thread_local/destructors/list.rs",
    "func": "sys::thread_local::destructors::list::run"
  },
  {
    "file": "std/src/sys/thread_local/guard/key.rs",
    "func": "sys::thread_local::guard::key::enable"
  },
  {
    "file": "std/src/sys/thread_local/key/unix.rs",
    "func": "sys::thread_local::key::unix::destroy"
  },
  {
    "file": "std/src/sys/thread_local/mod.rs",
    "func": "<sys::thread_local::abort_on_dtor_unwind::DtorUnwindGuard as core::ops::Drop>::drop"
  },
  {
    "file": "std/src/sys/thread_local/native/eager.rs",
    "func": "<sys::thread_local::native::eager::State as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/thread_local/native/mod.rs",
    "func": "hash::random::RandomState::new::KEYS::__init"
  },
  {
    "file": "std/src/sys/thread_local/native/mod.rs",
    "func": "sync::mpmc::context::Context::with::CONTEXT::__init"
  },
  {
    "file": "std/src/sys/thread_local/native/mod.rs",
    "func": "sys::thread_local::native::LocalPointer::__new"
  },
  {
    "file": "std/src/sys_common/mod.rs",
    "func": "sys_common::mul_div_u64"
  },
  {
    "file": "std/src/thread/current.rs",
    "func": "thread::current::current"
  },
  {
    "file": "std/src/thread/current.rs",
    "func": "thread::current::current_id"
  },
  {
    "file": "std/src/thread/current.rs",
    "func": "thread::current::current_or_unnamed"
  },
  {
    "file": "std/src/thread/current.rs",
    "func": "thread::current::current_os_id"
  },
  {
    "file": "std/src/thread/current.rs",
    "func": "thread::current::drop_current"
  },
  {
    "file": "std/src/thread/current.rs",
    "func": "thread::current::id::get"
  },
  {
    "file": "std/src/thread/current.rs",
    "func": "thread::current::id::get_or_init"
  },
  {
    "file": "std/src/thread/current.rs",
    "func": "thread::current::id::set"
  },
  {
    "file": "std/src/thread/local.rs",
    "func": "<thread::local::AccessError as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/thread/local.rs",
    "func": "<thread::local::AccessError as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/thread/local.rs",
    "func": "<thread::local::AccessError as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/thread/local.rs",
    "func": "thread::local::panic_access_error"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "<thread::PanicGuard as core::ops::Drop>::drop"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "<thread::ThreadId as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "<thread::ThreadId as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "<thread::ThreadId as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::Builder::new"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::ThreadId::as_u64"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::ThreadId::from_u64"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::ThreadId::new"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::ThreadId::new::exhausted"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::_assert_sync_and_send"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::available_parallelism"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::main_thread::get"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::main_thread::set"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::panicking"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::park"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::park_timeout"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::park_timeout_ms"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::sleep"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::sleep_ms"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::sleep_until"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::yield_now"
  },
  {
    "file": "std/src/thread/spawnhook.rs",
    "func": "<thread::spawnhook::ChildSpawnHooks as core::default::Default>::default"
  },
  {
    "file": "std/src/thread/spawnhook.rs",
    "func": "<thread::spawnhook::SpawnHooks as core::default::Default>::default"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::Instant as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::Instant as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::Instant as core::cmp::Ord>::cmp"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::Instant as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::Instant as core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::Instant as core::ops::Add<core::time::Duration>>::add"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::Instant as core::ops::AddAssign<core::time::Duration>>::add_assign"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::Instant as core::ops::Sub<core::time::Duration>>::sub"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::Instant as core::ops::Sub>::sub"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::Instant as core::ops::SubAssign<core::time::Duration>>::sub_assign"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as core::cmp::Ord>::cmp"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as core::ops::Add<core::time::Duration>>::add"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as core::ops::AddAssign<core::time::Duration>>::add_assign"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as core::ops::Sub<core::time::Duration>>::sub"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as core::ops::SubAssign<core::time::Duration>>::sub_assign"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as sys_common::FromInner<sys::pal::unix::time::SystemTime>>::from_inner"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as sys_common::IntoInner<sys::pal::unix::time::SystemTime>>::into_inner"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTimeError as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::Instant::checked_add"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::Instant::checked_duration_since"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::Instant::checked_sub"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::Instant::duration_since"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::Instant::elapsed"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::Instant::into_inner"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::Instant::now"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::Instant::saturating_duration_since"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::SystemTime::checked_add"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::SystemTime::checked_sub"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::SystemTime::duration_since"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::SystemTime::elapsed"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::SystemTime::now"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::SystemTimeError::duration"
  },
  {
    "file": "std_detect/src/detect/bit.rs",
    "func": "detect::bit::test"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "<detect::cache::Initializer as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "<detect::cache::Initializer as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "<detect::cache::Initializer as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "<detect::cache::Initializer as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::Cache::initialize"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::Cache::test"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::Cache::uninitialized"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::Initializer::set"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::Initializer::test"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::Initializer::unset"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::detect_and_initialize"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::do_initialize"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::initialize"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::set_bit"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::test"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::test_bit"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::unset_bit"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "<detect::arch::x86::Feature as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::Feature::to_str"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::adx"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::aes"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_avx512"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_bf16"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_complex"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_fp16"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_fp8"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_int8"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_movrs"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_tf32"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_tile"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_transpose"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::apxf"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx10_1"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx10_2"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx2"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512bf16"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512bitalg"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512bw"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512cd"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512dq"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512er"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512f"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512fp16"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512ifma"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512pf"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512vbmi"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512vbmi2"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512vl"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512vnni"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512vp2intersect"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512vpopcntdq"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avxifma"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avxneconvert"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avxvnni"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avxvnniint16"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avxvnniint8"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::bmi1"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::bmi2"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::cmpxchg16b"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::ermsb"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::f16c"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::fma"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::fxsr"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::gfni"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::kl"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::lzcnt"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::mmx"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::movbe"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::movrs"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::pclmulqdq"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::popcnt"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::rdrand"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::rdseed"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::rtm"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sha"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sha512"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sm3"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sm4"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sse"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sse2"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sse3"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sse4_1"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sse4_2"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sse4a"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::ssse3"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::tbm"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::tsc"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::vaes"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::vpclmulqdq"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::widekl"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::xop"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::xsave"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::xsavec"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::xsaveopt"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::xsaves"
  },
  {
    "file": "std_detect/src/detect/mod.rs",
    "func": "detect::check_for"
  },
  {
    "file": "std_detect/src/detect/mod.rs",
    "func": "detect::features"
  },
  {
    "file": "std_detect/src/detect/os/x86.rs",
    "func": "detect::os::detect_features"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m128 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m128::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m128bh as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m128bh::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m128d as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m128d::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m128h as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m128h::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m128i as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m128i::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m256 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m256::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m256bh as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m256bh::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m256d as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m256d::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m256h as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m256h::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m256i as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m256i::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m512 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m512::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m512bh as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m512bh::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m512d as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m512d::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m512h as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m512h::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m512i as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m512i::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128bh::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128bh::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128bh::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128d::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128d::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128d::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128h::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128h::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128h::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128i::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128i::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128i::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256bh::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256bh::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256bh::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256d::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256d::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256d::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256h::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256h::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256h::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256i::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256i::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256i::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512bh::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512bh::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512bh::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512d::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512d::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512d::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512h::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512h::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512h::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512i::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512i::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512i::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x16 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x16 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x16::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x32 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x32 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x32::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x4 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x4 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x4::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x8 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x8 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x8::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x16 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x16 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x16::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x2 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x2 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x2::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x4 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x4 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x4::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x8 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x8 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x8::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x1 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x1 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x1::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x2 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x2 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x2::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x4 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x4 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x4::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x8 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x8 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x8::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x16 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x16 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x16::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x2 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x2 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x2::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x32 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x32 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x32::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x4 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x4 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x4::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x8 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x8 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x8::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x16 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x16 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x16::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x2 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x2 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x2::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x32 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x32 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x32::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x4 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x4 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x4::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x8 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x8 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x8::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x1 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x1 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x1::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x2 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x2 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x2::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x4 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x4 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x4::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x8 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x8 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x8::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x16 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x16 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x16::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x2 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x2 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x2::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x32 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x32 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x32::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x4 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x4 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x4::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x64 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x64 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x64::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x8 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x8 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x8::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m16x16 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m16x16 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m16x16::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m16x8 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m16x8 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m16x8::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m32x4 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m32x4 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m32x4::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m32x8 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m32x8 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m32x8::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m64x2 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m64x2 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m64x2::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m8x16 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m8x16 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m8x16::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m8x32 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m8x32 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m8x32::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x16 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x16 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x16::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x2 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x2 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x2::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x32 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x32 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x32::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x4 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x4 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x4::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x64 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x64 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x64::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x8 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x8 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x8::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x16 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x16 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x16::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x2 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x2 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x2::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x32 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x32 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x32::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x4 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x4 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x4::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x8 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x8 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x8::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x1 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x1 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x1::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x2 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x2 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x2::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x4 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x4 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x4::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x8 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x8 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x8::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x16 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x16 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x16::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x2 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x2 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x2::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x32 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x32 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x32::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x4 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x4 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x4::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x64 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x64 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x64::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x8 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x8 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x8::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x16::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x16::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x16::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x16::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x16::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x32::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x32::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x32::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x32::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x32::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x4::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x4::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x8::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x8::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x16::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x16::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x16::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x16::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x16::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x2::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x2::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x2::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x4::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x4::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x8::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x8::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x1::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x1::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x1::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x1::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x1::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x2::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x2::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x2::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x4::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x4::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x8::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x8::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x16::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x16::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x16::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x16::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x16::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x2::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x2::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x2::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x32::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x32::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x32::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x32::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x32::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x4::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x4::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x8::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x8::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x16::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x16::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x16::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x16::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x16::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x2::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x2::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x2::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x32::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x32::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x32::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x32::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x32::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x4::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x4::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x8::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x8::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x1::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x1::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x1::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x1::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x1::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x2::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x2::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x2::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x4::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x4::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x8::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x8::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x16::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x16::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x16::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x16::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x16::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x2::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x2::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x2::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x32::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x32::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x32::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x32::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x32::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x4::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x4::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x64::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x64::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x64::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x64::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x64::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x8::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x8::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m16x16::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m16x16::bool_to_internal"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m16x16::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m16x16::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m16x8::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m16x8::bool_to_internal"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m16x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m16x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m32x4::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m32x4::bool_to_internal"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m32x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m32x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m32x8::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m32x8::bool_to_internal"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m32x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m32x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m64x2::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m64x2::bool_to_internal"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m64x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m64x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m8x16::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m8x16::bool_to_internal"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m8x16::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m8x16::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m8x32::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m8x32::bool_to_internal"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m8x32::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m8x32::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x16::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x16::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x16::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x16::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x16::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x2::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x2::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x2::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x32::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x32::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x32::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x32::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x32::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x4::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x4::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x64::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x64::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x64::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x64::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x64::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x8::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x8::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x16::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x16::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x16::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x16::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x16::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x2::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x2::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x2::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x32::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x32::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x32::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x32::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x32::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x4::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x4::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x8::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x8::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x1::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x1::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x1::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x1::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x1::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x2::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x2::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x2::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x4::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x4::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x8::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x8::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x16::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x16::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x16::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x16::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x16::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x2::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x2::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x2::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x32::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x32::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x32::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x32::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x32::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x4::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x4::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x64::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x64::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x64::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x64::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x64::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x8::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x8::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/abm.rs",
    "func": "core_arch::x86::abm::_lzcnt_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/abm.rs",
    "func": "core_arch::x86::abm::_popcnt32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/adx.rs",
    "func": "core_arch::x86::adx::_addcarry_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/adx.rs",
    "func": "core_arch::x86::adx::_addcarryx_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/adx.rs",
    "func": "core_arch::x86::adx::_subborrow_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/aes.rs",
    "func": "core_arch::x86::aes::_mm_aesdec_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/aes.rs",
    "func": "core_arch::x86::aes::_mm_aesdeclast_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/aes.rs",
    "func": "core_arch::x86::aes::_mm_aesenc_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/aes.rs",
    "func": "core_arch::x86::aes::_mm_aesenclast_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/aes.rs",
    "func": "core_arch::x86::aes::_mm_aesimc_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_add_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_add_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_addsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_addsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_and_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_and_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_andnot_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_andnot_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_blendv_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_blendv_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_broadcast_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_broadcast_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_broadcast_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_broadcast_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castpd128_pd256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castpd256_pd128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castpd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castpd_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castps128_ps256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castps256_ps128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castps_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castps_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castsi128_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castsi256_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castsi256_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castsi256_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_ceil_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_ceil_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvtepi32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvtepi32_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvtpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvtpd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvtps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvtps_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvtsd_f64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvtsi256_si32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvtss_f32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvttpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvttps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_div_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_div_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_floor_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_floor_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_hadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_hadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_hsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_hsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_max_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_max_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_min_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_min_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_movedup_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_movehdup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_moveldup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_movemask_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_movemask_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_mul_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_mul_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_or_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_or_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_permutevar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_permutevar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_rcp_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_rsqrt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set1_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set1_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set1_epi64x"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set1_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set1_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set1_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set_epi64x"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set_m128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set_m128d"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set_m128i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setr_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setr_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setr_epi64x"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setr_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setr_m128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setr_m128d"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setr_m128i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setr_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setr_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setzero_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setzero_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setzero_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_sqrt_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_sqrt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_sub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_sub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_testc_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_testc_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_testc_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_testnzc_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_testnzc_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_testnzc_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_testz_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_testz_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_testz_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_undefined_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_undefined_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_undefined_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_unpackhi_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_unpackhi_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_unpacklo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_unpacklo_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_xor_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_xor_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_zeroall"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_zeroupper"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_zextpd128_pd256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_zextps128_ps256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_zextsi128_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm_broadcast_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm_permutevar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm_permutevar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm_testc_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm_testc_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm_testnzc_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm_testnzc_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm_testz_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm_testz_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_abs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_abs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_abs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_add_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_add_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_add_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_add_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_adds_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_adds_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_adds_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_adds_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_alignr_epi8::mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_and_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_andnot_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_avg_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_avg_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_blendv_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_broadcastb_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_broadcastd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_broadcastq_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_broadcastsd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_broadcastsi128_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_broadcastss_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_broadcastw_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_bslli_epi128::mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_bsrli_epi128::mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cmpeq_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cmpeq_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cmpeq_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cmpeq_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cmpgt_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cmpgt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cmpgt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cmpgt_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepi16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepi16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepi32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepi8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepi8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepi8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepu16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepu16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepu32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepu8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepu8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepu8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_hadd_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_hadd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_hadds_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_hsub_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_hsub_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_hsubs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_madd_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_maddubs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_max_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_max_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_max_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_max_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_max_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_max_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_min_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_min_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_min_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_min_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_min_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_min_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_movemask_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_mul_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_mul_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_mulhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_mulhi_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_mulhrs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_mullo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_mullo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_or_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_packs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_packs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_packus_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_packus_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_permutevar8x32_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_permutevar8x32_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sad_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_shuffle_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sign_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sign_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sign_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sll_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sll_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sll_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sllv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sllv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sra_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sra_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_srav_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_srl_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_srl_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_srl_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_srlv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_srlv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sub_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sub_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sub_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sub_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_subs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_subs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_subs_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_subs_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_unpackhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_unpackhi_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_unpackhi_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_unpackhi_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_unpacklo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_unpacklo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_unpacklo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_unpacklo_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_xor_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_broadcastb_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_broadcastd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_broadcastq_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_broadcastsd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_broadcastsi128_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_broadcastss_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_broadcastw_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_sllv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_sllv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_srav_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_srlv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_srlv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_cvtne2ps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_cvtneps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_cvtpbh_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_dpbf16_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_mask_cvtne2ps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_mask_cvtneps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_mask_cvtpbh_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_mask_dpbf16_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_maskz_cvtne2ps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_maskz_cvtneps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_maskz_cvtpbh_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_maskz_dpbf16_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_cvtne2ps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_cvtneps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_cvtpbh_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_dpbf16_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_mask_cvtne2ps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_mask_cvtneps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_mask_cvtpbh_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_mask_dpbf16_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_maskz_cvtne2ps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_maskz_cvtneps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_maskz_cvtpbh_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_maskz_dpbf16_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_cvtne2ps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_cvtneps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_cvtness_sbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_cvtpbh_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_cvtsbh_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_dpbf16_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_mask_cvtne2ps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_mask_cvtneps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_mask_cvtpbh_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_mask_dpbf16_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_maskz_cvtne2ps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_maskz_cvtneps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_maskz_cvtpbh_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_maskz_dpbf16_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm256_bitshuffle_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm256_mask_bitshuffle_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm256_mask_popcnt_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm256_mask_popcnt_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm256_maskz_popcnt_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm256_maskz_popcnt_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm256_popcnt_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm256_popcnt_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm512_bitshuffle_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm512_mask_bitshuffle_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm512_mask_popcnt_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm512_mask_popcnt_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm512_maskz_popcnt_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm512_maskz_popcnt_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm512_popcnt_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm512_popcnt_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm_bitshuffle_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm_mask_bitshuffle_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm_mask_popcnt_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm_mask_popcnt_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm_maskz_popcnt_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm_maskz_popcnt_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm_popcnt_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm_popcnt_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_cvtmask32_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_cvtu32_mask32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kadd_mask32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kadd_mask64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kand_mask32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kand_mask64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kandn_mask32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kandn_mask64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_knot_mask32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_knot_mask64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kor_mask32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kor_mask64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kortestc_mask32_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kortestc_mask64_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kortestz_mask32_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kortestz_mask64_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_ktestc_mask32_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_ktestc_mask64_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_ktestz_mask32_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_ktestz_mask64_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kxnor_mask32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kxnor_mask64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kxor_mask32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kxor_mask64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpeq_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpeq_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpeq_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpeq_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpge_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpge_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpge_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpge_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpgt_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpgt_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpgt_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpgt_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmple_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmple_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmple_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmple_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmplt_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmplt_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmplt_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmplt_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpneq_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpneq_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpneq_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpneq_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cvtepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cvtsepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cvtusepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask2_permutex2var_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_abs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_abs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_add_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_add_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_adds_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_adds_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_adds_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_adds_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_avg_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_avg_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_blend_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_blend_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_broadcastb_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_broadcastw_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpeq_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpeq_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpeq_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpeq_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpge_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpge_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpge_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpge_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpgt_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpgt_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpgt_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpgt_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmple_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmple_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmple_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmple_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmplt_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmplt_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmplt_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmplt_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpneq_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpneq_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpneq_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpneq_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cvtepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cvtepi8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cvtepu8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cvtsepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cvtusepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_madd_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_maddubs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_max_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_max_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_max_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_max_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_min_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_min_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_min_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_min_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_mov_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_mov_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_mulhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_mulhi_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_mulhrs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_mullo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_packs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_packs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_packus_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_packus_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_permutex2var_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_permutexvar_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_add_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_add_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_and_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_and_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_max_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_max_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_max_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_max_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_min_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_min_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_min_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_min_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_mul_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_mul_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_or_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_or_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_set1_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_set1_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_shuffle_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_sll_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_sllv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_sra_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_srav_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_srl_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_srlv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_sub_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_sub_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_subs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_subs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_subs_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_subs_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_test_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_test_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_testn_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_testn_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_unpackhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_unpackhi_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_unpacklo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_unpacklo_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_abs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_abs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_add_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_add_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_adds_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_adds_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_adds_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_adds_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_avg_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_avg_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_broadcastb_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_broadcastw_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_cvtepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_cvtepi8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_cvtepu8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_cvtsepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_cvtusepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_madd_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_maddubs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_max_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_max_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_max_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_max_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_min_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_min_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_min_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_min_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_mov_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_mov_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_mulhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_mulhi_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_mulhrs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_mullo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_packs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_packs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_packus_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_packus_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_permutex2var_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_permutexvar_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_set1_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_set1_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_shuffle_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_sll_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_sllv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_sra_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_srav_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_srl_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_srlv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_sub_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_sub_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_subs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_subs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_subs_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_subs_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_unpackhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_unpackhi_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_unpacklo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_unpacklo_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_movepi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_movepi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_movm_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_movm_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_permutex2var_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_permutexvar_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_add_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_add_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_and_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_and_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_max_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_max_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_max_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_max_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_min_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_min_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_min_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_min_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_mul_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_mul_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_or_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_or_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_sllv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_srav_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_srlv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_test_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_test_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_testn_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_testn_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_abs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_abs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_add_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_add_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_adds_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_adds_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_adds_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_adds_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_alignr_epi8::mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_avg_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_avg_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_broadcastb_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_broadcastw_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_bslli_epi128::mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_bsrli_epi128::mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpeq_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpeq_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpeq_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpeq_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpge_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpge_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpge_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpge_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpgt_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpgt_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpgt_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpgt_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmple_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmple_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmple_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmple_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmplt_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmplt_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmplt_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmplt_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpneq_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpneq_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpneq_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpneq_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cvtepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cvtepi8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cvtepu8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cvtsepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cvtusepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_kunpackd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_kunpackw"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_madd_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maddubs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask2_permutex2var_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_abs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_abs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_add_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_add_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_adds_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_adds_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_adds_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_adds_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_avg_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_avg_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_blend_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_blend_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_broadcastb_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_broadcastw_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpeq_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpeq_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpeq_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpeq_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpge_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpge_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpge_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpge_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpgt_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpgt_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpgt_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpgt_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmple_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmple_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmple_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmple_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmplt_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmplt_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmplt_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmplt_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpneq_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpneq_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpneq_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpneq_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cvtepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cvtepi8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cvtepu8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cvtsepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cvtusepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_madd_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_maddubs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_max_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_max_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_max_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_max_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_min_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_min_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_min_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_min_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_mov_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_mov_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_mulhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_mulhi_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_mulhrs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_mullo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_packs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_packs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_packus_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_packus_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_permutex2var_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_permutexvar_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_set1_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_set1_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_shuffle_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_sll_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_sllv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_sra_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_srav_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_srl_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_srlv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_sub_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_sub_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_subs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_subs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_subs_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_subs_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_test_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_test_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_testn_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_testn_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_unpackhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_unpackhi_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_unpacklo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_unpacklo_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_abs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_abs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_add_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_add_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_adds_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_adds_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_adds_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_adds_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_avg_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_avg_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_broadcastb_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_broadcastw_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_cvtepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_cvtepi8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_cvtepu8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_cvtsepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_cvtusepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_madd_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_maddubs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_max_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_max_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_max_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_max_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_min_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_min_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_min_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_min_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_mov_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_mov_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_mulhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_mulhi_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_mulhrs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_mullo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_packs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_packs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_packus_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_packus_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_permutex2var_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_permutexvar_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_set1_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_set1_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_shuffle_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_sll_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_sllv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_sra_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_srav_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_srl_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_srlv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_sub_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_sub_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_subs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_subs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_subs_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_subs_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_unpackhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_unpackhi_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_unpacklo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_unpacklo_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_max_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_max_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_max_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_max_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_min_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_min_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_min_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_min_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_movepi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_movepi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_movm_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_movm_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mulhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mulhi_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mulhrs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mullo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_packs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_packs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_packus_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_packus_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_permutex2var_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_permutexvar_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_sad_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_shuffle_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_sll_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_sllv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_sra_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_srav_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_srl_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_srlv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_sub_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_sub_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_subs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_subs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_subs_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_subs_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_test_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_test_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_testn_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_testn_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_unpackhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_unpackhi_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_unpacklo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_unpacklo_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpeq_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpeq_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpeq_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpeq_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpge_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpge_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpge_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpge_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpgt_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpgt_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpgt_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpgt_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmple_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmple_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmple_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmple_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmplt_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmplt_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmplt_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmplt_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpneq_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpneq_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpneq_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpneq_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cvtepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cvtsepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cvtusepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask2_permutex2var_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_abs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_abs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_add_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_add_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_adds_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_adds_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_adds_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_adds_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_avg_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_avg_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_blend_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_blend_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_broadcastb_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_broadcastw_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpeq_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpeq_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpeq_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpeq_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpge_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpge_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpge_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpge_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpgt_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpgt_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpgt_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpgt_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmple_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmple_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmple_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmple_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmplt_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmplt_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmplt_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmplt_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpneq_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpneq_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpneq_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpneq_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cvtepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cvtepi8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cvtepu8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cvtsepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cvtusepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_madd_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_maddubs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_max_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_max_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_max_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_max_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_min_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_min_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_min_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_min_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_mov_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_mov_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_mulhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_mulhi_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_mulhrs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_mullo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_packs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_packs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_packus_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_packus_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_permutex2var_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_permutexvar_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_add_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_add_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_and_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_and_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_max_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_max_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_max_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_max_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_min_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_min_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_min_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_min_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_mul_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_mul_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_or_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_or_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_set1_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_set1_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_shuffle_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_sll_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_sllv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_sra_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_srav_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_srl_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_srlv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_sub_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_sub_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_subs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_subs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_subs_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_subs_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_test_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_test_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_testn_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_testn_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_unpackhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_unpackhi_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_unpacklo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_unpacklo_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_abs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_abs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_add_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_add_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_adds_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_adds_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_adds_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_adds_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_avg_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_avg_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_broadcastb_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_broadcastw_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_cvtepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_cvtepi8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_cvtepu8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_cvtsepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_cvtusepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_madd_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_maddubs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_max_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_max_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_max_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_max_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_min_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_min_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_min_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_min_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_mov_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_mov_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_mulhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_mulhi_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_mulhrs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_mullo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_packs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_packs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_packus_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_packus_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_permutex2var_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_permutexvar_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_set1_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_set1_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_shuffle_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_sll_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_sllv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_sra_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_srav_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_srl_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_srlv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_sub_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_sub_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_subs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_subs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_subs_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_subs_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_unpackhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_unpackhi_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_unpacklo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_unpacklo_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_movepi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_movepi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_movm_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_movm_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_permutex2var_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_permutexvar_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_add_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_add_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_and_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_and_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_max_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_max_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_max_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_max_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_min_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_min_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_min_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_min_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_mul_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_mul_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_or_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_or_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_sllv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_srav_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_srlv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_test_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_test_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_testn_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_testn_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_broadcastmb_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_broadcastmw_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_conflict_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_conflict_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_lzcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_lzcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_mask_conflict_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_mask_conflict_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_mask_lzcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_mask_lzcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_maskz_conflict_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_maskz_conflict_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_maskz_lzcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_maskz_lzcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_broadcastmb_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_broadcastmw_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_conflict_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_conflict_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_lzcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_lzcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_mask_conflict_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_mask_conflict_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_mask_lzcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_mask_lzcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_maskz_conflict_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_maskz_conflict_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_maskz_lzcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_maskz_lzcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_broadcastmb_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_broadcastmw_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_conflict_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_conflict_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_lzcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_lzcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_mask_conflict_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_mask_conflict_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_mask_lzcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_mask_lzcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_maskz_conflict_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_maskz_conflict_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_maskz_lzcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_maskz_lzcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_cvtmask8_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_cvtu32_mask8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kadd_mask16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kadd_mask8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kand_mask8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kandn_mask8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_knot_mask8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kor_mask8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kortestc_mask8_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kortestz_mask8_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_ktestc_mask16_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_ktestc_mask8_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_ktestz_mask16_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_ktestz_mask8_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kxnor_mask8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kxor_mask8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_broadcast_f32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_broadcast_f64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_broadcast_i32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_broadcast_i64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvtepi64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvtepi64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvtepu64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvtepu64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvtpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvtpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvtps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvtps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvttpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvttpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvttps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvttps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_and_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_and_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_andnot_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_andnot_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_broadcast_f32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_broadcast_f64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_broadcast_i32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_broadcast_i64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvtepi64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvtepi64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvtepu64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvtepu64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvtpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvtpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvtps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvtps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvttpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvttpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvttps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvttps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_mullo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_or_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_or_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_xor_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_xor_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_and_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_and_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_andnot_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_andnot_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_broadcast_f32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_broadcast_f64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_broadcast_i32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_broadcast_i64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvtepi64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvtepi64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvtepu64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvtepu64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvtpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvtpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvtps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvtps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvttpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvttpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvttps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvttps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_mullo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_or_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_or_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_xor_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_xor_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_movepi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_movepi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_movm_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_movm_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mullo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_and_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_and_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_andnot_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_andnot_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_broadcast_f32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_broadcast_f32x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_broadcast_f64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_broadcast_i32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_broadcast_i32x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_broadcast_i64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvtepi64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvtepi64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvtepu64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvtepu64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvtpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvtpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvtps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvtps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvttpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvttpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvttps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvttps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_and_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_and_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_andnot_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_andnot_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_broadcast_f32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_broadcast_f32x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_broadcast_f64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_broadcast_i32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_broadcast_i32x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_broadcast_i64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvtepi64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvtepi64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvtepu64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvtepu64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvtpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvtpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvtps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvtps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvttpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvttpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvttps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvttps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_mullo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_or_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_or_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_xor_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_xor_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_and_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_and_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_andnot_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_andnot_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_broadcast_f32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_broadcast_f32x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_broadcast_f64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_broadcast_i32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_broadcast_i32x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_broadcast_i64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvtepi64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvtepi64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvtepu64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvtepu64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvtpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvtpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvtps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvtps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvttpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvttpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvttps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvttps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_mullo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_or_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_or_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_xor_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_xor_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_movepi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_movepi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_movm_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_movm_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mullo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_or_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_or_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_xor_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_xor_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_broadcast_i32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvtepi64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvtepi64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvtepu64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvtepu64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvtpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvtpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvtps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvtps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvttpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvttpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvttps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvttps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_and_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_and_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_andnot_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_andnot_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_broadcast_i32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvtepi64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvtepi64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvtepu64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvtepu64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvtpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvtpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvtps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvtps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvttpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvttpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvttps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvttps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_mullo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_or_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_or_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_xor_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_xor_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_and_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_and_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_andnot_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_andnot_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_broadcast_i32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvtepi64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvtepi64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvtepu64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvtepu64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvtpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvtpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvtps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvtps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvttpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvttpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvttps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvttps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_mullo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_or_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_or_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_xor_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_xor_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_movepi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_movepi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_movm_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_movm_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mullo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_cvtmask16_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_cvtu32_mask16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_kand_mask16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_kandn_mask16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_knot_mask16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_kor_mask16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_kortestc_mask16_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_kortestz_mask16_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_kxnor_mask16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_kxor_mask16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_abs_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_broadcast_f32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_broadcast_i32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpeq_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpeq_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpeq_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpeq_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpge_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpge_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpge_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpge_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpgt_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpgt_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpgt_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpgt_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmple_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmple_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmple_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmple_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmplt_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmplt_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmplt_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmplt_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpneq_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpneq_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpneq_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpneq_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtepu32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtsepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtsepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtsepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtsepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtsepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvttpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvttps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtusepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtusepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtusepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtusepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtusepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_getexp_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_getexp_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask2_permutex2var_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask2_permutex2var_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask2_permutex2var_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask2_permutex2var_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fmaddsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fmaddsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fmsubadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fmsubadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fnmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fnmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fnmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fnmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_abs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_abs_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_add_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_add_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_add_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_add_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_and_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_and_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_andnot_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_andnot_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_blend_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_blend_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_blend_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_blend_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_broadcast_f32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_broadcast_i32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_broadcastd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_broadcastq_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_broadcastsd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_broadcastss_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpeq_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpeq_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpeq_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpeq_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpge_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpge_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpge_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpge_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpgt_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpgt_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpgt_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpgt_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmple_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmple_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmple_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmple_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmplt_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmplt_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmplt_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmplt_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpneq_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpneq_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpneq_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpneq_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_compress_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_compress_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_compress_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_compress_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi32_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepu16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepu16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepu32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepu32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepu8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepu8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtpd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtsepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtsepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtsepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtsepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtsepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvttpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvttpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvttps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvttps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtusepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtusepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtusepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtusepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtusepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_div_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_div_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_expand_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_expand_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_expand_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_expand_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fmaddsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fmaddsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fmsubadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fmsubadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fnmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fnmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fnmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fnmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_getexp_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_getexp_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_max_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_max_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_max_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_max_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_max_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_max_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_min_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_min_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_min_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_min_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_min_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_min_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_mov_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_mov_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_mov_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_mov_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_movedup_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_movehdup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_moveldup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_mul_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_mul_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_mul_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_mul_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_mullo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_or_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_or_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_permutevar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_permutevar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_permutex2var_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_permutex2var_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_permutex2var_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_permutex2var_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_permutexvar_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_permutexvar_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_permutexvar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_permutexvar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_rcp14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_rcp14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_rolv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_rolv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_rorv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_rorv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_rsqrt14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_rsqrt14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_scalef_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_scalef_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_set1_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_set1_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sll_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sll_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sllv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sllv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sqrt_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sqrt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sra_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sra_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_srav_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_srav_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_srl_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_srl_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_srlv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_srlv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sub_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sub_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_test_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_test_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_testn_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_testn_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_unpackhi_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_unpackhi_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_unpackhi_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_unpackhi_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_unpacklo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_unpacklo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_unpacklo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_unpacklo_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_xor_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_xor_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_abs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_abs_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_add_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_add_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_add_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_add_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_and_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_and_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_andnot_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_andnot_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_broadcast_f32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_broadcast_i32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_broadcastd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_broadcastq_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_broadcastsd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_broadcastss_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_compress_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_compress_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_compress_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_compress_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi32_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepu16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepu16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepu32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepu32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepu8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepu8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtpd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtsepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtsepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtsepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtsepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtsepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvttpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvttpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvttps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvttps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtusepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtusepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtusepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtusepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtusepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_div_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_div_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_expand_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_expand_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_expand_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_expand_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fmaddsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fmaddsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fmsubadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fmsubadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fnmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fnmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fnmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fnmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_getexp_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_getexp_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_max_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_max_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_max_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_max_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_max_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_max_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_min_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_min_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_min_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_min_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_min_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_min_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_mov_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_mov_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_mov_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_mov_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_movedup_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_movehdup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_moveldup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_mul_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_mul_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_mul_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_mul_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_mullo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_or_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_or_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_permutevar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_permutevar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_permutex2var_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_permutex2var_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_permutex2var_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_permutex2var_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_permutexvar_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_permutexvar_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_permutexvar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_permutexvar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_rcp14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_rcp14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_rolv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_rolv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_rorv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_rorv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_rsqrt14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_rsqrt14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_scalef_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_scalef_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_set1_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_set1_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sll_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sll_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sllv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sllv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sqrt_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sqrt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sra_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sra_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_srav_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_srav_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_srl_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_srl_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_srlv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_srlv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sub_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sub_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_unpackhi_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_unpackhi_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_unpackhi_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_unpackhi_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_unpacklo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_unpacklo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_unpacklo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_unpacklo_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_xor_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_xor_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_max_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_max_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_min_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_min_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_or_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_or_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_permutex2var_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_permutex2var_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_permutex2var_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_permutex2var_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_permutexvar_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_permutexvar_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_permutexvar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_permutexvar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_rcp14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_rcp14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_rolv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_rolv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_rorv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_rorv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_rsqrt14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_rsqrt14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_scalef_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_scalef_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_sra_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_srav_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_test_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_test_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_testn_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_testn_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_xor_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_xor_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_abs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_abs_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_abs_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_abs_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_add_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_add_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_add_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_add_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_and_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_and_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_and_si512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_andnot_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_andnot_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_andnot_si512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_broadcast_f32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_broadcast_f64x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_broadcast_i32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_broadcast_i64x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_broadcastd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_broadcastq_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_broadcastsd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_broadcastss_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castpd128_pd512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castpd256_pd512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castpd512_pd128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castpd512_pd256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castpd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castpd_si512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castps128_ps512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castps256_ps512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castps512_ps128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castps512_ps256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castps_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castps_si512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castsi128_si512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castsi256_si512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castsi512_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castsi512_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castsi512_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castsi512_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpeq_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpeq_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpeq_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpeq_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpeq_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpeq_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpge_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpge_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpge_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpge_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpgt_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpgt_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpgt_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpgt_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmple_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmple_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmple_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmple_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmple_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmple_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmplt_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmplt_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmplt_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmplt_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmplt_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmplt_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpneq_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpneq_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpneq_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpneq_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpneq_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpneq_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpnle_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpnle_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpnlt_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpnlt_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpord_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpord_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpunord_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpunord_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi32_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi32lo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepu16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepu16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepu32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepu32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepu32_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepu32lo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepu8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepu8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtpd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtpd_pslo"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtps_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtpslo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtsd_f64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtsepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtsepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtsepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtsepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtsepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtsi512_si32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtss_f32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvttpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvttpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvttps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvttps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtusepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtusepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtusepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtusepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtusepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_div_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_div_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fmaddsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fmaddsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fmsubadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fmsubadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fnmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fnmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fnmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fnmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_getexp_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_getexp_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_int2mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kand"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kandn"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kmov"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_knot"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kor"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kortestc"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kortestz"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kunpackb"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kxnor"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kxor"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask2_permutex2var_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask2_permutex2var_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask2_permutex2var_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask2_permutex2var_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask2int"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fmaddsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fmaddsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fmsubadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fmsubadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fnmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fnmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fnmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fnmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_abs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_abs_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_abs_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_abs_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_add_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_add_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_add_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_add_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_and_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_and_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_andnot_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_andnot_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_blend_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_blend_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_blend_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_blend_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_broadcast_f32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_broadcast_f64x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_broadcast_i32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_broadcast_i64x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_broadcastd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_broadcastq_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_broadcastsd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_broadcastss_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpeq_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpeq_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpeq_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpeq_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpeq_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpeq_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpge_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpge_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpge_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpge_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpgt_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpgt_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpgt_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpgt_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmple_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmple_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmple_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmple_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmple_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmple_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmplt_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmplt_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmplt_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmplt_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmplt_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmplt_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpneq_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpneq_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpneq_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpneq_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpneq_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpneq_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpnle_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpnle_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpnlt_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpnlt_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpord_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpord_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpunord_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpunord_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_compress_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_compress_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_compress_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_compress_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi32_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi32lo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepu16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepu16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepu32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepu32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepu32_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepu32lo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepu8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepu8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtpd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtpd_pslo"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtps_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtpslo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtsepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtsepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtsepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtsepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtsepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvttpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvttpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvttps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvttps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtusepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtusepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtusepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtusepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtusepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_div_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_div_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_expand_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_expand_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_expand_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_expand_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fmaddsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fmaddsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fmsubadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fmsubadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fnmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fnmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fnmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fnmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_getexp_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_getexp_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_max_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_max_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_max_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_max_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_max_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_max_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_min_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_min_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_min_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_min_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_min_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_min_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_mov_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_mov_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_mov_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_mov_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_movedup_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_movehdup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_moveldup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_mul_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_mul_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_mul_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_mul_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_mullo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_mullox_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_or_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_or_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutevar_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutevar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutevar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutex2var_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutex2var_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutex2var_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutex2var_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutexvar_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutexvar_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutexvar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutexvar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_rcp14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_rcp14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_add_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_add_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_add_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_add_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_and_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_and_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_max_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_max_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_max_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_max_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_max_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_max_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_min_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_min_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_min_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_min_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_min_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_min_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_mul_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_mul_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_mul_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_mul_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_or_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_or_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_rolv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_rolv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_rorv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_rorv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_rsqrt14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_rsqrt14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_scalef_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_scalef_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_set1_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_set1_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sll_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sll_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sllv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sllv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sqrt_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sqrt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sra_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sra_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_srav_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_srav_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_srl_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_srl_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_srlv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_srlv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sub_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sub_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_test_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_test_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_testn_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_testn_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_unpackhi_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_unpackhi_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_unpackhi_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_unpackhi_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_unpacklo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_unpacklo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_unpacklo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_unpacklo_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_xor_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_xor_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_abs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_abs_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_add_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_add_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_add_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_add_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_and_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_and_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_andnot_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_andnot_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_broadcast_f32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_broadcast_f64x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_broadcast_i32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_broadcast_i64x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_broadcastd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_broadcastq_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_broadcastsd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_broadcastss_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_compress_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_compress_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_compress_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_compress_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi32_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepu16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepu16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepu32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepu32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepu32_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepu8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepu8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtpd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtps_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtsepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtsepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtsepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtsepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtsepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvttpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvttpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvttps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvttps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtusepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtusepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtusepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtusepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtusepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_div_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_div_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_expand_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_expand_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_expand_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_expand_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fmaddsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fmaddsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fmsubadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fmsubadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fnmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fnmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fnmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fnmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_getexp_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_getexp_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_max_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_max_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_max_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_max_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_max_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_max_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_min_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_min_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_min_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_min_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_min_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_min_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_mov_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_mov_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_mov_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_mov_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_movedup_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_movehdup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_moveldup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_mul_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_mul_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_mul_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_mul_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_mullo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_or_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_or_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_permutevar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_permutevar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_permutex2var_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_permutex2var_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_permutex2var_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_permutex2var_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_permutexvar_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_permutexvar_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_permutexvar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_permutexvar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_rcp14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_rcp14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_rolv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_rolv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_rorv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_rorv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_rsqrt14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_rsqrt14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_scalef_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_scalef_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_set1_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_set1_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sll_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sll_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sllv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sllv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sqrt_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sqrt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sra_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sra_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_srav_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_srav_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_srl_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_srl_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_srlv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_srlv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sub_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sub_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_unpackhi_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_unpackhi_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_unpackhi_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_unpackhi_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_unpacklo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_unpacklo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_unpacklo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_unpacklo_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_xor_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_xor_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_max_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_max_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_max_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_max_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_max_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_max_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_min_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_min_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_min_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_min_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_min_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_min_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_movedup_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_movehdup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_moveldup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mul_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mul_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mul_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mul_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mullo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mullox_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_or_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_or_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_or_si512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutevar_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutevar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutevar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutex2var_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutex2var_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutex2var_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutex2var_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutexvar_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutexvar_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutexvar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutexvar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_rcp14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_rcp14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_add_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_add_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_add_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_add_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_and_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_and_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_max_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_max_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_max_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_max_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_max_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_max_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_min_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_min_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_min_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_min_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_min_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_min_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_mul_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_mul_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_mul_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_mul_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_or_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_or_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_rolv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_rolv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_rorv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_rorv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_rsqrt14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_rsqrt14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_scalef_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_scalef_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set1_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set1_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set1_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set1_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set1_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set1_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set4_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set4_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set4_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set4_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setr4_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setr4_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setr4_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setr4_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setr_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setr_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setr_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setr_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setzero"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setzero_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setzero_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setzero_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setzero_si512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sll_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sll_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sllv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sllv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sqrt_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sqrt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sra_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sra_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_srav_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_srav_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_srl_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_srl_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_srlv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_srlv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sub_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sub_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_test_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_test_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_testn_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_testn_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_undefined"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_undefined_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_undefined_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_undefined_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_unpackhi_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_unpackhi_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_unpackhi_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_unpackhi_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_unpacklo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_unpacklo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_unpacklo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_unpacklo_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_xor_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_xor_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_xor_si512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_zextpd128_pd512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_zextpd256_pd512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_zextps128_ps512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_zextps256_ps512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_zextsi128_si512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_zextsi256_si512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_abs_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpeq_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpeq_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpeq_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpeq_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpge_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpge_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpge_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpge_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpgt_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpgt_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpgt_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpgt_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmple_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmple_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmple_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmple_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmplt_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmplt_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmplt_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmplt_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpneq_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpneq_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpneq_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpneq_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtepu32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvti32_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvti32_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtsd_i32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtsd_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtsepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtsepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtsepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtsepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtsepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtss_i32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtss_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvttpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvttps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvttsd_i32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvttsd_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvttss_i32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvttss_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtu32_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtu32_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtusepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtusepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtusepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtusepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtusepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_getexp_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_getexp_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_getexp_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_getexp_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask2_permutex2var_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask2_permutex2var_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask2_permutex2var_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask2_permutex2var_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmadd_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmadd_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmaddsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmaddsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmsub_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmsub_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmsubadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmsubadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fnmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fnmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fnmadd_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fnmadd_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fnmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fnmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fnmsub_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fnmsub_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_abs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_abs_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_add_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_add_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_add_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_add_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_add_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_add_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_and_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_and_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_andnot_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_andnot_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_blend_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_blend_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_blend_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_blend_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_broadcastd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_broadcastq_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_broadcastss_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpeq_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpeq_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpeq_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpeq_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpge_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpge_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpge_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpge_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpgt_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpgt_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpgt_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpgt_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmple_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmple_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmple_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmple_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmplt_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmplt_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmplt_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmplt_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpneq_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpneq_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpneq_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpneq_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_compress_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_compress_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_compress_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_compress_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi32_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepu16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepu16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepu32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepu32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepu8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepu8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtpd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtsd_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtsepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtsepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtsepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtsepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtsepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtss_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvttpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvttpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvttps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvttps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtusepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtusepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtusepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtusepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtusepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_div_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_div_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_div_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_div_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_expand_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_expand_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_expand_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_expand_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmadd_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmadd_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmaddsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmaddsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmsub_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmsub_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmsubadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmsubadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fnmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fnmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fnmadd_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fnmadd_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fnmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fnmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fnmsub_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fnmsub_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_getexp_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_getexp_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_getexp_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_getexp_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_max_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_max_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_max_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_max_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_max_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_max_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_max_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_max_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_min_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_min_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_min_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_min_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_min_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_min_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_min_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_min_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mov_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mov_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mov_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mov_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_move_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_move_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_movedup_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_movehdup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_moveldup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mul_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mul_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mul_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mul_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mul_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mul_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mullo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_or_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_or_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_permutevar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_permutevar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_permutex2var_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_permutex2var_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_permutex2var_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_permutex2var_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rcp14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rcp14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rcp14_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rcp14_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rolv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rolv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rorv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rorv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rsqrt14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rsqrt14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rsqrt14_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rsqrt14_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_scalef_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_scalef_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_scalef_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_scalef_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_set1_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_set1_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sll_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sll_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sllv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sllv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sqrt_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sqrt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sqrt_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sqrt_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sra_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sra_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_srav_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_srav_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_srl_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_srl_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_srlv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_srlv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sub_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sub_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sub_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sub_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_test_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_test_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_testn_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_testn_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_unpackhi_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_unpackhi_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_unpackhi_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_unpackhi_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_unpacklo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_unpacklo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_unpacklo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_unpacklo_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_xor_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_xor_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_abs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_abs_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_add_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_add_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_add_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_add_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_add_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_add_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_and_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_and_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_andnot_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_andnot_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_broadcastd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_broadcastq_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_broadcastss_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_compress_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_compress_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_compress_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_compress_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi32_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepu16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepu16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepu32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepu32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepu8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepu8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtpd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtsd_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtsepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtsepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtsepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtsepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtsepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtss_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvttpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvttpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvttps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvttps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtusepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtusepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtusepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtusepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtusepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_div_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_div_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_div_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_div_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_expand_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_expand_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_expand_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_expand_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmadd_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmadd_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmaddsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmaddsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmsub_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmsub_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmsubadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmsubadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fnmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fnmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fnmadd_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fnmadd_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fnmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fnmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fnmsub_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fnmsub_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_getexp_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_getexp_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_getexp_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_getexp_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_max_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_max_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_max_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_max_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_max_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_max_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_max_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_max_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_min_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_min_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_min_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_min_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_min_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_min_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_min_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_min_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mov_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mov_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mov_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mov_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_move_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_move_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_movedup_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_movehdup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_moveldup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mul_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mul_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mul_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mul_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mul_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mul_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mullo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_or_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_or_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_permutevar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_permutevar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_permutex2var_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_permutex2var_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_permutex2var_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_permutex2var_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rcp14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rcp14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rcp14_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rcp14_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rolv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rolv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rorv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rorv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rsqrt14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rsqrt14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rsqrt14_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rsqrt14_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_scalef_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_scalef_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_scalef_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_scalef_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_set1_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_set1_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sll_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sll_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sllv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sllv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sqrt_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sqrt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sqrt_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sqrt_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sra_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sra_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_srav_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_srav_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_srl_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_srl_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_srlv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_srlv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sub_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sub_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sub_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sub_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_unpackhi_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_unpackhi_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_unpackhi_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_unpackhi_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_unpacklo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_unpacklo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_unpacklo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_unpacklo_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_xor_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_xor_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_max_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_max_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_min_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_min_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_or_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_or_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_permutex2var_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_permutex2var_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_permutex2var_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_permutex2var_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rcp14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rcp14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rcp14_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rcp14_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rolv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rolv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rorv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rorv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rsqrt14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rsqrt14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rsqrt14_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rsqrt14_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_scalef_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_scalef_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_scalef_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_scalef_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_sra_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_srav_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_test_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_test_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_testn_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_testn_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_xor_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_xor_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_abs_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_add_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_castpd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_castph128_ph256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_castph256_ph128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_castph_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_castph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_castph_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_castps_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_castsi256_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_conj_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtepi16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtepi32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtepi64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtepu16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtepu32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtepu64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtpd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtph_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtsh_h"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvttph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvttph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvttph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvttph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvttph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvttph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtxph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtxps_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_div_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_fcmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_fcmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_fmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_fmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_fmaddsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_fmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_fmsubadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_fmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_fnmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_fnmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_getexp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask3_fcmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask3_fmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask3_fmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask3_fmaddsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask3_fmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask3_fmsubadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask3_fnmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask3_fnmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_add_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_blend_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_conj_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtepi16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtepi32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtepi64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtepu16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtepu32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtepu64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtpd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtph_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvttph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvttph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvttph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvttph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvttph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvttph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtxph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtxps_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_div_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_fcmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_fcmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_fmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_fmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_fmaddsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_fmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_fmsubadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_fmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_fnmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_fnmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_getexp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_max_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_min_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_mul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_mul_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_rcp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_rsqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_scalef_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_sqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_sub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_add_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_conj_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtepi16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtepi32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtepi64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtepu16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtepu32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtepu64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtpd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtph_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvttph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvttph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvttph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvttph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvttph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvttph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtxph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtxps_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_div_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_fcmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_fcmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_fmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_fmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_fmaddsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_fmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_fmsubadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_fmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_fnmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_fnmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_getexp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_max_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_min_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_mul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_mul_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_rcp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_rsqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_scalef_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_sqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_sub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_max_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_min_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mul_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_permutex2var_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_permutexvar_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_rcp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_reduce_add_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_reduce_max_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_reduce_min_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_reduce_mul_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_rsqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_scalef_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_set1_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_set_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_setr_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_setzero_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_sqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_sub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_undefined_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_zextph128_ph256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_abs_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_add_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_castpd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_castph128_ph512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_castph256_ph512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_castph512_ph128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_castph512_ph256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_castph_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_castph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_castph_si512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_castps_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_castsi512_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_conj_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtepi16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtepi32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtepi64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtepu16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtepu32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtepu64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtpd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtph_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtsh_h"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvttph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvttph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvttph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvttph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvttph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvttph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtxph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtxps_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_div_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_fcmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_fcmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_fmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_fmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_fmaddsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_fmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_fmsubadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_fmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_fnmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_fnmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_getexp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask3_fcmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask3_fmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask3_fmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask3_fmaddsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask3_fmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask3_fmsubadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask3_fnmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask3_fnmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_add_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_blend_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_conj_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtepi16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtepi32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtepi64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtepu16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtepu32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtepu64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtpd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtph_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvttph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvttph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvttph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvttph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvttph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvttph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtxph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtxps_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_div_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_fcmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_fcmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_fmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_fmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_fmaddsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_fmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_fmsubadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_fmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_fnmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_fnmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_getexp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_max_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_min_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_mul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_mul_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_rcp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_rsqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_scalef_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_sqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_sub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_add_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_conj_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtepi16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtepi32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtepi64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtepu16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtepu32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtepu64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtpd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtph_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvttph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvttph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvttph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvttph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvttph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvttph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtxph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtxps_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_div_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_fcmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_fcmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_fmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_fmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_fmaddsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_fmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_fmsubadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_fmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_fnmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_fnmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_getexp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_max_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_min_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_mul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_mul_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_rcp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_rsqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_scalef_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_sqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_sub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_max_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_min_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mul_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_permutex2var_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_permutexvar_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_rcp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_reduce_add_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_reduce_max_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_reduce_min_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_reduce_mul_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_rsqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_scalef_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_set1_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_set_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_setr_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_setzero_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_sqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_sub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_undefined_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_zextph128_ph512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_zextph256_ph512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_abs_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_add_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_add_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_castpd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_castph_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_castph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_castph_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_castps_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_castsi128_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cmul_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_comieq_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_comige_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_comigt_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_comile_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_comilt_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_comineq_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_conj_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtepi16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtepi32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtepi64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtepu16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtepu32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtepu64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvti32_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtpd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtph_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtsd_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtsh_h"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtsh_i32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtsh_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtsh_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtsh_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtsi128_si16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtsi16_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtss_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvttph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvttph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvttph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvttph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvttph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvttph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvttsh_i32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvttsh_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtu32_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtxph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtxps_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_div_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_div_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fcmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fcmadd_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fcmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fcmul_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fmadd_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fmadd_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fmaddsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fmsub_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fmsubadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fmul_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fnmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fnmadd_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fnmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fnmsub_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_getexp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_getexp_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fcmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fcmadd_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fmadd_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fmadd_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fmaddsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fmsub_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fmsubadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fnmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fnmadd_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fnmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fnmsub_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_add_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_add_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_blend_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cmul_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_conj_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtepi16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtepi32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtepi64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtepu16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtepu32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtepu64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtpd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtph_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtsd_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtsh_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtsh_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtss_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvttph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvttph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvttph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvttph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvttph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvttph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtxph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtxps_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_div_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_div_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fcmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fcmadd_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fcmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fcmul_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fmadd_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fmadd_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fmaddsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fmsub_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fmsubadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fmul_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fnmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fnmadd_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fnmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fnmsub_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_getexp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_getexp_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_max_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_max_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_min_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_min_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_move_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_mul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_mul_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_mul_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_mul_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_rcp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_rcp_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_rsqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_rsqrt_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_scalef_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_scalef_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_sqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_sqrt_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_sub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_sub_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_add_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_add_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cmul_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_conj_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtepi16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtepi32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtepi64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtepu16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtepu32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtepu64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtpd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtph_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtsd_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtsh_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtsh_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtss_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvttph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvttph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvttph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvttph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvttph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvttph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtxph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtxps_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_div_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_div_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fcmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fcmadd_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fcmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fcmul_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fmadd_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fmadd_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fmaddsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fmsub_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fmsubadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fmul_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fnmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fnmadd_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fnmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fnmsub_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_getexp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_getexp_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_max_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_max_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_min_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_min_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_move_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_mul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_mul_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_mul_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_mul_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_rcp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_rcp_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_rsqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_rsqrt_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_scalef_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_scalef_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_sqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_sqrt_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_sub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_sub_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_max_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_max_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_min_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_min_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_move_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mul_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mul_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mul_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_permutex2var_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_permutexvar_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_rcp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_rcp_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_reduce_add_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_reduce_max_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_reduce_min_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_reduce_mul_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_rsqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_rsqrt_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_scalef_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_scalef_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_set1_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_set_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_set_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_setr_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_setzero_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_sqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_sqrt_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_sub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_sub_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_ucomieq_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_ucomige_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_ucomigt_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_ucomile_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_ucomilt_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_ucomineq_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_undefined_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm256_madd52hi_avx_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm256_madd52hi_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm256_madd52lo_avx_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm256_madd52lo_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm256_mask_madd52hi_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm256_mask_madd52lo_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm256_maskz_madd52hi_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm256_maskz_madd52lo_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm512_madd52hi_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm512_madd52lo_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm512_mask_madd52hi_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm512_mask_madd52lo_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm512_maskz_madd52hi_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm512_maskz_madd52lo_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm_madd52hi_avx_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm_madd52hi_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm_madd52lo_avx_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm_madd52lo_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm_mask_madd52hi_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm_mask_madd52lo_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm_maskz_madd52hi_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm_maskz_madd52lo_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm256_mask2_permutex2var_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm256_mask_multishift_epi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm256_mask_permutex2var_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm256_mask_permutexvar_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm256_maskz_multishift_epi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm256_maskz_permutex2var_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm256_maskz_permutexvar_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm256_multishift_epi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm256_permutex2var_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm256_permutexvar_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm512_mask2_permutex2var_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm512_mask_multishift_epi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm512_mask_permutex2var_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm512_mask_permutexvar_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm512_maskz_multishift_epi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm512_maskz_permutex2var_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm512_maskz_permutexvar_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm512_multishift_epi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm512_permutex2var_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm512_permutexvar_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm_mask2_permutex2var_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm_mask_multishift_epi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm_mask_permutex2var_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm_mask_permutexvar_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm_maskz_multishift_epi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm_maskz_permutex2var_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm_maskz_permutexvar_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm_multishift_epi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm_permutex2var_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm_permutexvar_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_mask_compress_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_mask_compress_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_mask_expand_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_mask_expand_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_mask_shldv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_mask_shldv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_mask_shldv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_mask_shrdv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_mask_shrdv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_mask_shrdv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_maskz_compress_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_maskz_compress_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_maskz_expand_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_maskz_expand_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_maskz_shldv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_maskz_shldv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_maskz_shldv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_maskz_shrdv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_maskz_shrdv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_maskz_shrdv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_shldv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_shldv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_shldv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_shrdv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_shrdv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_shrdv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_mask_compress_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_mask_compress_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_mask_expand_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_mask_expand_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_mask_shldv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_mask_shldv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_mask_shldv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_mask_shrdv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_mask_shrdv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_mask_shrdv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_maskz_compress_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_maskz_compress_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_maskz_expand_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_maskz_expand_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_maskz_shldv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_maskz_shldv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_maskz_shldv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_maskz_shrdv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_maskz_shrdv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_maskz_shrdv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_shldv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_shldv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_shldv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_shrdv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_shrdv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_shrdv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_mask_compress_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_mask_compress_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_mask_expand_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_mask_expand_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_mask_shldv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_mask_shldv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_mask_shldv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_mask_shrdv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_mask_shrdv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_mask_shrdv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_maskz_compress_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_maskz_compress_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_maskz_expand_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_maskz_expand_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_maskz_shldv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_maskz_shldv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_maskz_shldv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_maskz_shrdv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_maskz_shrdv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_maskz_shrdv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_shldv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_shldv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_shldv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_shrdv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_shrdv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_shrdv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpbssd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpbssds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpbsud_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpbsuds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpbusd_avx_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpbusd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpbusds_avx_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpbusds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpbuud_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpbuuds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpwssd_avx_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpwssd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpwssds_avx_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpwssds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpwsud_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpwsuds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpwusd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpwusds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpwuud_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpwuuds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_mask_dpbusd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_mask_dpbusds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_mask_dpwssd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_mask_dpwssds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_maskz_dpbusd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_maskz_dpbusds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_maskz_dpwssd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_maskz_dpwssds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_dpbusd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_dpbusds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_dpwssd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_dpwssds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_mask_dpbusd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_mask_dpbusds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_mask_dpwssd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_mask_dpwssds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_maskz_dpbusd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_maskz_dpbusds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_maskz_dpwssd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_maskz_dpwssds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpbssd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpbssds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpbsud_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpbsuds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpbusd_avx_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpbusd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpbusds_avx_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpbusds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpbuud_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpbuuds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpwssd_avx_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpwssd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpwssds_avx_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpwssds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpwsud_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpwsuds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpwusd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpwusds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpwuud_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpwuuds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_mask_dpbusd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_mask_dpbusds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_mask_dpwssd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_mask_dpwssds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_maskz_dpbusd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_maskz_dpbusds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_maskz_dpwssd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_maskz_dpwssds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm256_mask_popcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm256_mask_popcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm256_maskz_popcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm256_maskz_popcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm256_popcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm256_popcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm512_mask_popcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm512_mask_popcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm512_maskz_popcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm512_maskz_popcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm512_popcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm512_popcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm_mask_popcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm_mask_popcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm_maskz_popcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm_maskz_popcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm_popcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm_popcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avxneconvert.rs",
    "func": "core_arch::x86::avxneconvert::_mm256_cvtneps_avx_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avxneconvert.rs",
    "func": "core_arch::x86::avxneconvert::_mm_cvtneps_avx_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_andn_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_bextr2_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_bextr_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_blsi_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_blsmsk_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_blsr_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_mm_tzcnt_32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_tzcnt_u16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_tzcnt_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi2.rs",
    "func": "core_arch::x86::bmi2::_bzhi_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi2.rs",
    "func": "core_arch::x86::bmi2::_mulx_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi2.rs",
    "func": "core_arch::x86::bmi2::_pdep_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi2.rs",
    "func": "core_arch::x86::bmi2::_pext_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bswap.rs",
    "func": "core_arch::x86::bswap::_bswap"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/cpuid.rs",
    "func": "<core_arch::x86::cpuid::CpuidResult as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/cpuid.rs",
    "func": "<core_arch::x86::cpuid::CpuidResult as cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/cpuid.rs",
    "func": "<core_arch::x86::cpuid::CpuidResult as cmp::Ord>::cmp"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/cpuid.rs",
    "func": "<core_arch::x86::cpuid::CpuidResult as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/cpuid.rs",
    "func": "<core_arch::x86::cpuid::CpuidResult as cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/cpuid.rs",
    "func": "core_arch::x86::cpuid::__cpuid"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/cpuid.rs",
    "func": "core_arch::x86::cpuid::__cpuid_count"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/cpuid.rs",
    "func": "core_arch::x86::cpuid::__get_cpuid_max"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/eflags.rs",
    "func": "core_arch::x86::eflags::__readeflags"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/eflags.rs",
    "func": "core_arch::x86::eflags::__writeeflags"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/f16c.rs",
    "func": "core_arch::x86::f16c::_mm256_cvtph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/f16c.rs",
    "func": "core_arch::x86::f16c::_mm_cvtph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fmaddsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fmaddsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fmsubadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fmsubadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fnmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fnmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fnmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fnmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmadd_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmadd_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmaddsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmaddsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmsub_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmsub_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmsubadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmsubadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fnmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fnmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fnmadd_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fnmadd_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fnmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fnmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fnmsub_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fnmsub_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/gfni.rs",
    "func": "core_arch::x86::gfni::_mm256_gf2p8mul_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/gfni.rs",
    "func": "core_arch::x86::gfni::_mm256_mask_gf2p8mul_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/gfni.rs",
    "func": "core_arch::x86::gfni::_mm256_maskz_gf2p8mul_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/gfni.rs",
    "func": "core_arch::x86::gfni::_mm512_gf2p8mul_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/gfni.rs",
    "func": "core_arch::x86::gfni::_mm512_mask_gf2p8mul_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/gfni.rs",
    "func": "core_arch::x86::gfni::_mm512_maskz_gf2p8mul_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/gfni.rs",
    "func": "core_arch::x86::gfni::_mm_gf2p8mul_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/gfni.rs",
    "func": "core_arch::x86::gfni::_mm_mask_gf2p8mul_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/gfni.rs",
    "func": "core_arch::x86::gfni::_mm_maskz_gf2p8mul_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/kl.rs",
    "func": "core_arch::x86::kl::_mm_loadiwkey"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "<core_arch::x86::bf16 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::f16x16>::as_m256h"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::f16x32>::as_m512h"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::f16x8>::as_m128h"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::f32x16>::as_m512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::f32x4>::as_m128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::f32x8>::as_m256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::f64x2>::as_m128d"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::f64x4>::as_m256d"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::f64x8>::as_m512d"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i16x16>::as_m256bh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i16x16>::as_m256i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i16x32>::as_m512bh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i16x32>::as_m512i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i16x8>::as_m128bh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i16x8>::as_m128i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i32x16>::as_m512bh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i32x16>::as_m512i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i32x4>::as_m128bh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i32x4>::as_m128i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i32x8>::as_m256bh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i32x8>::as_m256i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i64x2>::as_m128i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i64x4>::as_m256i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i64x8>::as_m512i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i8x16>::as_m128i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i8x32>::as_m256i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i8x64>::as_m512i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u16x16>::as_m256bh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u16x16>::as_m256i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u16x32>::as_m512bh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u16x32>::as_m512i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u16x8>::as_m128bh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u16x8>::as_m128i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u32x16>::as_m512bh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u32x16>::as_m512i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u32x4>::as_m128bh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u32x4>::as_m128i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u32x8>::as_m256bh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u32x8>::as_m256i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u64x2>::as_m128i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u64x4>::as_m256i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u64x8>::as_m512i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u8x16>::as_m128i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u8x32>::as_m256i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u8x64>::as_m512i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128::as_f32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128bh::as_i16x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128bh::as_i32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128bh::as_u16x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128bh::as_u32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128d::as_f64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128h::as_f16x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128i::as_i16x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128i::as_i32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128i::as_i64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128i::as_i8x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128i::as_u16x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128i::as_u32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128i::as_u64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128i::as_u8x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256::as_f32x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256bh::as_i16x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256bh::as_i32x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256bh::as_u16x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256bh::as_u32x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256d::as_f64x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256h::as_f16x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256i::as_i16x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256i::as_i32x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256i::as_i64x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256i::as_i8x32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256i::as_u16x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256i::as_u32x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256i::as_u64x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256i::as_u8x32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512::as_f32x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512bh::as_i16x32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512bh::as_i32x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512bh::as_u16x32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512bh::as_u32x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512d::as_f64x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512h::as_f16x32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512i::as_i16x32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512i::as_i32x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512i::as_i64x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512i::as_i8x64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512i::as_u16x32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512i::as_u32x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512i::as_u64x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512i::as_u8x64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::bf16::from_bits"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::bf16::to_bits"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/rdrand.rs",
    "func": "core_arch::x86::rdrand::_rdrand16_step"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/rdrand.rs",
    "func": "core_arch::x86::rdrand::_rdrand32_step"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/rdrand.rs",
    "func": "core_arch::x86::rdrand::_rdseed16_step"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/rdrand.rs",
    "func": "core_arch::x86::rdrand::_rdseed32_step"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/rdtsc.rs",
    "func": "core_arch::x86::rdtsc::_rdtsc"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/rtm.rs",
    "func": "core_arch::x86::rtm::_xabort_code"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/rtm.rs",
    "func": "core_arch::x86::rtm::_xbegin"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/rtm.rs",
    "func": "core_arch::x86::rtm::_xend"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/rtm.rs",
    "func": "core_arch::x86::rtm::_xtest"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm256_sha512msg1_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm256_sha512msg2_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm256_sha512rnds2_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm256_sm4key4_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm256_sm4rnds4_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm_sha1msg1_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm_sha1msg2_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm_sha1nexte_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm_sha256msg1_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm_sha256msg2_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm_sha256rnds2_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm_sm3msg1_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm_sm3msg2_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm_sm4key4_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm_sm4rnds4_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_GET_EXCEPTION_MASK"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_GET_EXCEPTION_STATE"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_GET_FLUSH_ZERO_MODE"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_GET_ROUNDING_MODE"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_SET_EXCEPTION_MASK"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_SET_EXCEPTION_STATE"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_SET_FLUSH_ZERO_MODE"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_SET_ROUNDING_MODE"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_SHUFFLE"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_TRANSPOSE4_PS"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_add_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_add_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_and_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_andnot_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpeq_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpeq_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpge_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpge_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpgt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpgt_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmple_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmple_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmplt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmplt_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpneq_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpneq_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpnge_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpnge_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpngt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpngt_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpnle_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpnle_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpnlt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpnlt_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpord_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpord_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpunord_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpunord_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_comieq_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_comige_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_comigt_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_comile_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_comilt_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_comineq_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cvt_si2ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cvt_ss2si"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cvtsi32_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cvtss_f32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cvtss_si32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cvtt_ss2si"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cvttss_si32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_div_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_div_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_getcsr"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_max_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_max_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_min_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_min_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_move_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_movehl_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_movelh_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_movemask_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_mul_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_mul_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_or_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_rcp_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_rcp_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_rsqrt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_rsqrt_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_set1_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_set_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_set_ps1"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_set_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_setcsr"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_setr_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_setzero_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_sfence"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_sqrt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_sqrt_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_sub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_sub_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_ucomieq_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_ucomige_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_ucomigt_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_ucomile_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_ucomilt_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_ucomineq_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_undefined_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_unpackhi_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_unpacklo_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_xor_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_add_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_add_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_add_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_add_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_add_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_add_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_adds_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_adds_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_adds_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_adds_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_and_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_and_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_andnot_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_andnot_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_avg_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_avg_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_castpd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_castpd_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_castps_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_castps_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_castsi128_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_castsi128_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpeq_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpeq_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpeq_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpeq_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpeq_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpge_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpge_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpgt_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpgt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpgt_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpgt_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpgt_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmple_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmple_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmplt_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmplt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmplt_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmplt_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmplt_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpneq_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpneq_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpnge_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpnge_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpngt_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpngt_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpnle_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpnle_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpnlt_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpnlt_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpord_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpord_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpunord_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpunord_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_comieq_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_comige_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_comigt_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_comile_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_comilt_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_comineq_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtepi32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtepi32_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtpd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtps_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtsd_f64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtsd_si32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtsd_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtsi128_si32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtsi32_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtsi32_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtss_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvttpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvttps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvttsd_si32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_div_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_div_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_lfence"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_madd_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_max_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_max_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_max_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_max_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_mfence"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_min_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_min_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_min_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_min_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_move_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_move_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_movemask_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_movemask_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_mul_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_mul_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_mul_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_mulhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_mulhi_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_mullo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_or_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_or_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_packs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_packs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_packus_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_pause"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sad_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set1_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set1_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set1_epi64x"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set1_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set1_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set_epi64x"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set_pd1"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_setr_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_setr_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_setr_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_setr_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_setzero_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_setzero_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sll_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sll_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sll_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_slli_si128_impl::mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sqrt_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sqrt_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sra_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sra_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_srl_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_srl_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_srl_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_srli_si128_impl::mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sub_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sub_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sub_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sub_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sub_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_subs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_subs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_subs_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_subs_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_ucomieq_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_ucomige_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_ucomigt_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_ucomile_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_ucomilt_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_ucomineq_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_undefined_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_undefined_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_unpackhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_unpackhi_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_unpackhi_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_unpackhi_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_unpackhi_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_unpacklo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_unpacklo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_unpacklo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_unpacklo_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_unpacklo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_xor_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_xor_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse3.rs",
    "func": "core_arch::x86::sse3::_mm_addsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse3.rs",
    "func": "core_arch::x86::sse3::_mm_addsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse3.rs",
    "func": "core_arch::x86::sse3::_mm_hadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse3.rs",
    "func": "core_arch::x86::sse3::_mm_hadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse3.rs",
    "func": "core_arch::x86::sse3::_mm_hsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse3.rs",
    "func": "core_arch::x86::sse3::_mm_hsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse3.rs",
    "func": "core_arch::x86::sse3::_mm_movedup_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse3.rs",
    "func": "core_arch::x86::sse3::_mm_movehdup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse3.rs",
    "func": "core_arch::x86::sse3::_mm_moveldup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_blendv_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_blendv_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_blendv_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_ceil_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_ceil_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_ceil_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_ceil_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cmpeq_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepi16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepi16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepi32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepi8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepi8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepi8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepu16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepu16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepu32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepu8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepu8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepu8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_floor_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_floor_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_floor_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_floor_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_max_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_max_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_max_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_max_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_min_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_min_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_min_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_min_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_minpos_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_mul_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_mullo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_packus_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_test_all_ones"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_test_all_zeros"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_test_mix_ones_zeros"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_testc_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_testnzc_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_testz_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse42.rs",
    "func": "core_arch::x86::sse42::_mm_cmpgt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse42.rs",
    "func": "core_arch::x86::sse42::_mm_crc32_u16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse42.rs",
    "func": "core_arch::x86::sse42::_mm_crc32_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse42.rs",
    "func": "core_arch::x86::sse42::_mm_crc32_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse4a.rs",
    "func": "core_arch::x86::sse4a::_mm_extract_si64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse4a.rs",
    "func": "core_arch::x86::sse4a::_mm_insert_si64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_abs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_abs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_abs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_alignr_epi8::mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_hadd_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_hadd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_hadds_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_hsub_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_hsub_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_hsubs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_maddubs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_mulhrs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_shuffle_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_sign_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_sign_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_sign_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_blcfill_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_blci_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_blcic_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_blcmsk_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_blcs_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_blsfill_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_blsic_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_t1mskc_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_tzmsk_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/vaes.rs",
    "func": "core_arch::x86::vaes::_mm256_aesdec_epi128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/vaes.rs",
    "func": "core_arch::x86::vaes::_mm256_aesdeclast_epi128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/vaes.rs",
    "func": "core_arch::x86::vaes::_mm256_aesenc_epi128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/vaes.rs",
    "func": "core_arch::x86::vaes::_mm256_aesenclast_epi128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/vaes.rs",
    "func": "core_arch::x86::vaes::_mm512_aesdec_epi128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/vaes.rs",
    "func": "core_arch::x86::vaes::_mm512_aesdeclast_epi128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/vaes.rs",
    "func": "core_arch::x86::vaes::_mm512_aesenc_epi128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/vaes.rs",
    "func": "core_arch::x86::vaes::_mm512_aesenclast_epi128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/xsave.rs",
    "func": "core_arch::x86::xsave::_xgetbv"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/xsave.rs",
    "func": "core_arch::x86::xsave::_xsetbv"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/abm.rs",
    "func": "core_arch::x86_64::abm::_lzcnt_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/abm.rs",
    "func": "core_arch::x86_64::abm::_popcnt64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/adx.rs",
    "func": "core_arch::x86_64::adx::_addcarry_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/adx.rs",
    "func": "core_arch::x86_64::adx::_addcarryx_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/adx.rs",
    "func": "core_arch::x86_64::adx::_subborrow_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/amx.rs",
    "func": "core_arch::x86_64::amx::_tile_release"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512bw.rs",
    "func": "core_arch::x86_64::avx512bw::_cvtmask64_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512bw.rs",
    "func": "core_arch::x86_64::avx512bw::_cvtu64_mask64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvti64_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvti64_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvtsd_i64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvtsd_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvtss_i64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvtss_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvttsd_i64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvttsd_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvttss_i64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvttss_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvtu64_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvtu64_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512fp16.rs",
    "func": "core_arch::x86_64::avx512fp16::_mm_cvti64_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512fp16.rs",
    "func": "core_arch::x86_64::avx512fp16::_mm_cvtsh_i64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512fp16.rs",
    "func": "core_arch::x86_64::avx512fp16::_mm_cvtsh_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512fp16.rs",
    "func": "core_arch::x86_64::avx512fp16::_mm_cvttsh_i64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512fp16.rs",
    "func": "core_arch::x86_64::avx512fp16::_mm_cvttsh_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512fp16.rs",
    "func": "core_arch::x86_64::avx512fp16::_mm_cvtu64_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi.rs",
    "func": "core_arch::x86_64::bmi::_andn_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi.rs",
    "func": "core_arch::x86_64::bmi::_bextr2_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi.rs",
    "func": "core_arch::x86_64::bmi::_bextr_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi.rs",
    "func": "core_arch::x86_64::bmi::_blsi_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi.rs",
    "func": "core_arch::x86_64::bmi::_blsmsk_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi.rs",
    "func": "core_arch::x86_64::bmi::_blsr_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi.rs",
    "func": "core_arch::x86_64::bmi::_mm_tzcnt_64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi.rs",
    "func": "core_arch::x86_64::bmi::_tzcnt_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi2.rs",
    "func": "core_arch::x86_64::bmi2::_bzhi_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi2.rs",
    "func": "core_arch::x86_64::bmi2::_mulx_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi2.rs",
    "func": "core_arch::x86_64::bmi2::_pdep_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi2.rs",
    "func": "core_arch::x86_64::bmi2::_pext_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bswap.rs",
    "func": "core_arch::x86_64::bswap::_bswap64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/rdrand.rs",
    "func": "core_arch::x86_64::rdrand::_rdrand64_step"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/rdrand.rs",
    "func": "core_arch::x86_64::rdrand::_rdseed64_step"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse.rs",
    "func": "core_arch::x86_64::sse::_mm_cvtsi64_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse.rs",
    "func": "core_arch::x86_64::sse::_mm_cvtss_si64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse.rs",
    "func": "core_arch::x86_64::sse::_mm_cvttss_si64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "func": "core_arch::x86_64::sse2::_mm_cvtsd_si64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "func": "core_arch::x86_64::sse2::_mm_cvtsd_si64x"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "func": "core_arch::x86_64::sse2::_mm_cvtsi128_si64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "func": "core_arch::x86_64::sse2::_mm_cvtsi128_si64x"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "func": "core_arch::x86_64::sse2::_mm_cvtsi64_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "func": "core_arch::x86_64::sse2::_mm_cvtsi64_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "func": "core_arch::x86_64::sse2::_mm_cvtsi64x_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "func": "core_arch::x86_64::sse2::_mm_cvtsi64x_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "func": "core_arch::x86_64::sse2::_mm_cvttsd_si64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "func": "core_arch::x86_64::sse2::_mm_cvttsd_si64x"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse42.rs",
    "func": "core_arch::x86_64::sse42::_mm_crc32_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_blcfill_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_blci_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_blcic_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_blcmsk_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_blcs_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_blsfill_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_blsic_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_t1mskc_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_tzmsk_u64"
  },
  {
    "file": "unwind/src/libunwind.rs",
    "func": "<libunwind::_Unwind_Reason_Code as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "unwind/src/libunwind.rs",
    "func": "<libunwind::_Unwind_Reason_Code as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "<alloc::Global as core::alloc::Allocator>::allocate",
    "hash": "1141955903753897517014625167327847791907"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "<alloc::Global as core::alloc::Allocator>::allocate_zeroed",
    "hash": "96540308768482821532855729325539541075"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "<alloc::Global as core::alloc::Allocator>::deallocate",
    "hash": "394899740451847047017644777761427403196"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "<alloc::Global as core::alloc::Allocator>::grow",
    "hash": "835886655223678067213193960784840077949"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "<alloc::Global as core::alloc::Allocator>::grow_zeroed",
    "hash": "15458791902674712978465751411894414245"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "<alloc::Global as core::alloc::Allocator>::shrink",
    "hash": "835384748945826722613674562233980428217"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "<alloc::Global as core::clone::Clone>::clone",
    "hash": "188618813038227315415644954775386001916"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "<alloc::Global as core::default::Default>::default",
    "hash": "176696082822432675782692881376305731226"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "alloc::Global::alloc_impl",
    "hash": "1170796756882490861817329164502952420199"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "alloc::Global::grow_impl",
    "hash": "131064914044149919482960056475433993972"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "alloc::__alloc_error_handler::__rdl_oom",
    "hash": "1472210094533152582917789226050024314229"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "alloc::alloc",
    "hash": "1376541346679052968213576567834425860228"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "alloc::alloc_zeroed",
    "hash": "1549398485481521168517137548698896520595"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "alloc::exchange_malloc",
    "hash": "5008904644524579541756290566753294716"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "alloc::handle_alloc_error",
    "hash": "593523720810475000712660203952371323969"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "alloc::handle_alloc_error::ct_error",
    "hash": "852884122469291582314748938350048483548"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "alloc::handle_alloc_error::rt_error",
    "hash": "140493508095315886339161612115402293715"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/boxed.rs",
    "func": "<boxed::Box<str> as core::default::Default>::default",
    "hash": "14856800887710591993357915319728027847"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/boxed/thin.rs",
    "func": "boxed::thin::WithHeader::<H>::new_unsize_zst::max",
    "hash": "1214283294772387410513656322816772160048"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/bstr.rs",
    "func": "<bstr::ByteString as core::default::Default>::default",
    "hash": "45358225003190044658397087633477427533"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/binary_heap/mod.rs",
    "func": "collections::binary_heap::BinaryHeap::<T, A>::rebuild_tail::log2_fast",
    "hash": "1552044580274473924911725540634475642305"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/btree/map.rs",
    "func": "<collections::btree::map::UnorderedKeyError as core::clone::Clone>::clone",
    "hash": "1150860557635224211118086471311025313226"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/btree/map.rs",
    "func": "<collections::btree::map::UnorderedKeyError as core::cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "526025963936043764214926126682659565302"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/btree/map.rs",
    "func": "<collections::btree::map::UnorderedKeyError as core::cmp::PartialEq>::eq",
    "hash": "86210571617703808639506184036730667764"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/btree/mem.rs",
    "func": "<collections::btree::mem::replace::PanicGuard as core::ops::Drop>::drop",
    "hash": "106041551097258177951361565161842063386"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/btree/node.rs",
    "func": "collections::btree::node::splitpoint",
    "hash": "164319979920894964069791300187578496271"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/btree/set_val.rs",
    "func": "<collections::btree::set_val::SetValZST as collections::btree::set_val::IsSetVal>::is_set_val",
    "hash": "79761222458285267608190469009755843990"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/btree/set_val.rs",
    "func": "<collections::btree::set_val::SetValZST as core::clone::Clone>::clone",
    "hash": "15352058463492922652170278573860929499"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/btree/set_val.rs",
    "func": "<collections::btree::set_val::SetValZST as core::cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "147055796735940565482009025302173003778"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/btree/set_val.rs",
    "func": "<collections::btree::set_val::SetValZST as core::cmp::Ord>::cmp",
    "hash": "605984565890044805716043055540444426650"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/btree/set_val.rs",
    "func": "<collections::btree::set_val::SetValZST as core::cmp::PartialEq>::eq",
    "hash": "47118706139193443235635944773369221202"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/btree/set_val.rs",
    "func": "<collections::btree::set_val::SetValZST as core::cmp::PartialOrd>::partial_cmp",
    "hash": "96307004548983503186372644330605262617"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/btree/set_val.rs",
    "func": "<collections::btree::set_val::SetValZST as core::default::Default>::default",
    "hash": "883878486470611769410893299160888045942"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/linked_list.rs",
    "func": "collections::linked_list::assert_covariance",
    "hash": "139024699871569484909137643028803113908"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/mod.rs",
    "func": "<collections::TryReserveError as core::clone::Clone>::clone",
    "hash": "67307081462067458518228659530353215819"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/mod.rs",
    "func": "<collections::TryReserveError as core::cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "601246688718493786517705802297950835630"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/mod.rs",
    "func": "<collections::TryReserveError as core::cmp::PartialEq>::eq",
    "hash": "416107742932593270512206529348530756443"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/mod.rs",
    "func": "<collections::TryReserveError as core::convert::From<collections::TryReserveErrorKind>>::from",
    "hash": "1806196275982253069117281718696114376262"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/mod.rs",
    "func": "<collections::TryReserveErrorKind as core::clone::Clone>::clone",
    "hash": "1029563312923393900611914925131263606627"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/mod.rs",
    "func": "<collections::TryReserveErrorKind as core::cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "30843355880797103155581040730416039276"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/mod.rs",
    "func": "<collections::TryReserveErrorKind as core::cmp::PartialEq>::eq",
    "hash": "18085859003630016463445829560899280373"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/mod.rs",
    "func": "<collections::TryReserveErrorKind as core::convert::From<core::alloc::LayoutError>>::from",
    "hash": "9903892076387741271622226004455942430"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/mod.rs",
    "func": "collections::TryReserveError::kind",
    "hash": "418064438806156603612250954936421482396"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/vec_deque/mod.rs",
    "func": "collections::vec_deque::verify::check_vecdeque_swap",
    "hash": "363987026677949572316325582706021143182",
    "proof_kind": "Standard"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/vec_deque/mod.rs",
    "func": "collections::vec_deque::wrap_index",
    "hash": "173042205768032610075203172605839594717"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/ffi/c_str.rs",
    "func": "<ffi::c_str::CString as core::default::Default>::default",
    "hash": "112490558054198416887088165226991164441"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/ffi/c_str.rs",
    "func": "<ffi::c_str::FromBytesWithNulErrorKind as core::clone::Clone>::clone",
    "hash": "178916550743863733364659761274070969968"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/ffi/c_str.rs",
    "func": "<ffi::c_str::FromBytesWithNulErrorKind as core::cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "169134587720057382264356999721097941718"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/ffi/c_str.rs",
    "func": "<ffi::c_str::FromBytesWithNulErrorKind as core::cmp::PartialEq>::eq",
    "hash": "10053784383016880137131169174929694455"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/ffi/c_str.rs",
    "func": "ffi::c_str::<impl core::default::Default for boxed::Box<core::ffi::CStr>>::default",
    "hash": "572533312435257144111271238459917951598"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/ffi/c_str.rs",
    "func": "ffi::c_str::<impl core::default::Default for rc::Rc<core::ffi::CStr>>::default",
    "hash": "119331254975998015749537531275140042813"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/raw_vec/mod.rs",
    "func": "raw_vec::RawVecInner::with_capacity",
    "hash": "79349637262303903028726282563614097231"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/raw_vec/mod.rs",
    "func": "raw_vec::capacity_overflow",
    "hash": "1608126128991884205014632356534797510306"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/raw_vec/mod.rs",
    "func": "raw_vec::handle_error",
    "hash": "47317165689800636576984679401220719271"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/raw_vec/mod.rs",
    "func": "raw_vec::layout_array",
    "hash": "102778092129916857148668388823820823170"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/raw_vec/mod.rs",
    "func": "raw_vec::min_non_zero_cap",
    "hash": "65055801994553461588615672273314638017"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/rc.rs",
    "func": "<rc::Rc<str> as core::default::Default>::default",
    "hash": "1088954354080120457812315130314239412369"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/rc.rs",
    "func": "rc::data_offset_align",
    "hash": "66387839678962778355055388810856981815"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/rc.rs",
    "func": "rc::rc_inner_layout_for_value_layout",
    "hash": "1427172040108557715511150648403796693667"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<bool as string::SpecToString>::spec_to_string",
    "hash": "60239311065025453929841796396266522506"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<char as string::SpecToString>::spec_to_string",
    "hash": "19165984896189887211407816110754440216"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<core::ascii::Char as string::SpecToString>::spec_to_string",
    "hash": "1824305252507196301014609690252247090181"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<i128 as string::SpecToString>::spec_to_string",
    "hash": "257284597731079146118189284716156836076"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<i16 as string::SpecToString>::spec_to_string",
    "hash": "59976305027113098481433784149450142251"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<i32 as string::SpecToString>::spec_to_string",
    "hash": "141446753104705194883318725186985937416"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<i64 as string::SpecToString>::spec_to_string",
    "hash": "261233027058416011012693749532365748648"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<i8 as string::SpecToString>::spec_to_string",
    "hash": "133599309112219691985129417943295311005"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<isize as string::SpecToString>::spec_to_string",
    "hash": "1790433498703308202813038152101197392296"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<string::String as core::convert::From<char>>::from",
    "hash": "2890936332755258159002437954044947040"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<string::String as core::default::Default>::default",
    "hash": "79887214921369405519503094514328680621"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<u128 as string::SpecToString>::spec_to_string",
    "hash": "12520941352143113805554327600230941247"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<u16 as string::SpecToString>::spec_to_string",
    "hash": "267504122844545482615779085737032290915"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<u32 as string::SpecToString>::spec_to_string",
    "hash": "183965080549125169611880496809048875220"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<u64 as string::SpecToString>::spec_to_string",
    "hash": "40670690967926962981286414651311969309"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<u8 as string::SpecToString>::spec_to_string",
    "hash": "90738418072514620083523414597820488725"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<usize as string::SpecToString>::spec_to_string",
    "hash": "12455496616477321812568247145843789725"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "string::String::new",
    "hash": "79046669545943228287709651508410318336"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "string::String::try_with_capacity",
    "hash": "14258178615929631649299465214077209340"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "string::String::with_capacity",
    "hash": "35503646600196615215747307951811141452"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/sync.rs",
    "func": "<sync::Arc<core::ffi::CStr> as core::default::Default>::default",
    "hash": "88748868021347645905257972537550705222"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/sync.rs",
    "func": "<sync::Arc<str> as core::default::Default>::default",
    "hash": "64264189108149262021255376884010301095"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/sync.rs",
    "func": "sync::Weak::<T, A>::upgrade::checked_increment",
    "hash": "26658209397848208948229149124023555303"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/sync.rs",
    "func": "sync::arcinner_layout_for_value_layout",
    "hash": "1454293614465866252516391834150784076356"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/sync.rs",
    "func": "sync::data_offset_align",
    "hash": "659724209382728136515403755542613617399"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<bool as vec::is_zero::IsZero>::is_zero",
    "hash": "226416230687556135918222008708823951921"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<char as vec::is_zero::IsZero>::is_zero",
    "hash": "562314824199671126613140265516381100367"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<bool> as vec::is_zero::IsZero>::is_zero",
    "hash": "55282550973537819389606379550037173229"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<i128>> as vec::is_zero::IsZero>::is_zero",
    "hash": "1720506251788833383214486689275353377544"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<i16>> as vec::is_zero::IsZero>::is_zero",
    "hash": "152814392829046064067273226362518217329"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<i32>> as vec::is_zero::IsZero>::is_zero",
    "hash": "49591647048648773565875025356167778818"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<i64>> as vec::is_zero::IsZero>::is_zero",
    "hash": "181168594773930497234735536558990251740"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<i8>> as vec::is_zero::IsZero>::is_zero",
    "hash": "11312161407294301361122131310521174807"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<isize>> as vec::is_zero::IsZero>::is_zero",
    "hash": "1633361032576782756818298118979809316936"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<u128>> as vec::is_zero::IsZero>::is_zero",
    "hash": "103330843235056718911750599906013025116"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<u16>> as vec::is_zero::IsZero>::is_zero",
    "hash": "738598021930773736916905903201866490109"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<u32>> as vec::is_zero::IsZero>::is_zero",
    "hash": "45050772754737871232386659509215520366"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<u64>> as vec::is_zero::IsZero>::is_zero",
    "hash": "1004802711197926163113375030305559180195"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<u8>> as vec::is_zero::IsZero>::is_zero",
    "hash": "5381240029021907034562309991152013397"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<usize>> as vec::is_zero::IsZero>::is_zero",
    "hash": "1324187291799467001913286431910294421734"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::option::Option<bool>> as vec::is_zero::IsZero>::is_zero",
    "hash": "115955547454937142876777049727034594294"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::option::Option<core::option::Option<bool>>> as vec::is_zero::IsZero>::is_zero",
    "hash": "92137497129509717051590096164373128749"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<i128> as vec::is_zero::IsZero>::is_zero",
    "hash": "97332826814045571384137483073632908543"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<i16> as vec::is_zero::IsZero>::is_zero",
    "hash": "1551952214378580472514669949821112486326"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<i32> as vec::is_zero::IsZero>::is_zero",
    "hash": "1232498275400767262010507917826339615857"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<i64> as vec::is_zero::IsZero>::is_zero",
    "hash": "448950398955720190318331283893953130196"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<i8> as vec::is_zero::IsZero>::is_zero",
    "hash": "599325279796641059612601345387635232422"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<isize> as vec::is_zero::IsZero>::is_zero",
    "hash": "100366899955246869607292645471452608098"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<u128> as vec::is_zero::IsZero>::is_zero",
    "hash": "14651758730421022746999724313290374327"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<u16> as vec::is_zero::IsZero>::is_zero",
    "hash": "44116722611049818993587026624303100749"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<u32> as vec::is_zero::IsZero>::is_zero",
    "hash": "609127693595867082813990810118846537744"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<u64> as vec::is_zero::IsZero>::is_zero",
    "hash": "8304810152053103455671241760436064192"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<u8> as vec::is_zero::IsZero>::is_zero",
    "hash": "1424402656469086792513759609376913500182"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<usize> as vec::is_zero::IsZero>::is_zero",
    "hash": "32118125568587543451952746026173474568"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<f32 as vec::is_zero::IsZero>::is_zero",
    "hash": "27000259865368408846759765825619365521"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<f64 as vec::is_zero::IsZero>::is_zero",
    "hash": "97891402136562632024558210899456801827"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<i128 as vec::is_zero::IsZero>::is_zero",
    "hash": "18698055566249928431115470227260948467"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<i16 as vec::is_zero::IsZero>::is_zero",
    "hash": "783609287002888126610410795212579015124"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<i32 as vec::is_zero::IsZero>::is_zero",
    "hash": "42504595435692469042818110472115630694"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<i64 as vec::is_zero::IsZero>::is_zero",
    "hash": "34536797668754468426060086630998615149"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<i8 as vec::is_zero::IsZero>::is_zero",
    "hash": "36403096420846141552085050188458478890"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<isize as vec::is_zero::IsZero>::is_zero",
    "hash": "57874779018659763082518018364462195589"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<u128 as vec::is_zero::IsZero>::is_zero",
    "hash": "100185064925734285171322188388819940861"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<u16 as vec::is_zero::IsZero>::is_zero",
    "hash": "321897002648580578013483930964447877009"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<u32 as vec::is_zero::IsZero>::is_zero",
    "hash": "109155081470732314482131273701303262215"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<u64 as vec::is_zero::IsZero>::is_zero",
    "hash": "9374950131075819485898869668128418073"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<u8 as vec::is_zero::IsZero>::is_zero",
    "hash": "319076220170936590611797679790761320848"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<usize as vec::is_zero::IsZero>::is_zero",
    "hash": "1138662363907580924915852346025134890085"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/mod.rs",
    "func": "vec::Vec::<T, A>::insert_mut::assert_failed",
    "hash": "3924422291652437501470752426330983690"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/mod.rs",
    "func": "vec::Vec::<T, A>::remove::assert_failed",
    "hash": "1574026501152102796617934680771992404505"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/mod.rs",
    "func": "vec::Vec::<T, A>::split_off::assert_failed",
    "hash": "991541597512485387016632625606485925730"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/mod.rs",
    "func": "vec::Vec::<T, A>::swap_remove::assert_failed",
    "hash": "1018012886940561274311245060451764106091"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/mod.rs",
    "func": "vec::verify::verify_swap_remove",
    "hash": "78857977891416628589820576078215198934",
    "proof_kind": "Standard"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/set_len_on_drop.rs",
    "func": "vec::set_len_on_drop::SetLenOnDrop::<'_>::new",
    "hash": "163653868419212898167354017395545872918"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "<alloc::layout::Layout as clone::Clone>::clone",
    "hash": "138669527279575425473478508059426767195"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "<alloc::layout::Layout as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1839720404400470606512354253475767504568"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "<alloc::layout::Layout as cmp::PartialEq>::eq",
    "hash": "1237561809776419274303954737725761997"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "<alloc::layout::Layout as ub_checks::Invariant>::is_safe",
    "hash": "1625833848220903477010966679115631248376"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "<alloc::layout::LayoutError as clone::Clone>::clone",
    "hash": "252359930733652908913448491214756495000"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "<alloc::layout::LayoutError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "13369606727933910233948994621658670641"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "<alloc::layout::LayoutError as cmp::PartialEq>::eq",
    "hash": "53188263659268734449859429785139644385"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::align",
    "hash": "1644571781544438741211241059160657573132"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::align_to",
    "hash": "994877130377359193410361615866829855360"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::alignment",
    "hash": "113731111070523917451251479783537796058"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::array::inner",
    "hash": "9287284233103538486307035942584522014"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::dangling",
    "hash": "1725774325508012088012908468224349910631"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::extend",
    "hash": "1835818261999260622914736513936396583107"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::extend_packed",
    "hash": "98067059012061316655876652044881984883"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::from_size_align",
    "hash": "1113841623103747297917257815520500867869"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::from_size_align_unchecked",
    "hash": "1382726105920982544611626953234686485265"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::from_size_alignment",
    "hash": "608664848234302571713593688644672913516"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::is_size_align_valid",
    "hash": "147854990161431169777415947926327676517"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::max_size_for_align",
    "hash": "113777446734612017643296714849006136962"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::pad_to_align",
    "hash": "713423104685256917114894818277740528050"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::padding_needed_for",
    "hash": "20881752863211066118446705653800043132"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::repeat",
    "hash": "248644554992152874611202846476053390767"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::repeat_packed",
    "hash": "804204683772361217310390414401473577032"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::size",
    "hash": "1765656156889523721816376187426903869163"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::size_rounded_up_to_custom_align",
    "hash": "1333568670384673713210225900017299121386"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_align",
    "hash": "83572207183015048918378811865353441797",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_align_to",
    "hash": "1278181241632706313614354461432899968135",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_array_i32",
    "hash": "111317966121909836376064857421715942030",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_dangling",
    "hash": "42925425130518051147590723290686047365",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_extend",
    "hash": "1317496077398974751014863488185693865873",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_extend_packed",
    "hash": "2265659567405590484543741164837747014",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_for_value_i32",
    "hash": "128304035850093489363210823782767076664",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_for_value_raw_i32",
    "hash": "11569300709986856493597033404880322472",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_new_i32",
    "hash": "109433131370976921627299298822799316398",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_pad_to_align",
    "hash": "78187685152015596713852776399535705698",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_padding_needed_for",
    "hash": "60028456359355938786338390914209233489",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_repeat",
    "hash": "1217509508861677209816869122169808371480",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_repeat_packed",
    "hash": "1515988735622490629617784976041356301772",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_size",
    "hash": "32454207021667808148936744668234451834",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/mod.rs",
    "func": "<alloc::AllocError as clone::Clone>::clone",
    "hash": "1029666806849078043410114883872574058051"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/mod.rs",
    "func": "<alloc::AllocError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "65317846572373040011151543001521417398"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/mod.rs",
    "func": "<alloc::AllocError as cmp::PartialEq>::eq",
    "hash": "1722171256993590572613700931741706537866"
  },
  {
    "crate": "core",
    "file": "core/src/arch.rs",
    "func": "arch::breakpoint",
    "hash": "179452278719966693811388490069887534994"
  },
  {
    "crate": "core",
    "file": "core/src/array/mod.rs",
    "func": "<array::TryFromSliceError as clone::Clone>::clone",
    "hash": "4562367331050962429942001666599523782"
  },
  {
    "crate": "core",
    "file": "core/src/ascii.rs",
    "func": "ascii::EscapeDefault::empty",
    "hash": "1075184796020957421713220210555524853953"
  },
  {
    "crate": "core",
    "file": "core/src/ascii.rs",
    "func": "ascii::EscapeDefault::new",
    "hash": "89749163509979118331397359653281917899"
  },
  {
    "crate": "core",
    "file": "core/src/ascii.rs",
    "func": "ascii::escape_default",
    "hash": "1005377300191788699812763229026995308153"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "<ascii::ascii_char::AsciiChar as clone::Clone>::clone",
    "hash": "111035433870535333634453815696196257193"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "<ascii::ascii_char::AsciiChar as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1827754337174872640910365780085592186283"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "<ascii::ascii_char::AsciiChar as cmp::Ord>::cmp",
    "hash": "112814026645935245953583575330164277885"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "<ascii::ascii_char::AsciiChar as cmp::PartialEq>::eq",
    "hash": "81344484586276681666638199233416620893"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "<ascii::ascii_char::AsciiChar as cmp::PartialOrd>::partial_cmp",
    "hash": "947449175792168431313243954235902122161"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "<ascii::ascii_char::AsciiChar as fmt::Debug>::fmt::backslash",
    "hash": "142798683471519151818717049339459591202"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::<impl convert::From<ascii::ascii_char::AsciiChar> for char>::from",
    "hash": "25680643180515091492075518552626296375"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::<impl convert::From<ascii::ascii_char::AsciiChar> for u128>::from",
    "hash": "1734240027759987692111499873427882592904"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::<impl convert::From<ascii::ascii_char::AsciiChar> for u16>::from",
    "hash": "1521578451117097498412858301348773415234"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::<impl convert::From<ascii::ascii_char::AsciiChar> for u32>::from",
    "hash": "406451723365637502013051710475675351544"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::<impl convert::From<ascii::ascii_char::AsciiChar> for u64>::from",
    "hash": "241791409614011620817952358997921012793"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::<impl convert::From<ascii::ascii_char::AsciiChar> for u8>::from",
    "hash": "55359956800096477512294625712282727056"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::as_str",
    "hash": "954282711880464085816738983663444254636"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::digit",
    "hash": "5584785482420696726888821020453513663"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::digit_unchecked",
    "hash": "266908087015780077412575189239669936445"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::eq_ignore_case",
    "hash": "1692231325908148864914871934470188610020"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::escape_ascii",
    "hash": "56432858114212035737992099245451454428"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::from_u8",
    "hash": "1263943423012824645318408613777809385475"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::from_u8_unchecked",
    "hash": "15551977551413036531158252289522839939"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_alphabetic",
    "hash": "141374037431582204228901002596648892899"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_alphanumeric",
    "hash": "1769212299635255199312158151321151748593"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_control",
    "hash": "379452128669671562516307381127183737866"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_digit",
    "hash": "47687222988252838765032272607818926730"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_graphic",
    "hash": "121801181038273201848591136906946929115"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_hexdigit",
    "hash": "755968284434454300011982005433871110650"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_lowercase",
    "hash": "479597666294039129017994040791777849054"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_octdigit",
    "hash": "852271594176458070316316655434844405899"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_punctuation",
    "hash": "58202831194809294617820784981134761942"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_uppercase",
    "hash": "32667457186840015303783944020138794434"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_whitespace",
    "hash": "143531101920779919634861260905095796459"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::make_lowercase",
    "hash": "3645664363023451936488916420063270654"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::make_uppercase",
    "hash": "125362895133152657728316806023898963720"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::to_char",
    "hash": "1033313609966481997416353699173200356182"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::to_lowercase",
    "hash": "95711545036868145599383432957873473452"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::to_u8",
    "hash": "211389067699639933614636457746408448112"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::to_uppercase",
    "hash": "3812153823289254213385533447377729036"
  },
  {
    "crate": "core",
    "file": "core/src/bstr/mod.rs",
    "func": "<&bstr::ByteStr as default::Default>::default",
    "hash": "125686440090565287313600801723253413560"
  },
  {
    "crate": "core",
    "file": "core/src/bstr/mod.rs",
    "func": "<&mut bstr::ByteStr as default::Default>::default",
    "hash": "1574332461638624138015689794571884755490"
  },
  {
    "crate": "core",
    "file": "core/src/cell.rs",
    "func": "cell::BorrowRef::<'_>::new",
    "hash": "72175187194822421299481574900593828861"
  },
  {
    "crate": "core",
    "file": "core/src/cell.rs",
    "func": "cell::BorrowRefMut::<'_>::new",
    "hash": "26804602359776193861030797062949761013"
  },
  {
    "crate": "core",
    "file": "core/src/cell.rs",
    "func": "cell::assert_coerce_unsized",
    "hash": "179837230025838637622005642652165013263"
  },
  {
    "crate": "core",
    "file": "core/src/cell.rs",
    "func": "cell::is_reading",
    "hash": "958841610888801412131177007951313161"
  },
  {
    "crate": "core",
    "file": "core/src/cell.rs",
    "func": "cell::is_writing",
    "hash": "150987103519159030195100325775074116971"
  },
  {
    "crate": "core",
    "file": "core/src/cell.rs",
    "func": "cell::panic_already_borrowed",
    "hash": "33821755150692310052985488153044415038"
  },
  {
    "crate": "core",
    "file": "core/src/cell.rs",
    "func": "cell::panic_already_mutably_borrowed",
    "hash": "125736620241120092863403530501127498801"
  },
  {
    "crate": "core",
    "file": "core/src/cell/lazy.rs",
    "func": "cell::lazy::panic_poisoned",
    "hash": "74377589116583307095361716428989041861"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "<char::convert::CharErrorKind as clone::Clone>::clone",
    "hash": "14590919632670077107703886866540995297"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "<char::convert::CharErrorKind as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "62239645015476868415283761933330297157"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "<char::convert::CharErrorKind as cmp::PartialEq>::eq",
    "hash": "71315430593433594444746674294927717904"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "<char::convert::CharTryFromError as clone::Clone>::clone",
    "hash": "135415912958453448667931995784336552872"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "<char::convert::CharTryFromError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "158412052472748889385095255687738530311"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "<char::convert::CharTryFromError as cmp::PartialEq>::eq",
    "hash": "39772555954801153589957516226447287910"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "<char::convert::ParseCharError as clone::Clone>::clone",
    "hash": "171425005789328490072817929714838253054"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "<char::convert::ParseCharError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1385259908027616954410045035542382325618"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "<char::convert::ParseCharError as cmp::PartialEq>::eq",
    "hash": "1337142893895784579613426553132365774701"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "char::convert::<impl convert::From<char> for u128>::from",
    "hash": "5486281828026669298383869045537591502"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "char::convert::<impl convert::From<char> for u32>::from",
    "hash": "113949204995067962305733038591445280689"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "char::convert::<impl convert::From<char> for u64>::from",
    "hash": "176189015992262389841612077595509152686"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "char::convert::<impl convert::From<u8> for char>::from",
    "hash": "511962504776047044912646038885098500692"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "char::convert::<impl convert::TryFrom<char> for u16>::try_from",
    "hash": "384454961062101702517631311395990467441"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "char::convert::<impl convert::TryFrom<char> for u8>::try_from",
    "hash": "34395329715680038192286328316131391397"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "char::convert::<impl convert::TryFrom<u32> for char>::try_from",
    "hash": "1428928070338703041315570241100820851548"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "char::convert::char_try_from_u32",
    "hash": "17474080164975049304938783829847367367"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "char::convert::from_digit",
    "hash": "21288568817902661899163244752640729668"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "char::convert::from_u32",
    "hash": "156835264380154546273927188536737657463"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "char::convert::from_u32_unchecked",
    "hash": "893530849427222855716465422971814821346"
  },
  {
    "crate": "core",
    "file": "core/src/char/decode.rs",
    "func": "<char::decode::DecodeUtf16Error as clone::Clone>::clone",
    "hash": "106015577261429054398488907325860436168"
  },
  {
    "crate": "core",
    "file": "core/src/char/decode.rs",
    "func": "<char::decode::DecodeUtf16Error as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "35536810418520555035725241150857337"
  },
  {
    "crate": "core",
    "file": "core/src/char/decode.rs",
    "func": "<char::decode::DecodeUtf16Error as cmp::PartialEq>::eq",
    "hash": "215534779372337113413718916190493460975"
  },
  {
    "crate": "core",
    "file": "core/src/char/decode.rs",
    "func": "char::decode::DecodeUtf16Error::unpaired_surrogate",
    "hash": "249399312778873392118202183617190031782"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::as_ascii",
    "hash": "171978863025298498526653523685058692868"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::as_ascii_unchecked",
    "hash": "1040263324564224765614544706129707762903"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::eq_ignore_ascii_case",
    "hash": "347500002211181882111002928277433837828"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::escape_debug",
    "hash": "811482540548788097210924538715331177296"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::escape_debug_ext",
    "hash": "1194453222836448893410293419502119381679"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::escape_default",
    "hash": "34459849917719488605324692103846140919"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::escape_unicode",
    "hash": "497434956994357098517345757457476996936"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::from_digit",
    "hash": "36634764220413573822676746106347514165"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::from_u32",
    "hash": "916826562533753841712124132505480364764"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::from_u32_unchecked",
    "hash": "106991234928725068298919732746622192012"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_alphabetic",
    "hash": "799448734065513568413271688006902545373"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_alphanumeric",
    "hash": "34635213083565572155152932611463257783"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii",
    "hash": "121872163624966698483225952656434249831"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_alphabetic",
    "hash": "867510478015560372217127018194584589133"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_alphanumeric",
    "hash": "1835845409301008492015376142636202002099"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_control",
    "hash": "78320279285770796329737311134415044128"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_digit",
    "hash": "776791319150463290314684492981233965229"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_graphic",
    "hash": "160905160783373154336394295742045723480"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_hexdigit",
    "hash": "1735324140395205190410672666854869582449"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_lowercase",
    "hash": "40029628481153286834917534605165395923"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_octdigit",
    "hash": "5813026921425823168402167983853199852"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_punctuation",
    "hash": "660443504320725929514711155381355735548"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_uppercase",
    "hash": "162761847482439689109896374123862067977"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_whitespace",
    "hash": "141456026617067928877849983863287040673"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_control",
    "hash": "114091730833754832581248839472790106919"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_digit",
    "hash": "10443474125273875353776280254533326894"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_grapheme_extended",
    "hash": "15334626100237200692327251131927029634"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_lowercase",
    "hash": "182926174215442040297404305566514350945"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_numeric",
    "hash": "101096901168096232778065154410402357390"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_uppercase",
    "hash": "137302494036027504327038063391972409130"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_whitespace",
    "hash": "79760301754771638958349888420647128122"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::len_utf16",
    "hash": "30964728033535107675893575966530351964"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::len_utf8",
    "hash": "1358253101884662637512268933829053514469"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::make_ascii_lowercase",
    "hash": "63056492727050690364391917141093345859"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::make_ascii_uppercase",
    "hash": "1040510828091348835114571511070917382442"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::to_ascii_lowercase",
    "hash": "1545000998026875087513078667640787051548"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::to_ascii_uppercase",
    "hash": "1561154161655045390118413777525597123812"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::to_digit",
    "hash": "1440201231009167069210933291414473038458"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::to_lowercase",
    "hash": "1562727922697911442210794654369391984975"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::to_uppercase",
    "hash": "25121733070259891734456188633423009726"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::len_utf16",
    "hash": "566961004407742453510032069701258364292"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::len_utf8",
    "hash": "1026760530544148215311440132616070242899"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::verify::as_ascii_clone",
    "hash": "96678382642319974613340859699268617277"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::verify::check_as_ascii_ascii_char",
    "hash": "67232678480774860410306520805018068639",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::verify::check_as_ascii_non_ascii_char",
    "hash": "38921924191244411664391011673597106237",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as clone::Clone>::clone",
    "hash": "1352677637909441699810447269350444722350"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by",
    "hash": "99487482049585193885655827107297531931"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as iter::traits::double_ended::DoubleEndedIterator>::next_back",
    "hash": "153088980731322842355263844193814415184"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as iter::traits::exact_size::ExactSizeIterator>::is_empty",
    "hash": "153664854716816481503446288175180637492"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as iter::traits::exact_size::ExactSizeIterator>::len",
    "hash": "65938875803396913552242942886366437729"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as iter::traits::iterator::Iterator>::__iterator_get_unchecked",
    "hash": "755992720586488610812932424575441760477"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as iter::traits::iterator::Iterator>::advance_by",
    "hash": "68048161387437530317726651129761000290"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as iter::traits::iterator::Iterator>::count",
    "hash": "16442009387475745783617092712059147964"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as iter::traits::iterator::Iterator>::last",
    "hash": "17679146042637750956201863337527634360"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as iter::traits::iterator::Iterator>::next",
    "hash": "1112387433484559248617521733403207477229"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as iter::traits::iterator::Iterator>::size_hint",
    "hash": "90283732661933715659640819128273353718"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as clone::Clone>::clone",
    "hash": "77297792283853085913028121972662998166"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by",
    "hash": "1016092817313860423212558279092008167680"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as iter::traits::double_ended::DoubleEndedIterator>::next_back",
    "hash": "141791334423418662039425829731159348068"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as iter::traits::exact_size::ExactSizeIterator>::is_empty",
    "hash": "131989059948085093073852150892833968976"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as iter::traits::exact_size::ExactSizeIterator>::len",
    "hash": "138146750292933418208000627705911670750"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as iter::traits::iterator::Iterator>::__iterator_get_unchecked",
    "hash": "31173776944928831476906241223274567597"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as iter::traits::iterator::Iterator>::advance_by",
    "hash": "166632256594311274013091798956489037591"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as iter::traits::iterator::Iterator>::count",
    "hash": "744001393418860813217734964554394751737"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as iter::traits::iterator::Iterator>::last",
    "hash": "69368984246649229199967574804665145278"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as iter::traits::iterator::Iterator>::next",
    "hash": "32698719331993183054032450006498310211"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as iter::traits::iterator::Iterator>::size_hint",
    "hash": "1027708593438540248413980505779482502344"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as clone::Clone>::clone",
    "hash": "1627654363608391064214269074746484539541"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by",
    "hash": "8543891363159389582920860483451020261"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as iter::traits::double_ended::DoubleEndedIterator>::next_back",
    "hash": "21219431243890097941989115079868549787"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as iter::traits::exact_size::ExactSizeIterator>::is_empty",
    "hash": "28182804892575652621262896378129640226"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as iter::traits::exact_size::ExactSizeIterator>::len",
    "hash": "20444811762446829696991288622876336974"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as iter::traits::iterator::Iterator>::__iterator_get_unchecked",
    "hash": "11533299678791555087630447935912245233"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as iter::traits::iterator::Iterator>::advance_by",
    "hash": "114941131914495097537432681118221818874"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as iter::traits::iterator::Iterator>::count",
    "hash": "3319693376345974627089461543492396543"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as iter::traits::iterator::Iterator>::last",
    "hash": "60361888565127578843018856570051769922"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as iter::traits::iterator::Iterator>::next",
    "hash": "11889668449997497109729670272973676655"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as iter::traits::iterator::Iterator>::size_hint",
    "hash": "8062902232142518633462520009088608308"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::TryFromCharError as clone::Clone>::clone",
    "hash": "17593036413974483450417272064427724356"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::TryFromCharError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "163137489307341236254607985678772685992"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::TryFromCharError as cmp::PartialEq>::eq",
    "hash": "207895728047414024214160502408986053704"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "char::CaseMappingIter::new",
    "hash": "1066921999037290449714597672325700554617"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "char::EscapeDebug::backslash",
    "hash": "783953459669900024915752671644269616211"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "char::EscapeDebug::printable",
    "hash": "5619596178062134676583009599741352142"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "char::EscapeDebug::unicode",
    "hash": "1182904944215620875716734905811156377150"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "char::EscapeDefault::backslash",
    "hash": "167318693743665471496388970833021607658"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "char::EscapeDefault::printable",
    "hash": "95001581818926480997273063874299368335"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "char::EscapeDefault::unicode",
    "hash": "1646984495344738122217810247414546966914"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "char::EscapeUnicode::new",
    "hash": "153073452790500330565052722859991885675"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "char::from_digit",
    "hash": "41074370055697033255632607170202960049"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "char::from_u32",
    "hash": "1215275575706026737710183790651904454627"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "char::from_u32_unchecked",
    "hash": "166499207820494841914703907199732233663"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for bool>::clone",
    "hash": "1541084449582708066812227015681373151583"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for char>::clone",
    "hash": "1684636505577985912917866394062015379629"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for f128>::clone",
    "hash": "134864718858646887498578662502019801872"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for f16>::clone",
    "hash": "62033691751709743921158161411877009058"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for f32>::clone",
    "hash": "62849242641042502655525935897380561555"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for f64>::clone",
    "hash": "1510688254251230865813497044048451380593"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for i128>::clone",
    "hash": "161839298653982029038459114307016294619"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for i16>::clone",
    "hash": "1416907371658077741315444557147585542943"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for i32>::clone",
    "hash": "2946218448093988201964427223285041136"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for i64>::clone",
    "hash": "37339067580597664836529318802427343795"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for i8>::clone",
    "hash": "90692542500502867534412921940530622966"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for isize>::clone",
    "hash": "40841349884173141842442651584006866032"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for u128>::clone",
    "hash": "782533626902243992317767964933214769061"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for u16>::clone",
    "hash": "1405173180943430666414644407524585429282"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for u32>::clone",
    "hash": "10603719114885247727214992470050664594"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for u64>::clone",
    "hash": "171106814752922133318385408044488291847"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for u8>::clone",
    "hash": "91101706103594327621932468101859858531"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for usize>::clone",
    "hash": "147525344997271935276533934923114074305"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "<cmp::Ordering as clone::Clone>::clone",
    "hash": "1453848351783850549116325865097133367598"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "<cmp::Ordering as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "173990051472475260682432545164290715366"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "<cmp::Ordering as cmp::Ord>::cmp",
    "hash": "90137591796003850359632561321974967469"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "<cmp::Ordering as cmp::PartialEq>::eq",
    "hash": "25315992229481465352451865580694346951"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "<cmp::Ordering as cmp::PartialOrd>::partial_cmp",
    "hash": "58040128369477041818581262470185408620"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::Ordering::as_raw",
    "hash": "1599087357710868766316850218022372470465"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::Ordering::is_eq",
    "hash": "1767636601726053801510136021476408014418"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::Ordering::is_ge",
    "hash": "77015241674195912492077004693443111248"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::Ordering::is_gt",
    "hash": "1413669743415980651815482576558527560187"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::Ordering::is_le",
    "hash": "7720540233689324914916901207397917923"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::Ordering::is_lt",
    "hash": "1135064969461757410215295834489737485864"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::Ordering::is_ne",
    "hash": "5540397206875553286766355609948884527"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::Ordering::reverse",
    "hash": "10330146680765739193313035122530387069"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::Ordering::then",
    "hash": "1417415538638866048610242062592059666242"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for ()>::cmp",
    "hash": "326266878733747875510010226591721936591"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for bool>::clamp",
    "hash": "96811812160594087115063758489337812780"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for bool>::cmp",
    "hash": "88384404180700621366629882541354269403"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for bool>::max",
    "hash": "141198862792638300034244001504527487083"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for bool>::min",
    "hash": "45249092865509278445496023662989879959"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for char>::cmp",
    "hash": "139527066517240058298709637544916107716"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for i128>::cmp",
    "hash": "44832224789384222802515905590530188068"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for i16>::cmp",
    "hash": "17570561132490819092874960552795184458"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for i32>::cmp",
    "hash": "842267059997019422815333829425931124000"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for i64>::cmp",
    "hash": "131203065817488211067140136749599673893"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for i8>::cmp",
    "hash": "273822593351941059516531358367108661190"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for isize>::cmp",
    "hash": "5379374555789658073707012302374996835"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for u128>::cmp",
    "hash": "1131636666458486906514966799554721553883"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for u16>::cmp",
    "hash": "78730284242200430723749747438658132860"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for u32>::cmp",
    "hash": "131804240691040385559237509421631119204"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for u64>::cmp",
    "hash": "1089932391761665036016414866145987101524"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for u8>::cmp",
    "hash": "4298436512004098368501497010512321306"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for usize>::cmp",
    "hash": "951858419091851333614102360024241858063"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for ()>::eq",
    "hash": "4705100405533686565995074127689304415"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for ()>::ne",
    "hash": "1429062094026820723310786334394082734490"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for bool>::eq",
    "hash": "1802889178136868040118343593200685347686"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for bool>::ne",
    "hash": "178554573903023165771469903548629224914"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for char>::eq",
    "hash": "15518699560175228058918609018343356989"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for char>::ne",
    "hash": "93438172312179898191465897835311049562"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for f128>::eq",
    "hash": "132412117790542443258465150605224583056"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for f128>::ne",
    "hash": "155140754874107391946791271500498011272"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for f16>::eq",
    "hash": "98567758370546986983125852220078410127"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for f16>::ne",
    "hash": "35902004169784870955892667614762650595"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for f32>::eq",
    "hash": "25228437426877576351635482740751924775"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for f32>::ne",
    "hash": "47292217725132162384552093565156223818"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for f64>::eq",
    "hash": "53662210377722117247255803692570139662"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for f64>::ne",
    "hash": "17839973167024825035303796143882736645"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for i128>::eq",
    "hash": "84854157009096793184505630589693821140"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for i128>::ne",
    "hash": "4523606285266326479107799930613427596"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for i16>::eq",
    "hash": "46481893354104515173031309152647932738"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for i16>::ne",
    "hash": "4050526925845494852453066671974997164"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for i32>::eq",
    "hash": "1674849932610625866118370104244658210822"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for i32>::ne",
    "hash": "67377197155755049242124838670677101573"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for i64>::eq",
    "hash": "102394854822679185511757346022704137097"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for i64>::ne",
    "hash": "966830624825446352312094373941736813516"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for i8>::eq",
    "hash": "66112845269262938208238172803954980118"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for i8>::ne",
    "hash": "127268315914801632215788024717444007960"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for isize>::eq",
    "hash": "770689426483228761223235743246575806"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for isize>::ne",
    "hash": "118326583535237364012713187347196655489"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for u128>::eq",
    "hash": "64201773556620695745425537250792946260"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for u128>::ne",
    "hash": "1172093201039334143510524123475294682361"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for u16>::eq",
    "hash": "99976419681519545577929510319272264645"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for u16>::ne",
    "hash": "501638087040665454610983510760598562478"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for u32>::eq",
    "hash": "14788582008995232797761326074092651079"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for u32>::ne",
    "hash": "814362674021914825717686245777359703992"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for u64>::eq",
    "hash": "463280735582930019114404485781406104133"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for u64>::ne",
    "hash": "167899847990632413701797351830072679643"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for u8>::eq",
    "hash": "50268492807635183487245076908425358872"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for u8>::ne",
    "hash": "142470248864388377168870267173636394357"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for usize>::eq",
    "hash": "1320467760788560224514230630305072675871"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for usize>::ne",
    "hash": "28385238908980352326805070693895050864"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for ()>::partial_cmp",
    "hash": "1414541300270199418213168766429460715197"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for bool>::__chaining_ge",
    "hash": "578825596355387149613395567298980423769"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for bool>::__chaining_gt",
    "hash": "18978848694670348275182692016708428262"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for bool>::__chaining_le",
    "hash": "177529187826170619114976296329021118707"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for bool>::__chaining_lt",
    "hash": "1115226253549215040310617354234484519419"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for bool>::ge",
    "hash": "798551639269656365810633668857724600431"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for bool>::gt",
    "hash": "103748085360982771628096357783467833374"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for bool>::le",
    "hash": "1604618878034127788917555461967531612844"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for bool>::lt",
    "hash": "102798952029638042176319523404642444156"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for bool>::partial_cmp",
    "hash": "359362747701919629717464054427512026912"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for char>::__chaining_ge",
    "hash": "71264527894865437414010551682653003543"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for char>::__chaining_gt",
    "hash": "161171011629462626583117577797162402362"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for char>::__chaining_le",
    "hash": "163920037673336650801186132432189168010"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for char>::__chaining_lt",
    "hash": "399597032967171941914036882222973238490"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for char>::ge",
    "hash": "116941670053223182849548112347422362172"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for char>::gt",
    "hash": "42680075303052524965485835578817634150"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for char>::le",
    "hash": "25191063086834228011728582489039895343"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for char>::lt",
    "hash": "1690201120002870263910426166964932573304"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for char>::partial_cmp",
    "hash": "24162148448370354589733188262820661775"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f128>::__chaining_ge",
    "hash": "77570750049454441942845132557359668124"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f128>::__chaining_gt",
    "hash": "105319187994360730337130640445778098382"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f128>::__chaining_le",
    "hash": "1175159422002408012410682921135195731807"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f128>::__chaining_lt",
    "hash": "64371128778089058202286036483345602485"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f128>::ge",
    "hash": "1112776653218206363714268674996192728274"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f128>::gt",
    "hash": "782623629868165146717175679726287462758"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f128>::le",
    "hash": "52333083893762950753975300513354069894"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f128>::lt",
    "hash": "1072726330345218873818086691183427976262"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f128>::partial_cmp",
    "hash": "5976169314198244501162287379919144072"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f16>::__chaining_ge",
    "hash": "1143316090739976730612708710701624315763"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f16>::__chaining_gt",
    "hash": "5802485527763915903785816903541984550"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f16>::__chaining_le",
    "hash": "74370977747920265178084032885873630739"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f16>::__chaining_lt",
    "hash": "1387163546711210556615505660394295610840"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f16>::ge",
    "hash": "16247735014743643556170438868286695335"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f16>::gt",
    "hash": "1795146981124003409014685080961516332493"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f16>::le",
    "hash": "125470925375554590103042773218841190787"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f16>::lt",
    "hash": "330097328533676009316647207291422362759"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f16>::partial_cmp",
    "hash": "51253921565357424419363665474916532429"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f32>::__chaining_ge",
    "hash": "1201694889440830776616491155782243712353"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f32>::__chaining_gt",
    "hash": "8064556355725971666159407891176223724"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f32>::__chaining_le",
    "hash": "105204828085430851265042250988438514413"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f32>::__chaining_lt",
    "hash": "67046926271757515012646727538693885780"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f32>::ge",
    "hash": "658078132255476494111548478521730703813"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f32>::gt",
    "hash": "469220993544944414914793290462524071579"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f32>::le",
    "hash": "21116977571499421344231392672037243897"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f32>::lt",
    "hash": "40773573738061859959602751174711918062"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f32>::partial_cmp",
    "hash": "32741184074212339817025314919489807319"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f64>::__chaining_ge",
    "hash": "1173149172762998377418276918221513185689"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f64>::__chaining_gt",
    "hash": "158070074086519068765694059185536281341"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f64>::__chaining_le",
    "hash": "157467864489038012342887292173163315993"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f64>::__chaining_lt",
    "hash": "1822179160837771135816988259484768122430"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f64>::ge",
    "hash": "68339023766398858555440975147593137171"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f64>::gt",
    "hash": "9674521848752756613767926320582986339"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f64>::le",
    "hash": "938692198099078774712083219862555622919"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f64>::lt",
    "hash": "171966161495435417465664914131710370997"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f64>::partial_cmp",
    "hash": "511532948149704845711189102103753452552"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i128>::__chaining_ge",
    "hash": "341477888021074005512263839230117409292"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i128>::__chaining_gt",
    "hash": "98038596223338175935015569615538862549"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i128>::__chaining_le",
    "hash": "171772693376941040631549184287279487111"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i128>::__chaining_lt",
    "hash": "53291966586716576161924084086348413938"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i128>::ge",
    "hash": "50955014916640454661837898389233919200"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i128>::gt",
    "hash": "40375971446719616616292812952070776740"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i128>::le",
    "hash": "909252076882372822714321152903899582909"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i128>::lt",
    "hash": "432643872418970768815692863716383369432"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i128>::partial_cmp",
    "hash": "163550080227793864966356638535326483641"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i16>::__chaining_ge",
    "hash": "89754109746419697064282609422311153699"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i16>::__chaining_gt",
    "hash": "33120969441997411617499568395943427527"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i16>::__chaining_le",
    "hash": "36819412795964640751256964026380709160"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i16>::__chaining_lt",
    "hash": "1215348657450408908915707620005837030616"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i16>::ge",
    "hash": "161676835738211674035740305725907625183"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i16>::gt",
    "hash": "76619691553272127929569312204715869164"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i16>::le",
    "hash": "17658178577037227397858916360997625917"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i16>::lt",
    "hash": "1213853443284027005618058598546630235512"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i16>::partial_cmp",
    "hash": "378067185406193463012370735721593125470"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i32>::__chaining_ge",
    "hash": "317792569590250014914282631836499933273"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i32>::__chaining_gt",
    "hash": "925527185545600121214320941965971897059"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i32>::__chaining_le",
    "hash": "967213496975972407618309591448712697150"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i32>::__chaining_lt",
    "hash": "40594718373777861913173333482836340135"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i32>::ge",
    "hash": "1535996575152168769915549877827737279774"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i32>::gt",
    "hash": "1262279423235411172410734952325013040644"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i32>::le",
    "hash": "69754678775755535297499542041512795014"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i32>::lt",
    "hash": "961413065080689263112368134397402718944"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i32>::partial_cmp",
    "hash": "119929648751817687643890860233822170900"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i64>::__chaining_ge",
    "hash": "47589363529059518557164846191631812127"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i64>::__chaining_gt",
    "hash": "1569615108346367101210354453684372262973"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i64>::__chaining_le",
    "hash": "304975284974325326010269844088334472878"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i64>::__chaining_lt",
    "hash": "1817930959233718391013674952392569718213"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i64>::ge",
    "hash": "37605485286327083705540910950398614470"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i64>::gt",
    "hash": "515369855418007512414387965608362668851"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i64>::le",
    "hash": "1794809666010129108811414850818778983482"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i64>::lt",
    "hash": "31971559620634993072497414611837921172"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i64>::partial_cmp",
    "hash": "2859281157529461291817402771229094178"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i8>::__chaining_ge",
    "hash": "1108596952885060690113919593807334306167"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i8>::__chaining_gt",
    "hash": "29557147755429277923355210438705404295"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i8>::__chaining_le",
    "hash": "16857087145812454999123125049855976483"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i8>::__chaining_lt",
    "hash": "1012036154051267487610935974485415595462"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i8>::ge",
    "hash": "1357844897070325128016688287209214308086"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i8>::gt",
    "hash": "954451088741779958915780013560057788449"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i8>::le",
    "hash": "97944781607954234714933777742521747758"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i8>::lt",
    "hash": "59431585877006832114506841815936661435"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i8>::partial_cmp",
    "hash": "689348305308456613610193932127614414004"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for isize>::__chaining_ge",
    "hash": "74238220381331612411106969544844414137"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for isize>::__chaining_gt",
    "hash": "162856045306888237812597494865305313763"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for isize>::__chaining_le",
    "hash": "1205319475555766320017072830438170774958"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for isize>::__chaining_lt",
    "hash": "150601667537082114577657478468856106029"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for isize>::ge",
    "hash": "128530691637756161902288255534984213898"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for isize>::gt",
    "hash": "67579297537116726217259322251380228589"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for isize>::le",
    "hash": "692745909670683610717943687571091860832"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for isize>::lt",
    "hash": "177500186369641598656848646804160604843"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for isize>::partial_cmp",
    "hash": "1504894046191329342516642283196831270142"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u128>::__chaining_ge",
    "hash": "4198955234369094945978331441190929155"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u128>::__chaining_gt",
    "hash": "113721095776886471043363431771612134308"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u128>::__chaining_le",
    "hash": "46995294116883531787698078568940216452"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u128>::__chaining_lt",
    "hash": "1098066212123074333516856618561954779120"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u128>::ge",
    "hash": "103444057591425912974560874025365600988"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u128>::gt",
    "hash": "1334043413188491969214517283895342564103"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u128>::le",
    "hash": "43973918452349306445740347792719101674"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u128>::lt",
    "hash": "585929059500562879912576476726405500891"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u128>::partial_cmp",
    "hash": "97857633285368943681354350891308659595"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u16>::__chaining_ge",
    "hash": "3618889498771154404696266738403658285"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u16>::__chaining_gt",
    "hash": "162939954678090397912888157844254535032"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u16>::__chaining_le",
    "hash": "403813540871790394313355218333123519238"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u16>::__chaining_lt",
    "hash": "224538569773332953015935354565133478118"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u16>::ge",
    "hash": "1250127290689641395013554160309947391491"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u16>::gt",
    "hash": "184387475556752258705797486417760904645"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u16>::le",
    "hash": "339429075237884379413705816082025146619"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u16>::lt",
    "hash": "82654341932789732147751919849221457004"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u16>::partial_cmp",
    "hash": "177204132674385933317258937504706541492"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u32>::__chaining_ge",
    "hash": "128841769378838719667823853324957460308"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u32>::__chaining_gt",
    "hash": "165631093884235901911340502259391976001"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u32>::__chaining_le",
    "hash": "107348173371221698306089360007976222698"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u32>::__chaining_lt",
    "hash": "7525438604242668256700235155720471681"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u32>::ge",
    "hash": "1431354684681232682213532060815840762611"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u32>::gt",
    "hash": "644738972691477611111440489835984167081"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u32>::le",
    "hash": "73823948922687090493490572363404488201"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u32>::lt",
    "hash": "153871104070145767316778160342330240743"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u32>::partial_cmp",
    "hash": "4976469618670056178712128564843409920"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u64>::__chaining_ge",
    "hash": "1276924848331803346612424721148379696422"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u64>::__chaining_gt",
    "hash": "1759615334014351544818399444616972264823"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u64>::__chaining_le",
    "hash": "1775229380384845135716104350028784713627"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u64>::__chaining_lt",
    "hash": "504506494268084635912923131009762231740"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u64>::ge",
    "hash": "782504771221663126315856838856334729028"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u64>::gt",
    "hash": "104296872960810518573767383121132081425"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u64>::le",
    "hash": "115347817357415588962889507446769987335"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u64>::lt",
    "hash": "54685371803764063204690065054665066907"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u64>::partial_cmp",
    "hash": "877085482244590541498241263273192687"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u8>::__chaining_ge",
    "hash": "179661276308380416043908849496757309702"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u8>::__chaining_gt",
    "hash": "1100107231971130229214132907963306794472"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u8>::__chaining_le",
    "hash": "535861037408648390517583728715194186024"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u8>::__chaining_lt",
    "hash": "2555464184068495982191126990705662077"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u8>::ge",
    "hash": "499670831053921794217163067823345305002"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u8>::gt",
    "hash": "1823693009941540177813329131996096504992"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u8>::le",
    "hash": "1283469796163921542411319081112879521884"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u8>::lt",
    "hash": "26005865984918626858637243729294095122"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u8>::partial_cmp",
    "hash": "96628072369026310369313522421454283121"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for usize>::__chaining_ge",
    "hash": "1548863975034644371418113953602308266846"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for usize>::__chaining_gt",
    "hash": "152030842626583256111932459692417043153"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for usize>::__chaining_le",
    "hash": "136946971767327480267949460325330052198"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for usize>::__chaining_lt",
    "hash": "1214050315828216669613460239412280975881"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for usize>::ge",
    "hash": "1086880474753072881916750292298015254856"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for usize>::gt",
    "hash": "587485916120659342113526814978768353585"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for usize>::le",
    "hash": "1186658527347102749413053744485431793478"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for usize>::lt",
    "hash": "155146884437592745449279657258619050520"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for usize>::partial_cmp",
    "hash": "12056847098724419635546482860389617832"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<i128>>::to_int_unchecked",
    "hash": "5401272748005108225170015231844042415"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<i16>>::to_int_unchecked",
    "hash": "8106237640557471073580597645246276389"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<i32>>::to_int_unchecked",
    "hash": "492233870384668259417646718277520613131"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<i64>>::to_int_unchecked",
    "hash": "85436354481777373298678937161968822808"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<i8>>::to_int_unchecked",
    "hash": "67272556067146161882674407005627671670"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<isize>>::to_int_unchecked",
    "hash": "145859362768437713122255974850783963947"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<u128>>::to_int_unchecked",
    "hash": "649373533595446747616634326362916258113"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<u16>>::to_int_unchecked",
    "hash": "68691467309782099588566504033335306113"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<u32>>::to_int_unchecked",
    "hash": "142095150557611732085601685115493352309"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<u64>>::to_int_unchecked",
    "hash": "4047051432235026783944635623816623002"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<u8>>::to_int_unchecked",
    "hash": "8759826370357264640712844467855374887"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<usize>>::to_int_unchecked",
    "hash": "987003126600730429312936607391211602970"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<i128>>::to_int_unchecked",
    "hash": "16330166665644353718187662156311451106"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<i16>>::to_int_unchecked",
    "hash": "46138308164662925421872131734313820414"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<i32>>::to_int_unchecked",
    "hash": "922371780220321241915961426071415444094"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<i64>>::to_int_unchecked",
    "hash": "30943267019948841189819240036255568574"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<i8>>::to_int_unchecked",
    "hash": "11540754517172685714952890080583928020"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<isize>>::to_int_unchecked",
    "hash": "1657647698240050611110600248014284790678"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<u128>>::to_int_unchecked",
    "hash": "1584507318570215242217093049813184331868"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<u16>>::to_int_unchecked",
    "hash": "605022253927063737518373324847650302490"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<u32>>::to_int_unchecked",
    "hash": "113194812208013255087998247489448877960"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<u64>>::to_int_unchecked",
    "hash": "1655810091731811610911551844610285981497"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<u8>>::to_int_unchecked",
    "hash": "149684059415400330131224220641522900093"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<usize>>::to_int_unchecked",
    "hash": "236602267344438528112569534307232442444"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<i128>>::to_int_unchecked",
    "hash": "15080030101056987978349956702811452423"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<i16>>::to_int_unchecked",
    "hash": "166802358580199115719878010896079132113"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<i32>>::to_int_unchecked",
    "hash": "548163622760939740816876510990731455391"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<i64>>::to_int_unchecked",
    "hash": "1084895836427789824717598742751658306639"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<i8>>::to_int_unchecked",
    "hash": "34890024067839659768026381397380918139"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<isize>>::to_int_unchecked",
    "hash": "167708659183710072111515128342092549088"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<u128>>::to_int_unchecked",
    "hash": "433207813363144498614421505327452795449"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<u16>>::to_int_unchecked",
    "hash": "1231920946327885171814833090428139865746"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<u32>>::to_int_unchecked",
    "hash": "1214858424165111957313963051426664600400"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<u64>>::to_int_unchecked",
    "hash": "94526677244680493164919154072316679657"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<u8>>::to_int_unchecked",
    "hash": "93978316644746463992277797426831022622"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<usize>>::to_int_unchecked",
    "hash": "440086421632680266711470680405402503739"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<i128>>::to_int_unchecked",
    "hash": "147227011374976596589077049069025332704"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<i16>>::to_int_unchecked",
    "hash": "79501386549668259428026726782306385145"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<i32>>::to_int_unchecked",
    "hash": "53595793617303824321148836128309304338"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<i64>>::to_int_unchecked",
    "hash": "5317042478714973718750854311883021473"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<i8>>::to_int_unchecked",
    "hash": "119408407444599371510815039566879659785"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<isize>>::to_int_unchecked",
    "hash": "59245911038507173017966681126328345067"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<u128>>::to_int_unchecked",
    "hash": "1334842237500446619917057637565054429902"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<u16>>::to_int_unchecked",
    "hash": "1483028211588406849813308090296863861059"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<u32>>::to_int_unchecked",
    "hash": "117969322134786505349670780818056937488"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<u64>>::to_int_unchecked",
    "hash": "488821708153327801840929483641102328"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<u8>>::to_int_unchecked",
    "hash": "890139287041388898414349884129634908933"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<usize>>::to_int_unchecked",
    "hash": "1231465154010309634711140755662905314330"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for f128>::from",
    "hash": "1789542306120465212116311275851087336251"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for f16>::from",
    "hash": "8073787243304497922826771566958761123"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for f32>::from",
    "hash": "1858874351108735846764694083905870051"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for f64>::from",
    "hash": "263863326109784245113318873224162457611"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for i128>::from",
    "hash": "1794871947812776128313659547381894532445"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for i16>::from",
    "hash": "48844683957880554112654781190951902465"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for i32>::from",
    "hash": "15974218049985801664655223501580713974"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for i64>::from",
    "hash": "12882403312354514405297719775408127111"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for i8>::from",
    "hash": "7004788824799887475851475436259878269"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for isize>::from",
    "hash": "292117587579826993915751535867241273080"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for u128>::from",
    "hash": "88850233496641139502427744750706159355"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for u16>::from",
    "hash": "1408624451954456259213764556278997655759"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for u32>::from",
    "hash": "173061126694799202639094260664178350491"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for u64>::from",
    "hash": "130821916993004383724687895105377127682"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for u8>::from",
    "hash": "109347173964199969639556475715820209817"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for usize>::from",
    "hash": "1237504719612890742317982279651710292288"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<f16> for f128>::from",
    "hash": "1055393840019585268511415380711841438649"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<f16> for f64>::from",
    "hash": "1736646244190202049617830120802441423098"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<f32> for f128>::from",
    "hash": "131666853646089964671920147568884316423"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<f32> for f64>::from",
    "hash": "235414070433235062217422026781084034924"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<f64> for f128>::from",
    "hash": "9981326628654144599559555495014818307"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i16> for f128>::from",
    "hash": "89933557664993762201393948154196722084"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i16> for f32>::from",
    "hash": "1319258001040250174618186238697089104105"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i16> for f64>::from",
    "hash": "12566502522213766745682526898092971645"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i16> for i128>::from",
    "hash": "1090710200514452175617054828032806732506"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i16> for i32>::from",
    "hash": "1833149354452959124312638353584684583642"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i16> for i64>::from",
    "hash": "11199516400676442699750745715111286687"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i16> for isize>::from",
    "hash": "2380421536982920580182943022897387692"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i32> for f128>::from",
    "hash": "863642899723005104910994403210172628775"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i32> for f64>::from",
    "hash": "1355983201013722561913515634276583770284"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i32> for i128>::from",
    "hash": "365231642760684231217869505877800182540"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i32> for i64>::from",
    "hash": "23310505072668924636368916123711234581"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i64> for i128>::from",
    "hash": "1292834238592954332710556899317332068846"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for f128>::from",
    "hash": "113352261355814651529629095432489314160"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for f16>::from",
    "hash": "1153675145200556803915993423727570360747"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for f32>::from",
    "hash": "49696116521617059641978538028730640560"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for f64>::from",
    "hash": "111365693242426027611041356093620648039"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for i128>::from",
    "hash": "890319913482085357316105283515387199386"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for i16>::from",
    "hash": "160622156172004142086190069188301971259"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for i32>::from",
    "hash": "1588015091717471965217496485761920366905"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for i64>::from",
    "hash": "1305505417289711970015900851218413996192"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for isize>::from",
    "hash": "1625675642317806584113852399241260884749"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<i128>>::from",
    "hash": "58491556841094060324420366370919988350"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<i32>>::from",
    "hash": "1820310092248813746011565639416710408763"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<i64>>::from",
    "hash": "1197108170090435282112599535823139717655"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<isize>>::from",
    "hash": "644729096453581900013244040393993142661"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<i128>>::from",
    "hash": "139819559161964318261524887532864948035"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<i64>>::from",
    "hash": "147510187568627424765625603100555345395"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<i128>>::from",
    "hash": "1306790076330051307610005128888794319311"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<i128>>::from",
    "hash": "535209157928950161114258186838210869049"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<i16>>::from",
    "hash": "706085246154271972714897589456742393220"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<i32>>::from",
    "hash": "157501186597089037352959942370846580391"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<i64>>::from",
    "hash": "91048174288358972503873652962823329368"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<isize>>::from",
    "hash": "1133633480402993020116053964575365777361"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<i128>>::from",
    "hash": "49422798428470159029897236283360819164"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<i32>>::from",
    "hash": "104999568441843606787672721267565245326"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<i64>>::from",
    "hash": "806865885141267131616361011679645278931"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<u128>>::from",
    "hash": "996735112491942813616648862829547021256"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<u32>>::from",
    "hash": "1117644119576668765611421560021069206"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<u64>>::from",
    "hash": "12263495141459562182581283849058097112"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<usize>>::from",
    "hash": "111757564339081251565640720465730084815"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<i128>>::from",
    "hash": "182988158162022668363414081102193210140"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<i64>>::from",
    "hash": "1597539805302574889010391326181062732136"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<u128>>::from",
    "hash": "1447723121600662465713945450092531761352"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<u64>>::from",
    "hash": "167282115914545753783033793305740910617"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<i128>>::from",
    "hash": "270592372536293705914213133497917067183"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<u128>>::from",
    "hash": "1578644316924441665011343994285826011097"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<i128>>::from",
    "hash": "994585285459280896728665366305964871"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<i16>>::from",
    "hash": "2372917339307070835654441305711148784"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<i32>>::from",
    "hash": "790973974534869120911969807722778186225"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<i64>>::from",
    "hash": "2358873059258264667775558740677438910"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<isize>>::from",
    "hash": "51147248107389135473691053719349406699"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<u128>>::from",
    "hash": "19526431466015803483304623585037511862"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<u16>>::from",
    "hash": "130937601450912125054670247189513823291"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<u32>>::from",
    "hash": "961053942574772345218033030724549725485"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<u64>>::from",
    "hash": "155146206541502010383759924842725044624"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<usize>>::from",
    "hash": "629220717825883392517057156514223819219"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for f128>::from",
    "hash": "512906658735565694311099137432300681749"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for f32>::from",
    "hash": "1761341965649931578012999834761432557263"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for f64>::from",
    "hash": "550364124564084119314175646831331396057"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for i128>::from",
    "hash": "831850431982784336714289357141359806659"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for i32>::from",
    "hash": "265419032335565067813564875751572239549"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for i64>::from",
    "hash": "62554481119205947824639725698727576544"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for u128>::from",
    "hash": "269740563742987016016441944846597814243"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for u32>::from",
    "hash": "696204204190822498510158130940083011402"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for u64>::from",
    "hash": "1842238048521899319216661918848072417444"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for usize>::from",
    "hash": "1764493963101210311413165999113212183409"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u32> for f128>::from",
    "hash": "1072628949059966755616889189654085735094"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u32> for f64>::from",
    "hash": "16277957510272380702654275820789462576"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u32> for i128>::from",
    "hash": "975017197663566676911628336219531610474"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u32> for i64>::from",
    "hash": "981505378062833669713544325705331161573"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u32> for u128>::from",
    "hash": "1816442911027582312117649205470109147667"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u32> for u64>::from",
    "hash": "1136360611523765204016894861172344305721"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u64> for i128>::from",
    "hash": "134946530131405556275291907990542838064"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u64> for u128>::from",
    "hash": "51960838243998703372174073128523606717"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for f128>::from",
    "hash": "114726964402839652122421767184822010657"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for f16>::from",
    "hash": "163949952917421708246620864402828387230"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for f32>::from",
    "hash": "1821624015889267771913885778514907932624"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for f64>::from",
    "hash": "790501651740110340717899357923559252217"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for i128>::from",
    "hash": "35436388388524583839148525314316681194"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for i16>::from",
    "hash": "353779220660859074916459036090406136562"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for i32>::from",
    "hash": "159956795948017075193347671756804392483"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for i64>::from",
    "hash": "318411183871803688713523920246046813227"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for isize>::from",
    "hash": "1618976793528353030111418463449906028438"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for u128>::from",
    "hash": "11605445658723319250536995745105048898"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for u16>::from",
    "hash": "26566903800356228512243370711656654888"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for u32>::from",
    "hash": "954140692927706953217130803342441391826"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for u64>::from",
    "hash": "142214227362904135076595781839914230549"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for usize>::from",
    "hash": "119539198841178170095714608677850051781"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for i16>::try_from",
    "hash": "45400785337515059313800428576948677164"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for i32>::try_from",
    "hash": "22476670698940202943146218414991679806"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for i64>::try_from",
    "hash": "574666309370735163014995696932984813282"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for i8>::try_from",
    "hash": "161590268300533990794858746155247203544"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for num::nonzero::NonZero<i128>>::try_from",
    "hash": "118837187681255353445220552634771935572"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for u128>::try_from",
    "hash": "1461363009013774461517908549331222696338"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for u16>::try_from",
    "hash": "57570769004231423459104319663931520363"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for u32>::try_from",
    "hash": "162911855155725631177739123050729941382"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for u64>::try_from",
    "hash": "901786331183791447117204766429688980199"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for u8>::try_from",
    "hash": "148072388005614968618257324985150599928"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i16> for i8>::try_from",
    "hash": "733359851653899404711431532055695869406"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i16> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "84949256875415713299182602225163534073"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i16> for u128>::try_from",
    "hash": "16256016850884836540867339519038973719"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i16> for u16>::try_from",
    "hash": "81141380205958915823319660833716728563"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i16> for u32>::try_from",
    "hash": "1506500986570558850413196165453119911548"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i16> for u64>::try_from",
    "hash": "323124167137632733115538003972132479163"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i16> for u8>::try_from",
    "hash": "143848739864720140814329719047043840566"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i32> for i16>::try_from",
    "hash": "573770195936127898311478162142096980830"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i32> for i8>::try_from",
    "hash": "95301580034018654567484516795264236572"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i32> for num::nonzero::NonZero<i32>>::try_from",
    "hash": "989198349328199178710958639457049224326"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i32> for u128>::try_from",
    "hash": "13975179106737034521745066623644956264"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i32> for u16>::try_from",
    "hash": "1213164403944714857712360112873116207173"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i32> for u32>::try_from",
    "hash": "121422642591812018294899847634585834010"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i32> for u64>::try_from",
    "hash": "1271799165121182816414134973384602480276"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i32> for u8>::try_from",
    "hash": "4259929890161278738269551006724674751"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for i16>::try_from",
    "hash": "71007129285107525449836079876094009398"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for i32>::try_from",
    "hash": "1638487504070731725716065886969433940892"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for i8>::try_from",
    "hash": "40701467937063224329145833540528517385"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for num::nonzero::NonZero<i64>>::try_from",
    "hash": "168735114045765878529878789107493902500"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for u128>::try_from",
    "hash": "1622942722331221769216140901026378060370"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for u16>::try_from",
    "hash": "101327775189225934811191983572300893734"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for u32>::try_from",
    "hash": "50159391800631589098220055028840485979"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for u64>::try_from",
    "hash": "1065280746673628320315272301742015988230"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for u8>::try_from",
    "hash": "168048301556740617888959180618572804743"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i8> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "77120269147797600248175845795680254947"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i8> for u128>::try_from",
    "hash": "18662524535915571046129862810317402724"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i8> for u16>::try_from",
    "hash": "1816613738275826949712494009729878504050"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i8> for u32>::try_from",
    "hash": "11306559994856447903355850885578388778"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i8> for u64>::try_from",
    "hash": "109183171310725104116844937846108903249"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i8> for u8>::try_from",
    "hash": "79254900824325133954234023207298724785"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<isize> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "965577863474001136015059078542511670868"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<isize> for usize>::try_from",
    "hash": "107531238139093707791602505055265415327"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "11019540738359226266867225001725080317"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<i32>>::try_from",
    "hash": "82546279272763257167672626003957878696"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<i64>>::try_from",
    "hash": "123009501676033577316622462413485857428"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "135702335153070213677482736450703439673"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "1705544319785759930817624748115343822625"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<u128>>::try_from",
    "hash": "154669281398335540559880250085116797302"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "138946047207132949871614508075013744446"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "1839066598476505795311378363783840682940"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "155212484457817171414111825323679947160"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "52485549925812978578721959576354217931"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "69236865892356775568780616173054144176"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "1798554948936114492617394698578492161843"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<u128>>::try_from",
    "hash": "37865844926949945646618949307323110692"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "73763846100719908173000228856010337443"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "71199339279881931549027823721424207356"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "136581893226076625041976178688863395279"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "874551175494686799011197638141908539371"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "42960815658927101852042907668932720509"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "38201621106108616332955530021968675797"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "103121776572797234913467836024555322547"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "147116523937777449948036467139590908211"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<u128>>::try_from",
    "hash": "1689625635204351351911729899587969103891"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "1229116996998498873010082321977573615592"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "23863289301434350531655510556353058867"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "150699607339497990877496804631327076074"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "861918496193927008213842976680284865534"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "619798984899756932515429268725270187751"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "161247899323408336671830209532311654676"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<i32>>::try_from",
    "hash": "12408105728699475344810104687063003770"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "466366853195706811917910078394781125317"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "383072198468491028710824443156715267659"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<u128>>::try_from",
    "hash": "10086573998280272666883448030814110964"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "148697437962905606913653240521116645751"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "48502607519426667569338095415249439404"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "290785426891951189215727161591376198150"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "6457758521918510711843756013721196486"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "1164531150921700006215811780871628022844"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<u128>>::try_from",
    "hash": "1274385123232947471014879437684757664120"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "6314249675691901942831025761300253617"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "165264129091861880186136254555229097559"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "1067749161952903389616356541010479252520"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "707344941213071920610887837351441205824"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "151822341781222117365671759970653370218"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<i128>>::try_from",
    "hash": "335494572156154425216378699558035136491"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "47132719673326635883368344536497086350"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<i32>>::try_from",
    "hash": "44652055448198233966750945215951545871"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<i64>>::try_from",
    "hash": "826607288955270772811482257396820607302"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "1275666415125366864913499071916982791128"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<u128>>::try_from",
    "hash": "210316891932058829212375269087818426156"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "41280453999333922545291953725177640139"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "1585788250846892973317326497637928601522"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "442009392889949918813610906124781146373"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "504931040448131804617555516030728268562"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "217957877447260114210642988526224054542"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<i128>>::try_from",
    "hash": "43916800206612961108179588684595845894"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "68189415595448143833975906167863663650"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<i32>>::try_from",
    "hash": "175932792461758132499393180528740309017"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<i64>>::try_from",
    "hash": "351601993133054313214049902311505326900"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "138234736290158318642385960814016245935"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "59723515428562107091080975560957282134"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "90581778828219067292455991201400418803"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "84105254657735070172127859668824304832"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "1045767639470618449817499479716206048063"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "20069051986071202266636147284612581108"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "127710422173885673999195248688985347415"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "605173813953591930710077979953312198684"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "430187069117792661111690233985085391999"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "1423491425785340539412583389480453359343"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "61491997106362081115448953402250522245"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "132164386914366661978690148872615994810"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<i32>>::try_from",
    "hash": "125664174814136875035850106452687855760"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "95539527937447306252007392171868718823"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "101281648492815555708418572527472442580"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "73744748513341243547494582893360850820"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "59291965901206900076995969151987575232"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "60321097069120122895978481133088925741"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "954087622639304471214799387919034773272"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<i32>>::try_from",
    "hash": "140803103862900534712899507027305662504"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<i64>>::try_from",
    "hash": "83025901533027457382447077441354809629"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "813782735237899247712072289698328229024"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "89544501442801723855780373438519118004"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "127560676341679998546136683589183784043"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "174557349173451826725962670190021715290"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "122492286256890936137836763825562312676"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "1419035773430815165414294210136237736266"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "1406052376180022428215017825323183900785"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<i128>>::try_from",
    "hash": "178462976049892909429913789970727383030"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "1666940268628542519114780260559166798678"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<i32>>::try_from",
    "hash": "499013690831186719716137403274920423332"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<i64>>::try_from",
    "hash": "51954997581849756398694842843189241119"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "35274774973705374738787627174155183602"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "1629780610810076828412671004268750181162"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<u128>>::try_from",
    "hash": "1566738375165383875210786335005034516044"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "12364030635206213711455159513097050708"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "13796466379647340443519191260163065246"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "160691290356028877168212000803906597257"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "945318657440698794112935586650535837939"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for i128>::try_from",
    "hash": "57332215216175682143749418825706612279"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for i16>::try_from",
    "hash": "135661464612935099024578153667946876561"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for i32>::try_from",
    "hash": "672244633318314557210004031367326228511"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for i64>::try_from",
    "hash": "278271362135115644617994338323174157326"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for i8>::try_from",
    "hash": "157957507334109287547543973283778371301"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for num::nonzero::NonZero<u128>>::try_from",
    "hash": "1595403695326653930313202514321151914499"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for u16>::try_from",
    "hash": "76553406888944474865503468346823992683"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for u32>::try_from",
    "hash": "129184721481646138903387477062011521864"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for u64>::try_from",
    "hash": "3173128069787095670257188181900050962"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for u8>::try_from",
    "hash": "84532336648828569145979153128160835249"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u16> for i16>::try_from",
    "hash": "18451542368111129307691596127196939723"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u16> for i8>::try_from",
    "hash": "181690701442839249268334871386059476939"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u16> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "78358814786771827482047425668971065299"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u16> for u8>::try_from",
    "hash": "431958222759024046615902237670435086372"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u32> for i16>::try_from",
    "hash": "183265229315889536017532498855707389276"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u32> for i32>::try_from",
    "hash": "759852156414737248511755057609752156606"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u32> for i8>::try_from",
    "hash": "158902917307954708315023490175289057183"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u32> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "670952491731947639813977518546520197914"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u32> for u16>::try_from",
    "hash": "141490897541753691963849345144419509446"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u32> for u8>::try_from",
    "hash": "997691888673995826812326854743930117049"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u64> for i16>::try_from",
    "hash": "63719799245528444193180022899801616945"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u64> for i32>::try_from",
    "hash": "1234169455594756707117606728985182623540"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u64> for i64>::try_from",
    "hash": "543575627001539470811422384893076970643"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u64> for i8>::try_from",
    "hash": "114073842630895118507046641116552654187"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u64> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "423917164867771358211101353848038830366"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u64> for u16>::try_from",
    "hash": "811554415972493756511080819475541218670"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u64> for u32>::try_from",
    "hash": "1522263702256196485210255200377386500474"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u64> for u8>::try_from",
    "hash": "92689986876534024435272597734550757874"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u8> for i8>::try_from",
    "hash": "88569041171201628845418150063489259012"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u8> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "123070029319593327071894072794706016851"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<usize> for isize>::try_from",
    "hash": "362347083875055263112839943619216221392"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<usize> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "7150499813270988691938123602937634502"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i128> for isize>::try_from",
    "hash": "4033948789137983777514840859967203612"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i128> for usize>::try_from",
    "hash": "1514764243439153597911722397688682933483"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i16> for usize>::try_from",
    "hash": "1206423323380894974814525729863658879749"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i32> for isize>::try_from",
    "hash": "99239517373702519855383656533600140"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i32> for usize>::try_from",
    "hash": "1601294861053505017581954277510734537"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i64> for isize>::try_from",
    "hash": "1074531437215324548416132708912002073872"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i64> for usize>::try_from",
    "hash": "1629237951619172494613512912627692435381"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i8> for usize>::try_from",
    "hash": "169955545728263894991380030287598049463"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for i128>::try_from",
    "hash": "146379547750171201592970558072826146848"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for i16>::try_from",
    "hash": "1738779815181392522113956186257995674583"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for i32>::try_from",
    "hash": "99658529063387671455898652470697756202"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for i64>::try_from",
    "hash": "1698601265467042607116126292092517178310"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for i8>::try_from",
    "hash": "92431971319528807816579539856961699677"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for u128>::try_from",
    "hash": "93471601783425491098007861264284854148"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for u16>::try_from",
    "hash": "1295032207764286694410252742421794055661"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for u32>::try_from",
    "hash": "54992589347055033649447304318638605326"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for u64>::try_from",
    "hash": "76872900857839605602465831828297436074"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for u8>::try_from",
    "hash": "24170321743216931748381989004591679950"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<u128> for isize>::try_from",
    "hash": "506736437419819875917096708881545893696"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<u128> for usize>::try_from",
    "hash": "49122704626954220705865192611008769435"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<u16> for isize>::try_from",
    "hash": "115920951211358453922589786995681302177"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<u32> for isize>::try_from",
    "hash": "1373797997030762842711357471558839585000"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<u32> for usize>::try_from",
    "hash": "174738820542010497823070345102824196978"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<u64> for isize>::try_from",
    "hash": "20054321882402467582072971713456962820"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<u64> for usize>::try_from",
    "hash": "1771327508445185541917209031555432793358"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for i128>::try_from",
    "hash": "15832264758658199599985182901513224871"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for i16>::try_from",
    "hash": "49889617133935086294757051517432251961"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for i32>::try_from",
    "hash": "1148227617764955896117138128328382274440"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for i64>::try_from",
    "hash": "3054266711627170871461992303278575904"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for i8>::try_from",
    "hash": "23480848983081359624076562068745522984"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for u128>::try_from",
    "hash": "73108653733398811367440736623711379"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for u16>::try_from",
    "hash": "25766193535890195209501582472198083943"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for u32>::try_from",
    "hash": "972810509204405036809177985934168314"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for u64>::try_from",
    "hash": "1820418291522865753218283456206022472387"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for u8>::try_from",
    "hash": "11222097851883566255542748304429478808"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::i128::check_float_to_int_unchecked",
    "hash": "726079433780871972118089782038700119377",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::i16::check_float_to_int_unchecked",
    "hash": "76846065561055953636861286331192677752",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::i32::check_float_to_int_unchecked",
    "hash": "1105840258289478376917496062547132550484",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::i64::check_float_to_int_unchecked",
    "hash": "1607076611541251598013816161143751354067",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::i8::check_float_to_int_unchecked",
    "hash": "127232198393010836642289269534061209082",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::isize::check_float_to_int_unchecked",
    "hash": "166057331918895372681798058056598137041",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::u128::check_float_to_int_unchecked",
    "hash": "919159616503615394714490857978644641280",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::u16::check_float_to_int_unchecked",
    "hash": "762567687678203972310208172292907155030",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::u32::check_float_to_int_unchecked",
    "hash": "547630039776911227011303061320692132287",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::u64::check_float_to_int_unchecked",
    "hash": "6099386460527358425752548945285578685",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::u8::check_float_to_int_unchecked",
    "hash": "127577644685073215278982252595795016341",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::usize::check_float_to_int_unchecked",
    "hash": "430210428455886362711680369326149647181",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::i128::check_float_to_int_unchecked",
    "hash": "1238503737569176298710969684680541114128",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::i16::check_float_to_int_unchecked",
    "hash": "124781082545870060694837878366712111795",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::i32::check_float_to_int_unchecked",
    "hash": "128028370812126816906769636064756715477",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::i64::check_float_to_int_unchecked",
    "hash": "165665243125173871492737109976075458007",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::i8::check_float_to_int_unchecked",
    "hash": "149553111406340368392186777842108849819",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::isize::check_float_to_int_unchecked",
    "hash": "1469844425945096498916047634334419397427",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::u128::check_float_to_int_unchecked",
    "hash": "733635885393604379613211839354327018409",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::u16::check_float_to_int_unchecked",
    "hash": "320662952608664908018025284089592123742",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::u32::check_float_to_int_unchecked",
    "hash": "832955836561587953311409149842976405716",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::u64::check_float_to_int_unchecked",
    "hash": "1257469705707121330616589411327459450738",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::u8::check_float_to_int_unchecked",
    "hash": "10751741823013818023296398191134491153",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::usize::check_float_to_int_unchecked",
    "hash": "114095987978617841117192053508032299428",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::i128::check_float_to_int_unchecked",
    "hash": "535717628773564927115028078573492383124",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::i16::check_float_to_int_unchecked",
    "hash": "122327743583945512562359896861349506593",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::i32::check_float_to_int_unchecked",
    "hash": "15914092602755463446443099414265087857",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::i64::check_float_to_int_unchecked",
    "hash": "149096560235410100961693381099705623699",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::i8::check_float_to_int_unchecked",
    "hash": "278565233543276133114574024160846867568",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::isize::check_float_to_int_unchecked",
    "hash": "69479829321471664513814416686077760409",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::u128::check_float_to_int_unchecked",
    "hash": "81600628266660511481556811809269509960",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::u16::check_float_to_int_unchecked",
    "hash": "161990425485029979841639393033572354820",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::u32::check_float_to_int_unchecked",
    "hash": "156922579332899417779699777769463300777",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::u64::check_float_to_int_unchecked",
    "hash": "789855232862000207016220004877566949897",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::u8::check_float_to_int_unchecked",
    "hash": "1561096723784424062412945495968473449070",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::usize::check_float_to_int_unchecked",
    "hash": "115600040551940030518265706276112820212",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::i128::check_float_to_int_unchecked",
    "hash": "1797053298718753334516989592935679000737",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::i16::check_float_to_int_unchecked",
    "hash": "605708909461772873713557109386036971072",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::i32::check_float_to_int_unchecked",
    "hash": "1809788755676603313612647733018503500769",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::i64::check_float_to_int_unchecked",
    "hash": "97485931389339903367038508051012279242",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::i8::check_float_to_int_unchecked",
    "hash": "81146701544910379369805920554754620569",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::isize::check_float_to_int_unchecked",
    "hash": "126319963542422124969754106204175646335",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::u128::check_float_to_int_unchecked",
    "hash": "4647838360162947036712375254210294809",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::u16::check_float_to_int_unchecked",
    "hash": "449049172364678259714685126827463384282",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::u32::check_float_to_int_unchecked",
    "hash": "39037417319840225437501193300680936469",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::u64::check_float_to_int_unchecked",
    "hash": "132220176709584074641660094302990916751",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::u8::check_float_to_int_unchecked",
    "hash": "95098321863824337398735446891713760654",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::usize::check_float_to_int_unchecked",
    "hash": "815110889484150127713188982799153450452",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::i16::check_nonzero_int_try_from_nonzero_int",
    "hash": "33502183819222800977108132602995397078",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::i16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "532833058229646781915350482927810354132",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::i32::check_nonzero_int_try_from_nonzero_int",
    "hash": "445403323990460835710727926652385027250",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::i32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "65044618523067439919143292796264620849",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::i64::check_nonzero_int_try_from_nonzero_int",
    "hash": "135336695896701290028101026314187689465",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::i64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "53194754482300137545059346217406010757",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::i8::check_nonzero_int_try_from_nonzero_int",
    "hash": "132346104529823078572407134966042573226",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::i8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "161166602310021405318259366185116571392",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::isize::check_nonzero_int_try_from_nonzero_int",
    "hash": "106011485744928260422690966005221971474",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::isize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "522446947059988366118324038601432444484",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u128::check_nonzero_int_try_from_nonzero_int",
    "hash": "100607840729214663704485033284651322979",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u128::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1030163802770795838013418278528298827489",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u16::check_nonzero_int_try_from_nonzero_int",
    "hash": "1538959564565152627915549179336830015241",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1637660393578888481615381835387079054667",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u32::check_nonzero_int_try_from_nonzero_int",
    "hash": "50125605378253218629794554171197747884",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "35858956928724262061972904335328873880",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u64::check_nonzero_int_try_from_nonzero_int",
    "hash": "157921200247662001311170155547693425072",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "61329495900783304264318443719001688353",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "113520416699910517432158993330272446140",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "62242623473500563233830424083306572675",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::usize::check_nonzero_int_try_from_nonzero_int",
    "hash": "897235017010718917213058467262668165981",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::usize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "409049114064587640716324982618597166613",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::i8::check_nonzero_int_try_from_nonzero_int",
    "hash": "251213171014043017610684364835323538964",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::i8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "168300963029672992556503894005749518626",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u128::check_nonzero_int_try_from_nonzero_int",
    "hash": "1468693601454442361113535937613628635291",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u128::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "3821889595451515532761937995896360578",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u16::check_nonzero_int_try_from_nonzero_int",
    "hash": "1375124977519168939418061110085906120860",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "48665411894923492011397904025275275437",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u32::check_nonzero_int_try_from_nonzero_int",
    "hash": "173603459418280417634589538853825135594",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "122939116149443849406718452297162616455",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u64::check_nonzero_int_try_from_nonzero_int",
    "hash": "91009212744280129603745042505451286684",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "123197378974324478984732940403243594359",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "109998704370902495931600622735617349570",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "30224413184817977326011274770881356026",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::usize::check_nonzero_int_try_from_nonzero_int",
    "hash": "1198914976074246464118087354732367501744",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::usize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "163115333811055136041847756016620607120",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::i16::check_nonzero_int_try_from_nonzero_int",
    "hash": "49185428881162788487611411923054033087",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::i16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1603828079696624446111118954106122304982",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::i8::check_nonzero_int_try_from_nonzero_int",
    "hash": "1211405342368609744315009785370150465861",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::i8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "180747587621074222678710515657840842549",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::isize::check_nonzero_int_try_from_nonzero_int_infallible",
    "hash": "1625574235738604777616676345505955556709",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u128::check_nonzero_int_try_from_nonzero_int",
    "hash": "133371611329172307489563878756878357836",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u128::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "141485777525648219776803581007705122986",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u16::check_nonzero_int_try_from_nonzero_int",
    "hash": "12117681902157542588482361699360019263",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "221388800593065061111659292441162094296",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u32::check_nonzero_int_try_from_nonzero_int",
    "hash": "14618355773571949811969905742320445071",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "623145809303387986715849276382891479104",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u64::check_nonzero_int_try_from_nonzero_int",
    "hash": "130685204942017937546376437766566677395",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "31325906550349433627213235562995821889",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "293111151978988746116323335363669092252",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "18458632251382896231212221996033136605",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::usize::check_nonzero_int_try_from_nonzero_int",
    "hash": "911861544645970582811929629109619626815",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::usize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "82153307263536721178229916067121313994",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::i16::check_nonzero_int_try_from_nonzero_int",
    "hash": "13111245731415530776397069872527930589",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::i16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "67839089504575125572798936743191201847",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::i32::check_nonzero_int_try_from_nonzero_int",
    "hash": "114876010293262441291516588751456699332",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::i32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1837855798855454332113116889476428836307",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::i8::check_nonzero_int_try_from_nonzero_int",
    "hash": "79283287764626779199734727819415402319",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::i8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "7494947887627824913582153129041542366",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::isize::check_nonzero_int_try_from_nonzero_int_infallible",
    "hash": "1085484342523608202716769482137506816035",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u128::check_nonzero_int_try_from_nonzero_int",
    "hash": "41585458823933120039730549056716301765",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u128::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "172433699046798121548244666583698510049",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u16::check_nonzero_int_try_from_nonzero_int",
    "hash": "326111976983795281711313782956491698273",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "79628841997133135847475398269336443049",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u32::check_nonzero_int_try_from_nonzero_int",
    "hash": "105177452313712520057940323854405880818",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "147671699244073516254883727910561161027",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u64::check_nonzero_int_try_from_nonzero_int",
    "hash": "185934529329350798313829520746991452785",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "116234797502602162496365573134783237921",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "1590879323845830468617644967320971315898",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1028515174046371083713262265409366018545",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::usize::check_nonzero_int_try_from_nonzero_int",
    "hash": "94989154888615495579895484484510177599",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::usize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "658195127307424907910508737812615013336",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u128::check_nonzero_int_try_from_nonzero_int",
    "hash": "286437098139465791514596385731422736372",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u128::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "11170476190418347974450153156358893662",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u16::check_nonzero_int_try_from_nonzero_int",
    "hash": "19713046659396107653259889936645574008",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "124839751077178664303049722058234122419",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u32::check_nonzero_int_try_from_nonzero_int",
    "hash": "163505795934829331603841215117718707331",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "256647545844771924918315964123267447561",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u64::check_nonzero_int_try_from_nonzero_int",
    "hash": "527066215847970743312035131725393168916",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "115170857375256811909265095834732078031",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "1738697792462769450611779754845231494320",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "166845318144477595412091629906593820615",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::usize::check_nonzero_int_try_from_nonzero_int",
    "hash": "167613253825813693806770778866516596356",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::usize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "184006525795766865075600678330715241736",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i128::check_nonzero_int_try_from_nonzero_int",
    "hash": "25989833852280229767924650105791799281",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i128::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "152272230545904100614499580593586323868",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i16::check_nonzero_int_try_from_nonzero_int",
    "hash": "66703458217733556206336695144248002171",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "378258572044460922718278002376707441616",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i32::check_nonzero_int_try_from_nonzero_int",
    "hash": "177196428277431575467346079616198764239",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "984730567877227954613148989614791842145",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i64::check_nonzero_int_try_from_nonzero_int",
    "hash": "23105168458388265437810675798951901305",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "41372981588030994941890674165536773730",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i8::check_nonzero_int_try_from_nonzero_int",
    "hash": "12177375205944208403337644792175530935",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "131050465957264728024710671666852592170",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::isize::check_nonzero_int_try_from_nonzero_int",
    "hash": "767857954732417938112580162939664339712",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::isize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "113598047362617483037214138249261153945",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::u16::check_nonzero_int_try_from_nonzero_int",
    "hash": "933301133677733168316277951085520000615",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::u16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "407179298103668181612938857840614095937",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::u32::check_nonzero_int_try_from_nonzero_int",
    "hash": "845367940927320338614984724865914734565",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::u32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "100476385752138021435828769920197576147",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::u64::check_nonzero_int_try_from_nonzero_int",
    "hash": "4842596957118232572398793130623803193",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::u64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "13130476703209641233467437460443852004",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "65163804557565685074894985702867840667",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "49638808782943726893974013928801601655",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::usize::check_nonzero_int_try_from_nonzero_int",
    "hash": "1220324652201668430717789571698437598109",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::usize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "147114712990194377541882991821167352652",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u16::i16::check_nonzero_int_try_from_nonzero_int",
    "hash": "28999652315671583895869668165919085744",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u16::i16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "98537099961477931614964355511315695266",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u16::i8::check_nonzero_int_try_from_nonzero_int",
    "hash": "85837787269439604414480518923411554838",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u16::i8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "26382933047335219464173580193645741198",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u16::isize::check_nonzero_int_try_from_nonzero_int_infallible",
    "hash": "121287339340536836086965420767821455649",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u16::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "1418195117864885001012444696111906299780",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u16::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1226939384012512870915173477084188629041",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::i16::check_nonzero_int_try_from_nonzero_int",
    "hash": "72767916625924741963349460140196756982",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::i16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1097197263313341118118186223563645784807",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::i32::check_nonzero_int_try_from_nonzero_int",
    "hash": "69955268609412890487321217807021907745",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::i32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "74992196523589153586625124495871373549",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::i8::check_nonzero_int_try_from_nonzero_int",
    "hash": "1076980690789898143017981665507932968782",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::i8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "544951506057951884811586102021349234223",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::isize::check_nonzero_int_try_from_nonzero_int_infallible",
    "hash": "899554743301565666213619706221616848509",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::u16::check_nonzero_int_try_from_nonzero_int",
    "hash": "167274898867072685255073938459949986687",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::u16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "102447849427826760095648549824386969015",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "174184473696224301954441193585297676799",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "508588043577818463311992761899978066821",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::usize::check_nonzero_int_try_from_nonzero_int_infallible",
    "hash": "124967985399330299338988675838229615747",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::i16::check_nonzero_int_try_from_nonzero_int",
    "hash": "1134857767376381053017936446500923441202",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::i16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "54809662407410145817751055069301896385",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::i32::check_nonzero_int_try_from_nonzero_int",
    "hash": "43616930580902311109616437970223861336",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::i32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "98915675952512895896117782821223219843",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::i64::check_nonzero_int_try_from_nonzero_int",
    "hash": "135723796291514177606022347144836007960",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::i64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1810236101380511645013661877870432864947",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::i8::check_nonzero_int_try_from_nonzero_int",
    "hash": "841023585787464605910629175855027340778",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::i8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "21737740533028377316066931721480189189",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::isize::check_nonzero_int_try_from_nonzero_int",
    "hash": "31001094859710801871881000875599431712",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::isize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "82309263583133918466218358293233941527",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::u16::check_nonzero_int_try_from_nonzero_int",
    "hash": "27729175296014676566946962388358429",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::u16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "62841534333702411817614877710719516150",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::u32::check_nonzero_int_try_from_nonzero_int",
    "hash": "838891846961923981016256104947317835192",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::u32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1837278078624214298016706299450111821690",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "164676548516521762405738067591875319906",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1330723185466446470415744623087546503827",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::usize::check_nonzero_int_try_from_nonzero_int_infallible",
    "hash": "1216198529083613915115926585783636994949",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<() as default::Default>::default",
    "hash": "34007422583350565266331217997887226878"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<ascii::ascii_char::AsciiChar as default::Default>::default",
    "hash": "1269793736544104207112095330690687044137"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<bool as default::Default>::default",
    "hash": "97113273368390197422399019494646759870"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<char as default::Default>::default",
    "hash": "1745631581736053538713989223609175157472"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<f128 as default::Default>::default",
    "hash": "73435203943850270461466813298534963252"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<f16 as default::Default>::default",
    "hash": "1622206036435330812911107287461629669262"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<f32 as default::Default>::default",
    "hash": "58324239745448176079354504889339599975"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<f64 as default::Default>::default",
    "hash": "1692730864480687644115505133513487257960"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<i128 as default::Default>::default",
    "hash": "4785567300361512032643061108134310925"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<i16 as default::Default>::default",
    "hash": "1179818934459369976111773881948486975797"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<i32 as default::Default>::default",
    "hash": "1002172265968274352711498511734125215469"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<i64 as default::Default>::default",
    "hash": "119375585161096607021051354898639892017"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<i8 as default::Default>::default",
    "hash": "176821918491003468227626359749537396864"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<isize as default::Default>::default",
    "hash": "60732786507886163233768065239918067122"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<u128 as default::Default>::default",
    "hash": "147224602796396873381982155428707872800"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<u16 as default::Default>::default",
    "hash": "465632265339412911812289834689314255991"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<u32 as default::Default>::default",
    "hash": "176721295741621449156391608664984007411"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<u64 as default::Default>::default",
    "hash": "67903923256944088678414142369330925193"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<u8 as default::Default>::default",
    "hash": "811783093625119632316445809894821812924"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<usize as default::Default>::default",
    "hash": "526522679742031129215701282242820325587"
  },
  {
    "crate": "core",
    "file": "core/src/escape.rs",
    "func": "<escape::AlwaysEscaped as clone::Clone>::clone",
    "hash": "5842528753916618278220424385606769466"
  },
  {
    "crate": "core",
    "file": "core/src/escape.rs",
    "func": "<escape::MaybeEscaped as clone::Clone>::clone",
    "hash": "179049050490546689751700098731696226443"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "<&ffi::c_str::CStr as default::Default>::default",
    "hash": "874123654923834160810537931725050914565"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "<ffi::c_str::FromBytesUntilNulError as clone::Clone>::clone",
    "hash": "87428115072661550129081655070802804323"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "<ffi::c_str::FromBytesUntilNulError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "9591374333009235593271208878911185570"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "<ffi::c_str::FromBytesUntilNulError as cmp::PartialEq>::eq",
    "hash": "5652746276482526532951808077332295579"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "<ffi::c_str::FromBytesWithNulError as clone::Clone>::clone",
    "hash": "94602514312753425407799669423045651165"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "<ffi::c_str::FromBytesWithNulError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1824658960251005138113370366670541980583"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "<ffi::c_str::FromBytesWithNulError as cmp::PartialEq>::eq",
    "hash": "175462240773915972574804831616207090249"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_as_ptr",
    "hash": "1680233598840224475413986781724405685613",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_bytes",
    "hash": "1453016632008080286913841628575140801631",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_count_bytes",
    "hash": "142371171094242745811754656930189310795",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_from_bytes_until_nul",
    "hash": "13034615312638416745910743686252632181",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_from_bytes_with_nul",
    "hash": "148329293145488808654535632416634350680",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_from_bytes_with_nul_unchecked",
    "hash": "142330489766255322762254370402909379768",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_from_ptr_contract",
    "hash": "27074657008519263596433834811894840528",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_is_empty",
    "hash": "175592978590024634117921292658976198044",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_strlen_contract",
    "hash": "53626718322224190315683669763605021570",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_to_bytes",
    "hash": "965223405384427058214000790308825532881",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_to_bytes_with_nul",
    "hash": "118641213831700802538675681592508134000",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_to_str",
    "hash": "181246037422064193384753799186715453176",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/builders.rs",
    "func": "<fmt::builders::PadAdapterState as default::Default>::default",
    "hash": "81986060615313457313520860313503674379"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/float.rs",
    "func": "<f16 as fmt::float::GeneralFormat>::already_rounded_value_should_use_exponential",
    "hash": "851745407749290379018406218338085803070"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/float.rs",
    "func": "<f32 as fmt::float::GeneralFormat>::already_rounded_value_should_use_exponential",
    "hash": "1074043478732182391112926816275990419436"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/float.rs",
    "func": "<f64 as fmt::float::GeneralFormat>::already_rounded_value_should_use_exponential",
    "hash": "784694590963647726113650322247217948464"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Alignment as clone::Clone>::clone",
    "hash": "1930369643134351532599693691908151985"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Alignment as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1020126266642071054913472207007823295715"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Alignment as cmp::PartialEq>::eq",
    "hash": "138791160527873869081784178737256895373"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::DebugAsHex as clone::Clone>::clone",
    "hash": "72208844353626943052934295674922735023"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::DebugAsHex as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "12780908826539783988363338530004955797"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::DebugAsHex as cmp::PartialEq>::eq",
    "hash": "13643550569496295414399782017898620453"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Error as clone::Clone>::clone",
    "hash": "171074186052613514879790254848816336011"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Error as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "106517918667363707052261391735220907356"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Error as cmp::Ord>::cmp",
    "hash": "112191534329724873754391363740074601252"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Error as cmp::PartialEq>::eq",
    "hash": "117415858753975547446665330806920238181"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Error as cmp::PartialOrd>::partial_cmp",
    "hash": "293749126067864311313789127599878053988"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Error as default::Default>::default",
    "hash": "326393976186220405615721807704106422290"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::FormattingOptions as clone::Clone>::clone",
    "hash": "1163979745846561664418378404682540817643"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::FormattingOptions as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "979338618432983950012547760744686033549"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::FormattingOptions as cmp::PartialEq>::eq",
    "hash": "133931176326902353367209293050489626987"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::FormattingOptions as default::Default>::default",
    "hash": "658660712720961258213951507188837886297"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Sign as clone::Clone>::clone",
    "hash": "90874146393869501127809933143331436743"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Sign as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "765900809292437332013261180106698574193"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Sign as cmp::PartialEq>::eq",
    "hash": "148003910060739080037599170770526304174"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<str as fmt::Debug>::fmt::needs_escape",
    "hash": "179685553147709381169171195521453669841"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::align",
    "hash": "7183820055713762746363169081446514126"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::alternate",
    "hash": "174616867597443091474034826899928583474"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::debug_as_hex",
    "hash": "103288923899173789567976494321237308664"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::fill",
    "hash": "1692910407746371913718143362461637207110"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::get_align",
    "hash": "9007521356456792533806907033713747580"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::get_alternate",
    "hash": "846166874642796147413812718364271769170"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::get_debug_as_hex",
    "hash": "109970252845503685424744068744556592050"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::get_fill",
    "hash": "28604457418056247962267586104087196364"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::get_precision",
    "hash": "172140117843934269071100695499597161982"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::get_sign",
    "hash": "170302555131953217375919710574080836661"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::get_sign_aware_zero_pad",
    "hash": "1032211682820222384413209611390579221735"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::get_width",
    "hash": "52500763207302495589956168323478942233"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::new",
    "hash": "4960461046229976118108876182482238045"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::precision",
    "hash": "10789478559275003082674685827221852248"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::sign",
    "hash": "1801964302792114074312984742506803394070"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::sign_aware_zero_pad",
    "hash": "179307403029012602534392180041355274244"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::width",
    "hash": "753832025317161869510977234662067625878"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::PostPadding::new",
    "hash": "398351056859449483913563186545567727466"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::<impl i128>::format_into",
    "hash": "5618182372601052016641969857930816776"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::<impl u128>::format_into",
    "hash": "116916283924905640455285261552467314686"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::div_rem_1e16",
    "hash": "59588140090316212014221212472268455818"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::imp::<impl i16>::format_into",
    "hash": "75709342159106397258661549510927299949"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::imp::<impl i32>::format_into",
    "hash": "140676525105180788436520052748508452495"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::imp::<impl i64>::format_into",
    "hash": "129495717864302497204804275167060140917"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::imp::<impl i8>::format_into",
    "hash": "589668161462162217114347336039094301426"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::imp::<impl isize>::format_into",
    "hash": "965102420176753892214811868858923313887"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::imp::<impl u16>::format_into",
    "hash": "170017451470306736787511409924851505674"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::imp::<impl u32>::format_into",
    "hash": "403727295689625878412220940640335371899"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::imp::<impl u64>::format_into",
    "hash": "1686651305699466985613392180581197179806"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::imp::<impl u8>::format_into",
    "hash": "1648129814697406498261193075378663706"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::imp::<impl usize>::format_into",
    "hash": "146608582301487036775643903362526900390"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/rt.rs",
    "func": "<fmt::rt::Count as clone::Clone>::clone",
    "hash": "1554088839245077136510151124508746428733"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/rt.rs",
    "func": "<fmt::rt::Placeholder as clone::Clone>::clone",
    "hash": "63597180392563451051069991250281351682"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/rt.rs",
    "func": "fmt::rt::Argument::<'_>::from_usize",
    "hash": "70377232471128639649303697310799707355"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::Sip13Rounds as clone::Clone>::clone",
    "hash": "1104163013065108252012527246222564001253"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::Sip13Rounds as default::Default>::default",
    "hash": "71024570808190257589295996218145184325"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::Sip13Rounds as hash::sip::Sip>::c_rounds",
    "hash": "163776963447027542366013487080211904877"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::Sip13Rounds as hash::sip::Sip>::d_rounds",
    "hash": "14668592018185383061227320539168361870"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::Sip24Rounds as clone::Clone>::clone",
    "hash": "1079646048113631268211479430269231609065"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::Sip24Rounds as default::Default>::default",
    "hash": "14823643028052029119441293659492769535"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::Sip24Rounds as hash::sip::Sip>::c_rounds",
    "hash": "57645884807725938802234724861549024869"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::Sip24Rounds as hash::sip::Sip>::d_rounds",
    "hash": "183217033607494512567296500188313823890"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::SipHasher as clone::Clone>::clone",
    "hash": "93948742315428612379557796234542196204"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::SipHasher as default::Default>::default",
    "hash": "137798405421195991881467035531719510403"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::SipHasher as hash::Hasher>::finish",
    "hash": "4516752240514227657091632528297470511"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::SipHasher13 as clone::Clone>::clone",
    "hash": "1461738931035793229913553534843785018533"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::SipHasher13 as default::Default>::default",
    "hash": "794755360944475058710056361763486199425"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::SipHasher13 as hash::Hasher>::finish",
    "hash": "1352927153465871293416642557654092221838"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::SipHasher24 as clone::Clone>::clone",
    "hash": "124895290382739822298420522879387326013"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::SipHasher24 as default::Default>::default",
    "hash": "1554038128847289597217480548674988257209"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::State as clone::Clone>::clone",
    "hash": "114467121091522395751435869652266912369"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "hash::sip::SipHasher13::new",
    "hash": "1397418372645629505414475577164745558400"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "hash::sip::SipHasher13::new_with_keys",
    "hash": "163242560720530940153418761772316596453"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "hash::sip::SipHasher::new",
    "hash": "176915448371237187187727523878898680450"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "hash::sip::SipHasher::new_with_keys",
    "hash": "539836302076479601417138968118632292728"
  },
  {
    "crate": "core",
    "file": "core/src/hint.rs",
    "func": "hint::assert_unchecked",
    "hash": "6962362284417680556415378392413733050"
  },
  {
    "crate": "core",
    "file": "core/src/hint.rs",
    "func": "hint::cold_path",
    "hash": "16392690540146237040910799779868652709"
  },
  {
    "crate": "core",
    "file": "core/src/hint.rs",
    "func": "hint::likely",
    "hash": "181482167990866638179327465910727112043"
  },
  {
    "crate": "core",
    "file": "core/src/hint.rs",
    "func": "hint::spin_loop",
    "hash": "175236260907353118956979364930330630259"
  },
  {
    "crate": "core",
    "file": "core/src/hint.rs",
    "func": "hint::unlikely",
    "hash": "13839786837928674380824344641290470077"
  },
  {
    "crate": "core",
    "file": "core/src/hint.rs",
    "func": "hint::unreachable_unchecked",
    "hash": "1415106497522421883676194742336801697"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&bool as ops::bit::BitAnd<bool>>::bitand",
    "hash": "30198916002976542106519383074498473229"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&bool as ops::bit::BitAnd>::bitand",
    "hash": "149726432661941012841297356226701119430"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&bool as ops::bit::BitOr<bool>>::bitor",
    "hash": "580748047223400049615658800837973716077"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&bool as ops::bit::BitOr>::bitor",
    "hash": "2507167844270719911409577224799299522"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&bool as ops::bit::BitXor<bool>>::bitxor",
    "hash": "1058788989414364151311164712053811450300"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&bool as ops::bit::BitXor>::bitxor",
    "hash": "636886664426249497216143143734678711"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&bool as ops::bit::Not>::not",
    "hash": "801765893340550108411093272984453482374"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Add<f128>>::add",
    "hash": "14607330535173983345110673420579562205"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Add>::add",
    "hash": "43693930733865557919980655657768586896"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Div<f128>>::div",
    "hash": "165759492977500845674181249245530021318"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Div>::div",
    "hash": "1395269995391731643816361417229257950343"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Mul<f128>>::mul",
    "hash": "937393537330320601312101932973261810096"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Mul>::mul",
    "hash": "54378920911427035314701255885275896488"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Neg>::neg",
    "hash": "394423065267816652718054361730852442460"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Rem<f128>>::rem",
    "hash": "856963678645497314013026592807985960231"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Rem>::rem",
    "hash": "1547391027819502554445626708441535188"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Sub<f128>>::sub",
    "hash": "1312960347591011848017316059755306187502"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Sub>::sub",
    "hash": "70913936646483920962551670916797348664"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Add<f16>>::add",
    "hash": "1518544050861187998410991988279585893347"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Add>::add",
    "hash": "103115856711937122907130064416802340474"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Div<f16>>::div",
    "hash": "397676938553692189318205461925879349552"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Div>::div",
    "hash": "49353684721349766954219920062440487607"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Mul<f16>>::mul",
    "hash": "642791538068690016314414003823417167466"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Mul>::mul",
    "hash": "33397512498167917877654842425212810295"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Neg>::neg",
    "hash": "85694429161619584916171382546399499991"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Rem<f16>>::rem",
    "hash": "51298458272709247277813577933910865248"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Rem>::rem",
    "hash": "889572431355678288015007538431417159693"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Sub<f16>>::sub",
    "hash": "12804566461415793661296811603803773576"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Sub>::sub",
    "hash": "1775650084023323812111287391806817614072"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Add<f32>>::add",
    "hash": "819114713403531897016766014803264020682"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Add>::add",
    "hash": "1381915411273740277514139927899713919194"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Div<f32>>::div",
    "hash": "1198557465065544389813819428220286851988"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Div>::div",
    "hash": "161734663496156265532680160663635211286"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Mul<f32>>::mul",
    "hash": "114416838768228613976884880590266833113"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Mul>::mul",
    "hash": "134433280961495968365749748302845790558"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Neg>::neg",
    "hash": "420701478371552465615673252871513215921"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Rem<f32>>::rem",
    "hash": "87602053706245178701421791602792249439"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Rem>::rem",
    "hash": "111198496606917153377377962209785949130"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Sub<f32>>::sub",
    "hash": "117060116552421956541920207874643437153"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Sub>::sub",
    "hash": "122376253317635974588934409289529834357"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Add<f64>>::add",
    "hash": "1289563298439215006017200719361366554733"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Add>::add",
    "hash": "1545467351319816495211348846997497099103"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Div<f64>>::div",
    "hash": "136226338570985839061843013871874865556"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Div>::div",
    "hash": "140801130159310395614721440006336150722"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Mul<f64>>::mul",
    "hash": "840564797163611758512095270548615070236"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Mul>::mul",
    "hash": "159712557707580949224238413837194974605"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Neg>::neg",
    "hash": "2282011715756519049490894630621370591"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Rem<f64>>::rem",
    "hash": "41298423586360136798052560308035769717"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Rem>::rem",
    "hash": "137905200286923895556893979882418067801"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Sub<f64>>::sub",
    "hash": "148996248639418979679135796677224378071"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Sub>::sub",
    "hash": "942367861012716489813062009787796189665"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Add<i128>>::add",
    "hash": "10391902533421166738750213197112217395"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Add>::add",
    "hash": "832594674791021679514442585927924588736"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Div<i128>>::div",
    "hash": "114317876617161220897103388394353292484"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Div>::div",
    "hash": "335661006923872856411421850412589544313"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Mul<i128>>::mul",
    "hash": "61713814130229622974783403076407072871"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Mul>::mul",
    "hash": "163102848664168206211325945204040053035"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Neg>::neg",
    "hash": "160458408559579061397000285785385280319"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Rem<i128>>::rem",
    "hash": "26632295734421806198966312704019174000"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Rem>::rem",
    "hash": "124325422069039523782415822009206141622"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Sub<i128>>::sub",
    "hash": "153031473827211114005464607129595158591"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Sub>::sub",
    "hash": "481662048887486371656179026575123048"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::BitAnd<i128>>::bitand",
    "hash": "46745873721100592773706426213297795142"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::BitAnd>::bitand",
    "hash": "13021371005650130479367473832524989194"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::BitOr<i128>>::bitor",
    "hash": "178676037045623210268576632665689840"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::BitOr>::bitor",
    "hash": "827708574593240937172795085673669761"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::BitXor<i128>>::bitxor",
    "hash": "149158213939388264777642020644692077005"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::BitXor>::bitxor",
    "hash": "223430582074632357018373612295081975060"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Not>::not",
    "hash": "47616367282816038439259358258333934667"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&i16>>::shl",
    "hash": "576722938105406976912810709383945291622"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&i32>>::shl",
    "hash": "26637628455623450815527843475603830806"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&i64>>::shl",
    "hash": "127970294528806029796542124102698793406"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&i8>>::shl",
    "hash": "81528052013653522253209251866325907619"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&isize>>::shl",
    "hash": "523816763711867919117215291056335373490"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&u128>>::shl",
    "hash": "124333390814100281404785154876724100773"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&u16>>::shl",
    "hash": "70412657910364605694696625158594310515"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&u32>>::shl",
    "hash": "397865040843327819111550422789249946720"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&u64>>::shl",
    "hash": "57497438191717731861475585374470222485"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&u8>>::shl",
    "hash": "71536946140959468898897462238358508294"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&usize>>::shl",
    "hash": "66954461997409518115352697497078007138"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<i128>>::shl",
    "hash": "58931011180259013977041933776625368613"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<i16>>::shl",
    "hash": "57620777351772083711940521907085636372"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<i32>>::shl",
    "hash": "1051718923285868668116144834379889421410"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<i64>>::shl",
    "hash": "515269430802887698313913301586893156715"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<i8>>::shl",
    "hash": "26870492299732736935154251111962328306"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<isize>>::shl",
    "hash": "10228127099227584486983796632732929923"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<u128>>::shl",
    "hash": "116222421562374223373284593051319796264"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<u16>>::shl",
    "hash": "7255728393621542815159905491535191832"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<u32>>::shl",
    "hash": "679832209443784315017873400054651118981"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<u64>>::shl",
    "hash": "507010451399988006710128744542894269676"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<u8>>::shl",
    "hash": "101980689012552870492296643582710498410"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<usize>>::shl",
    "hash": "23420727086096370513681961918458725558"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl>::shl",
    "hash": "845971465300152531812761404728728991145"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&i16>>::shr",
    "hash": "1795591391526478646810996243956515506635"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&i32>>::shr",
    "hash": "891961557737938330811509531992038670647"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&i64>>::shr",
    "hash": "1251667093086336443518322241805393337271"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&i8>>::shr",
    "hash": "1080338921861575556415449562576551521973"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&isize>>::shr",
    "hash": "169948327540135668567599247398955628641"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&u128>>::shr",
    "hash": "817606217340461589512658605065702265012"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&u16>>::shr",
    "hash": "25902620620837424312138132045741165562"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&u32>>::shr",
    "hash": "684094698223526362915450056985617825788"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&u64>>::shr",
    "hash": "140219860969842724807865366439375814749"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&u8>>::shr",
    "hash": "308718803898760825714291377300181018452"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&usize>>::shr",
    "hash": "432789105308362480614615986680024148657"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<i128>>::shr",
    "hash": "971779726311401079910008921618304006874"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<i16>>::shr",
    "hash": "89834844656498515932057229835903613992"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<i32>>::shr",
    "hash": "12179856177594533613662350192378017408"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<i64>>::shr",
    "hash": "40073749812509907574005587737100963563"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<i8>>::shr",
    "hash": "440780086663660733014774701491399486512"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<isize>>::shr",
    "hash": "182088250441570603422630524635462857316"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<u128>>::shr",
    "hash": "387693787556494335512909044124532825342"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<u16>>::shr",
    "hash": "34884669497757640806515084887020077859"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<u32>>::shr",
    "hash": "172037335941770859754905328128574138615"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<u64>>::shr",
    "hash": "836926539099451969512941081369880301827"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<u8>>::shr",
    "hash": "108100290183357660697424951938094372091"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<usize>>::shr",
    "hash": "234639371447434317011885689222326453220"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr>::shr",
    "hash": "1147179115595518222615676769092580718088"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Add<i16>>::add",
    "hash": "22973830317947593024332688587450450193"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Add>::add",
    "hash": "53245774328406326904806112541718268251"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Div<i16>>::div",
    "hash": "15124981278895610847352786637707897684"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Div>::div",
    "hash": "1089060127972936206610177472915065078219"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Mul<i16>>::mul",
    "hash": "1595338203657994640617296084489428286705"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Mul>::mul",
    "hash": "640338194822456533214505479440935516316"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Neg>::neg",
    "hash": "61457271683391748363576303739135211279"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Rem<i16>>::rem",
    "hash": "16065135598316871715449506490180889505"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Rem>::rem",
    "hash": "1265301665121487312712207321896980545791"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Sub<i16>>::sub",
    "hash": "33482891826277398311704361908328220548"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Sub>::sub",
    "hash": "174988334509977311255332808119811636863"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::BitAnd<i16>>::bitand",
    "hash": "54579304439266861264028460125788974793"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::BitAnd>::bitand",
    "hash": "1384291668544727436912797155090650502213"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::BitOr<i16>>::bitor",
    "hash": "95647175070617431222837554787324468514"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::BitOr>::bitor",
    "hash": "33622909694952911974605693149318569430"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::BitXor<i16>>::bitxor",
    "hash": "187952945452273163813914124917927324829"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::BitXor>::bitxor",
    "hash": "5518868572732046262572223791770830286"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Not>::not",
    "hash": "111380734293756406566383445465020064211"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&i128>>::shl",
    "hash": "18261745239550273430389513193047032047"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&i32>>::shl",
    "hash": "138328743730274712863946671945171077473"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&i64>>::shl",
    "hash": "1507047202394090246218296340901662327122"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&i8>>::shl",
    "hash": "1456370896747121926918322440066946758112"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&isize>>::shl",
    "hash": "1673955859439496053616190683232260104306"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&u128>>::shl",
    "hash": "837030531318202768316493945364163644305"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&u16>>::shl",
    "hash": "154586680972331597309926697789852643161"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&u32>>::shl",
    "hash": "26465213199896725457709041887130029738"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&u64>>::shl",
    "hash": "172762641168253923004451848933143101946"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&u8>>::shl",
    "hash": "59406410582092717113597534099951643834"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&usize>>::shl",
    "hash": "165446674110523233124486932311603702786"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<i128>>::shl",
    "hash": "14468488721511727146033305555327738574"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<i16>>::shl",
    "hash": "13414411082044022788868616293032141817"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<i32>>::shl",
    "hash": "73477917188603661751253131575789159502"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<i64>>::shl",
    "hash": "1477012738048319893813396678046325057783"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<i8>>::shl",
    "hash": "608694506903489509017032779779734596184"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<isize>>::shl",
    "hash": "114643569927352439742537494176003453518"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<u128>>::shl",
    "hash": "1308996929500961773713633146590372957303"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<u16>>::shl",
    "hash": "63288071722449046094600394352739576108"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<u32>>::shl",
    "hash": "1044694989923928507712314365851119182139"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<u64>>::shl",
    "hash": "739692948161001025715732102307120951412"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<u8>>::shl",
    "hash": "72405206033504786098855456991813738875"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<usize>>::shl",
    "hash": "96609476624198946958268066620997759703"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl>::shl",
    "hash": "304017454761933752915783100760995675977"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&i128>>::shr",
    "hash": "318672771422442021816132881810628283463"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&i32>>::shr",
    "hash": "76920488488348108422428758363999778543"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&i64>>::shr",
    "hash": "4038231236109648107123490772116844891"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&i8>>::shr",
    "hash": "155384444644559448023704675307601049839"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&isize>>::shr",
    "hash": "98185568363298867595978612560898745100"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&u128>>::shr",
    "hash": "1526251674930587395313473124274489791220"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&u16>>::shr",
    "hash": "117693488321036433371576495495175384702"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&u32>>::shr",
    "hash": "66349226080214411454659483458221506925"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&u64>>::shr",
    "hash": "63519384021498683445135992045120444003"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&u8>>::shr",
    "hash": "87554071914096946162876289832474889574"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&usize>>::shr",
    "hash": "1050535669528077586318258997407654398847"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<i128>>::shr",
    "hash": "88993318026920160215386446118687177188"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<i16>>::shr",
    "hash": "3278808773968543185695940627759467839"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<i32>>::shr",
    "hash": "763641291042944023411306614262289919330"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<i64>>::shr",
    "hash": "24902338414999211465271498912203432793"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<i8>>::shr",
    "hash": "1227142108772046319811789467156388719785"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<isize>>::shr",
    "hash": "63293082178990904343970672230275610033"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<u128>>::shr",
    "hash": "1723238738866117363616705440530908128127"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<u16>>::shr",
    "hash": "25334866079705856653983500845799337854"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<u32>>::shr",
    "hash": "158997038828006975543125689017009731826"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<u64>>::shr",
    "hash": "1415125655894973604415330497661123053408"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<u8>>::shr",
    "hash": "1809158843232064225516107428330384641021"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<usize>>::shr",
    "hash": "14156090617383576560329396010787286170"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr>::shr",
    "hash": "199312953815998242210734904397586368035"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Add<i32>>::add",
    "hash": "1646016742198820570813305933378717977187"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Add>::add",
    "hash": "1378125194707347058710359697728485135915"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Div<i32>>::div",
    "hash": "712720761378380657917832130770586561071"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Div>::div",
    "hash": "691260060021289229115797052592732486156"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Mul<i32>>::mul",
    "hash": "4425338319816054412067725099350324339"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Mul>::mul",
    "hash": "38426543157764426915738436449456863354"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Neg>::neg",
    "hash": "34729374320992161012462106249172725964"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Rem<i32>>::rem",
    "hash": "170322526570633571805771989028601434399"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Rem>::rem",
    "hash": "24085720549534801724292278559904273169"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Sub<i32>>::sub",
    "hash": "125808477302802184092760353607907705081"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Sub>::sub",
    "hash": "121099190300592659609147260183545859870"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::BitAnd<i32>>::bitand",
    "hash": "1681604863922447937413184149748203062255"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::BitAnd>::bitand",
    "hash": "1273086319164070411113279283836002941654"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::BitOr<i32>>::bitor",
    "hash": "1108409024345719358411823985541679331036"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::BitOr>::bitor",
    "hash": "8094231932808331345982210081211843665"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::BitXor<i32>>::bitxor",
    "hash": "1149412822245450072012074151403950776058"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::BitXor>::bitxor",
    "hash": "271453720080261399212729830254415072357"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Not>::not",
    "hash": "825827340387038172411642428826025046714"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&i128>>::shl",
    "hash": "81525659300422839314801550880469269193"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&i16>>::shl",
    "hash": "679502465103800088217688081126536387375"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&i64>>::shl",
    "hash": "58383280420036557636757919552776532251"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&i8>>::shl",
    "hash": "5963844117195827695182553485280040193"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&isize>>::shl",
    "hash": "102030702717001267381283453360079810573"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&u128>>::shl",
    "hash": "1040427414715311358417097746565684482699"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&u16>>::shl",
    "hash": "162572479092188413591287162953115008039"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&u32>>::shl",
    "hash": "64189943435079994724744566074915908345"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&u64>>::shl",
    "hash": "134613790551388177511519385168395662826"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&u8>>::shl",
    "hash": "1797079872363021916517542840043465019238"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&usize>>::shl",
    "hash": "879468060823450772518393534048429041407"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<i128>>::shl",
    "hash": "53921018636382906793910654216550674414"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<i16>>::shl",
    "hash": "106146965883684222117512878650852042593"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<i32>>::shl",
    "hash": "293027247992434729916188444830947593624"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<i64>>::shl",
    "hash": "178987423106890999279098314820669163389"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<i8>>::shl",
    "hash": "24821708340853766689325977852397761991"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<isize>>::shl",
    "hash": "36865235361175958056037686515707583285"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<u128>>::shl",
    "hash": "149685990520254264226822159003679826082"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<u16>>::shl",
    "hash": "103272711276135185578281676232532418339"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<u32>>::shl",
    "hash": "119254107463730098715691938937795437368"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<u64>>::shl",
    "hash": "111984872529994110878777062417507432767"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<u8>>::shl",
    "hash": "20101963881337448531122143516187723411"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<usize>>::shl",
    "hash": "121130310457955544119991404344561548141"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl>::shl",
    "hash": "16453112518012981811036465448485563147"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&i128>>::shr",
    "hash": "188778235668951759711390856388024054455"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&i16>>::shr",
    "hash": "159728373309303273104001791108481954474"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&i64>>::shr",
    "hash": "971210571986476498810309850080176805398"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&i8>>::shr",
    "hash": "147539018494790427031165159007127676875"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&isize>>::shr",
    "hash": "1530750179539716941313301194142244971585"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&u128>>::shr",
    "hash": "46934227487134300638226195085870953941"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&u16>>::shr",
    "hash": "14729626018844445692631160355842364726"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&u32>>::shr",
    "hash": "153948227861028446029214747602890087205"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&u64>>::shr",
    "hash": "148593236157126815241268820567459301124"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&u8>>::shr",
    "hash": "26617388208557974199660689978125747147"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&usize>>::shr",
    "hash": "6594620060467567160740978875678884187"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<i128>>::shr",
    "hash": "66732566690501203139198173594540686543"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<i16>>::shr",
    "hash": "548941730763358935613972969546646377469"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<i32>>::shr",
    "hash": "1504443064224036403217141144366976042761"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<i64>>::shr",
    "hash": "1339598925238336213412662627583885013017"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<i8>>::shr",
    "hash": "870208363172991026717483611012804120909"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<isize>>::shr",
    "hash": "34126029798408027037242422580447772186"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<u128>>::shr",
    "hash": "8890605633868814950312619104466059645"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<u16>>::shr",
    "hash": "425288586546857502618376531356334741019"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<u32>>::shr",
    "hash": "57301618174615440915006646499872826152"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<u64>>::shr",
    "hash": "109115995466379095237185756400202884894"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<u8>>::shr",
    "hash": "69476140844683409113241597024628771366"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<usize>>::shr",
    "hash": "128034094513942649129946841676616469951"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr>::shr",
    "hash": "361980757760945297917240965097325762538"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Add<i64>>::add",
    "hash": "164048429665284704212594519811408136481"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Add>::add",
    "hash": "321842867715153278114914446100132733499"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Div<i64>>::div",
    "hash": "114609333831249912911534931067986802352"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Div>::div",
    "hash": "442203165748230155218004339661345589920"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Mul<i64>>::mul",
    "hash": "751087629937378656016687263155071169132"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Mul>::mul",
    "hash": "833627924167967430011112135376860748094"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Neg>::neg",
    "hash": "8405970081279781639553797432103530791"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Rem<i64>>::rem",
    "hash": "120548647296291464515269334673085784992"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Rem>::rem",
    "hash": "975090479010882587814294787064444775300"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Sub<i64>>::sub",
    "hash": "178369180780830143681707461058210084277"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Sub>::sub",
    "hash": "173966860468011860347683700593852977629"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::BitAnd<i64>>::bitand",
    "hash": "1481274182272974427016793344244164327525"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::BitAnd>::bitand",
    "hash": "3274592259735016465837754955452288668"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::BitOr<i64>>::bitor",
    "hash": "151907825070363873262740878867496294942"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::BitOr>::bitor",
    "hash": "933283198081616501014811450146389738841"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::BitXor<i64>>::bitxor",
    "hash": "112930318554709106346454723087937492166"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::BitXor>::bitxor",
    "hash": "40941922113763007468356941769268880293"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Not>::not",
    "hash": "1711189889244927400513458225485979758957"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&i128>>::shl",
    "hash": "1631950419817112356612630333695520445307"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&i16>>::shl",
    "hash": "95117954947569898884809399017049231987"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&i32>>::shl",
    "hash": "165802443139633681348739930925821612892"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&i8>>::shl",
    "hash": "353649876170232384111509491951901014770"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&isize>>::shl",
    "hash": "728580479680029491412294838105184289920"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&u128>>::shl",
    "hash": "548653927270990668510122889651447635861"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&u16>>::shl",
    "hash": "308147776078805308813749732669257300604"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&u32>>::shl",
    "hash": "1270830166844017684112836136070091665344"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&u64>>::shl",
    "hash": "16332945858623545741313145658360168067"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&u8>>::shl",
    "hash": "1285079477938495888816147851699768522447"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&usize>>::shl",
    "hash": "61832352292282978966862442104065825311"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<i128>>::shl",
    "hash": "110906851637583877666313805381257111022"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<i16>>::shl",
    "hash": "130337427772951674389301096934196191384"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<i32>>::shl",
    "hash": "873051519039907941411534991440657317136"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<i64>>::shl",
    "hash": "99959221071848329245381556517469783856"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<i8>>::shl",
    "hash": "79078032347431217165287110835181746831"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<isize>>::shl",
    "hash": "1520572129424005698910288385791275539373"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<u128>>::shl",
    "hash": "71551238170180442239337489666773889991"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<u16>>::shl",
    "hash": "2193640256030866835223381083050996854"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<u32>>::shl",
    "hash": "140457645338391247342163740543822538695"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<u64>>::shl",
    "hash": "183143955606498962113707426267223554549"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<u8>>::shl",
    "hash": "13966515962821644661604332499378864626"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<usize>>::shl",
    "hash": "964883148525320326616891725012756073891"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl>::shl",
    "hash": "804525498719132771716668731768899320470"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&i128>>::shr",
    "hash": "8345430521518198079517805192410116905"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&i16>>::shr",
    "hash": "99484860021144449902774110070542973829"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&i32>>::shr",
    "hash": "924101341392874771412605804106974379334"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&i8>>::shr",
    "hash": "74880631098257535166638609069660168723"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&isize>>::shr",
    "hash": "124332115104620223977597337538597877199"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&u128>>::shr",
    "hash": "1759889616086202912813740694001498050840"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&u16>>::shr",
    "hash": "338456966924138736112609590238019423517"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&u32>>::shr",
    "hash": "162592631481603278478718711104222749514"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&u64>>::shr",
    "hash": "93075926809343513844272130092734691491"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&u8>>::shr",
    "hash": "156687091767423187616594134328908188185"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&usize>>::shr",
    "hash": "1145011882938170123717469389325123496276"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<i128>>::shr",
    "hash": "1492848220906123880216672645302039380468"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<i16>>::shr",
    "hash": "83136077058372592564292207716636450048"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<i32>>::shr",
    "hash": "1234770330059267505415576183800655542527"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<i64>>::shr",
    "hash": "894688824509343729413956607675792990271"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<i8>>::shr",
    "hash": "43082431284639128583036306446703008366"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<isize>>::shr",
    "hash": "666583903717520367914974494295014103655"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<u128>>::shr",
    "hash": "1461122797283733262818441836640900803285"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<u16>>::shr",
    "hash": "829155992614313492616142838777286556039"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<u32>>::shr",
    "hash": "103090846504445590435404757826065910330"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<u64>>::shr",
    "hash": "83807129587706899512117227329879009971"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<u8>>::shr",
    "hash": "55880402194727687315094899152454060948"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<usize>>::shr",
    "hash": "1808913585004110889117220778241193336631"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr>::shr",
    "hash": "113609619067028625628891754637666822441"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Add<i8>>::add",
    "hash": "42090862018665651255342609151695079520"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Add>::add",
    "hash": "458983039538613151810715457688253868008"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Div<i8>>::div",
    "hash": "571966270943819058010913161824843199225"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Div>::div",
    "hash": "75134380128217149781833952590758085206"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Mul<i8>>::mul",
    "hash": "1196420960691931098412847424979264467691"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Mul>::mul",
    "hash": "821368268252264736913684147667543633691"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Neg>::neg",
    "hash": "97422812229093581193283237171976709770"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Rem<i8>>::rem",
    "hash": "3684660533011333563738296819858297340"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Rem>::rem",
    "hash": "6191136213985437765595895671777105322"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Sub<i8>>::sub",
    "hash": "88182587971553560647227761065376158147"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Sub>::sub",
    "hash": "119343366074213953192239545134880696966"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::BitAnd<i8>>::bitand",
    "hash": "1377675400646782439315445987995768500448"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::BitAnd>::bitand",
    "hash": "16019810956647806410816062042011691777"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::BitOr<i8>>::bitor",
    "hash": "179885920272475584947411873487379407394"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::BitOr>::bitor",
    "hash": "3862915553487709603373790963381726165"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::BitXor<i8>>::bitxor",
    "hash": "160165700537658412656298289626209340889"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::BitXor>::bitxor",
    "hash": "104272443061591556574334389349549520752"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Not>::not",
    "hash": "1230983930510394211717157197341553923711"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&i128>>::shl",
    "hash": "152567651094936160353234325649507834090"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&i16>>::shl",
    "hash": "48018634931732763677270555276302057908"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&i32>>::shl",
    "hash": "18261525363885238737850730065169699913"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&i64>>::shl",
    "hash": "125124764787590659737332553689281497200"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&isize>>::shl",
    "hash": "12488401642998478343738439699166854007"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&u128>>::shl",
    "hash": "50471979309344536296044229671881543184"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&u16>>::shl",
    "hash": "923364553791711032916166283865384512975"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&u32>>::shl",
    "hash": "58165744535095431789597910584639208800"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&u64>>::shl",
    "hash": "150768181893285443447096795820958881543"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&u8>>::shl",
    "hash": "34948051444372766662170870639952290341"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&usize>>::shl",
    "hash": "136026663124727285038198120398964262635"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<i128>>::shl",
    "hash": "597159477471130870018290248764787192264"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<i16>>::shl",
    "hash": "70476177457621110124328423946406534421"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<i32>>::shl",
    "hash": "110552563491430476767945577658163311027"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<i64>>::shl",
    "hash": "8800131341957234588539213547160507241"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<i8>>::shl",
    "hash": "1288451634428734213016931975453245063573"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<isize>>::shl",
    "hash": "109269326986386257379614439015572037857"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<u128>>::shl",
    "hash": "245304109088131727818180095341515259919"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<u16>>::shl",
    "hash": "1208336102679847158414630766839337883395"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<u32>>::shl",
    "hash": "1831760761420251602916431911416064109754"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<u64>>::shl",
    "hash": "760527314660467246516453776293900483432"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<u8>>::shl",
    "hash": "5346103125156430562327468812929571902"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<usize>>::shl",
    "hash": "182898135672549570312252838811401089048"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl>::shl",
    "hash": "1027080918921050148014486402160177404713"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&i128>>::shr",
    "hash": "1753106966670995356715687533182312794805"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&i16>>::shr",
    "hash": "94386284202037628846998811649541325809"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&i32>>::shr",
    "hash": "7889752302774008739120368031335192727"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&i64>>::shr",
    "hash": "771099203794681750914699453348823700041"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&isize>>::shr",
    "hash": "180561100817272585558981436736776900073"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&u128>>::shr",
    "hash": "40135371267315243637625251063902741814"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&u16>>::shr",
    "hash": "93386231016373089117118563041423590164"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&u32>>::shr",
    "hash": "20166217946156958212138810777141447583"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&u64>>::shr",
    "hash": "1838778503393763581811874817153323796383"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&u8>>::shr",
    "hash": "1699632291463461727218344195358711813581"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&usize>>::shr",
    "hash": "27878323848731885465074911149828576857"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<i128>>::shr",
    "hash": "1511172131827918790210971984805040508187"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<i16>>::shr",
    "hash": "165917007078900391778800053084488407850"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<i32>>::shr",
    "hash": "2652694196369760162489697834631095160"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<i64>>::shr",
    "hash": "469822270713634893115847900711241264217"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<i8>>::shr",
    "hash": "77718901332695223055199669164587486096"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<isize>>::shr",
    "hash": "63516819281084176715428491552262964108"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<u128>>::shr",
    "hash": "150528167108329100662671422648890218097"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<u16>>::shr",
    "hash": "1722962286795093939211945392373243184530"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<u32>>::shr",
    "hash": "27640701675782891354668764473723973650"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<u64>>::shr",
    "hash": "74572482503859187148401914062058824228"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<u8>>::shr",
    "hash": "1517650289982183774211474869758502906221"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<usize>>::shr",
    "hash": "135235852133298654889534150553449996298"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr>::shr",
    "hash": "81278314249050646432812602166583991279"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Add<isize>>::add",
    "hash": "639904839237688230118021491902907716097"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Add>::add",
    "hash": "143300180171598554966053340575673744439"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Div<isize>>::div",
    "hash": "1045161825138900931916561247424885801184"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Div>::div",
    "hash": "28231130058152671699068401320741793335"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Mul<isize>>::mul",
    "hash": "114043199947446593476214139193520503468"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Mul>::mul",
    "hash": "559304653575291240811840817621697126046"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Neg>::neg",
    "hash": "1721352087907853740014257002577132322759"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Rem<isize>>::rem",
    "hash": "1036834873107148648014115011668408533845"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Rem>::rem",
    "hash": "145814661070175108008122346274187422661"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Sub<isize>>::sub",
    "hash": "71443397231430156274032176343914431279"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Sub>::sub",
    "hash": "9350244020028923114148129707712952922"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::BitAnd<isize>>::bitand",
    "hash": "166664018670287386101967522193647647876"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::BitAnd>::bitand",
    "hash": "238319511775889677517662148869226892495"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::BitOr<isize>>::bitor",
    "hash": "101593188608139526077094752115451786545"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::BitOr>::bitor",
    "hash": "20893310807234486016637123110139660459"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::BitXor<isize>>::bitxor",
    "hash": "1012888139979088797215577569318943192059"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::BitXor>::bitxor",
    "hash": "127646408771367667916524609554895485453"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Not>::not",
    "hash": "419533008474594235010808428410753077136"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&i128>>::shl",
    "hash": "30103239126630459448115257868855017509"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&i16>>::shl",
    "hash": "141523677025929653338396070285902637154"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&i32>>::shl",
    "hash": "74242228021848012821404628064170803949"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&i64>>::shl",
    "hash": "173169319532796765227549770039424861265"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&i8>>::shl",
    "hash": "84578645396550621628573914379055514713"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&u128>>::shl",
    "hash": "1507455822423501874514119066943720969595"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&u16>>::shl",
    "hash": "1808705262200788313296061162245595740"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&u32>>::shl",
    "hash": "81573698313114856403252512051937802458"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&u64>>::shl",
    "hash": "5143326043680248678837444136662320256"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&u8>>::shl",
    "hash": "134603514244807450751335316075077003126"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&usize>>::shl",
    "hash": "61748272639616230038979898064119212139"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<i128>>::shl",
    "hash": "183129209340267864966941087034959909389"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<i16>>::shl",
    "hash": "545236765472922399412630710413804335569"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<i32>>::shl",
    "hash": "1530023401258363195316335268817420079560"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<i64>>::shl",
    "hash": "547842880936380818617334386481182964760"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<i8>>::shl",
    "hash": "1384621600966953361713336453328689803154"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<isize>>::shl",
    "hash": "1474819917028438701614820484136539652943"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<u128>>::shl",
    "hash": "59821226098905760838439823151924089540"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<u16>>::shl",
    "hash": "1201360222549371597013038493402034707694"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<u32>>::shl",
    "hash": "98541774793206638629299573342267264645"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<u64>>::shl",
    "hash": "1162315963643463668612337717014468629504"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<u8>>::shl",
    "hash": "534538123561405160912910218227118069290"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<usize>>::shl",
    "hash": "1374163358409499367617131475321670517605"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl>::shl",
    "hash": "1217133929452249531017407852554993574668"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&i128>>::shr",
    "hash": "1257626193289621037910408828926293796594"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&i16>>::shr",
    "hash": "401997102352709109113359225194918620358"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&i32>>::shr",
    "hash": "1603689532523320753211025484663513680400"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&i64>>::shr",
    "hash": "14544357735292398714361908229885904552"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&i8>>::shr",
    "hash": "6978467086039407541768997809132409650"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&u128>>::shr",
    "hash": "278012771722352928512162148089302915639"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&u16>>::shr",
    "hash": "125073556872533329977272525008647983717"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&u32>>::shr",
    "hash": "113966147281288733665938774161580985634"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&u64>>::shr",
    "hash": "1590140012110959990213985275905656464192"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&u8>>::shr",
    "hash": "1246039569705107819311647661823896467898"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&usize>>::shr",
    "hash": "30134252821298550313207630645777509935"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<i128>>::shr",
    "hash": "90360998129055830653970325086318183056"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<i16>>::shr",
    "hash": "1051900385762384284510537833563386149552"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<i32>>::shr",
    "hash": "10452802504283917731357452065719068293"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<i64>>::shr",
    "hash": "1507125845896179597013671091701150241936"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<i8>>::shr",
    "hash": "1414687796818086495016772850526558153446"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<isize>>::shr",
    "hash": "1537706526612272270213301611268104940086"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<u128>>::shr",
    "hash": "56750337873897000676686900294540454746"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<u16>>::shr",
    "hash": "1306333519533764794413779627412810490871"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<u32>>::shr",
    "hash": "54831191363155187404412547806932678005"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<u64>>::shr",
    "hash": "622894871633702176011985320493934228585"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<u8>>::shr",
    "hash": "796384119680132839717496509486158960490"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<usize>>::shr",
    "hash": "179594357052460315398669147787211131630"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr>::shr",
    "hash": "916227360501164209415878645314249360189"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::nonzero::NonZero<i128> as ops::arith::Neg>::neg",
    "hash": "113938469538230938554096476754097919644"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::nonzero::NonZero<i16> as ops::arith::Neg>::neg",
    "hash": "73137690084383271589713274537364833255"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::nonzero::NonZero<i32> as ops::arith::Neg>::neg",
    "hash": "310869392536540564513702282201345814237"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::nonzero::NonZero<i64> as ops::arith::Neg>::neg",
    "hash": "167377274007482588615664189324177761612"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::nonzero::NonZero<i8> as ops::arith::Neg>::neg",
    "hash": "70078490367505472874602013397174442190"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::nonzero::NonZero<isize> as ops::arith::Neg>::neg",
    "hash": "28917282525672319553634694806531374718"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Add<num::saturating::Saturating<i128>>>::add",
    "hash": "1211862826654353320513382709661637293118"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Add>::add",
    "hash": "5917075758069883827476464680489064137"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Div<num::saturating::Saturating<i128>>>::div",
    "hash": "17054068533889394507362977484431917074"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Div>::div",
    "hash": "83413310001128021601313598521734744091"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Mul<num::saturating::Saturating<i128>>>::mul",
    "hash": "150271537552932484259729502685788584091"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Mul>::mul",
    "hash": "22007194137124821476923024024478287854"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Neg>::neg",
    "hash": "10166830988801391572939221095409465451"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Rem<num::saturating::Saturating<i128>>>::rem",
    "hash": "1648197845450544308111638020904431683394"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Rem>::rem",
    "hash": "1828577184219657357110126192096267575365"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Sub<num::saturating::Saturating<i128>>>::sub",
    "hash": "9233998911694530428604843794884590153"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Sub>::sub",
    "hash": "19212657530085871994075104364031271376"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::bit::BitAnd<num::saturating::Saturating<i128>>>::bitand",
    "hash": "61669064473567347708191842009254810903"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::bit::BitAnd>::bitand",
    "hash": "18979583815522883195470876179551281691"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::bit::BitOr<num::saturating::Saturating<i128>>>::bitor",
    "hash": "605184930755976537611969080693039145820"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::bit::BitOr>::bitor",
    "hash": "65197238455360370253816508701212166485"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::bit::BitXor<num::saturating::Saturating<i128>>>::bitxor",
    "hash": "86974981292080942706464922566234778224"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::bit::BitXor>::bitxor",
    "hash": "19740892553591114817266883467175615579"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::bit::Not>::not",
    "hash": "95857052316822152283235921620640111161"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Add<num::saturating::Saturating<i16>>>::add",
    "hash": "53814597244203695809156868261267863590"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Add>::add",
    "hash": "16624796042215356194442798937905421381"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Div<num::saturating::Saturating<i16>>>::div",
    "hash": "1452482373316137087412050963209128430964"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Div>::div",
    "hash": "321267187611946432616876665189432852932"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Mul<num::saturating::Saturating<i16>>>::mul",
    "hash": "16396345803446595130584236981286869648"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Mul>::mul",
    "hash": "1206049599371206476917766524938629615401"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Neg>::neg",
    "hash": "152697662164204776804569422203023239044"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Rem<num::saturating::Saturating<i16>>>::rem",
    "hash": "896641577315678846818396029884822380893"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Rem>::rem",
    "hash": "71151600018608212799855672859171468428"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Sub<num::saturating::Saturating<i16>>>::sub",
    "hash": "175711698292385433324134772652861819018"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Sub>::sub",
    "hash": "68637314906582095802285077665649623727"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::bit::BitAnd<num::saturating::Saturating<i16>>>::bitand",
    "hash": "769438768429025898216308243159212440793"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::bit::BitAnd>::bitand",
    "hash": "158809313307463680769185219026704553985"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::bit::BitOr<num::saturating::Saturating<i16>>>::bitor",
    "hash": "500393846618484438513568248839008452787"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::bit::BitOr>::bitor",
    "hash": "514402675797676112514875484011419048656"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::bit::BitXor<num::saturating::Saturating<i16>>>::bitxor",
    "hash": "806103283829064325213383574916463302998"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::bit::BitXor>::bitxor",
    "hash": "659872815964254236514890146574815239790"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::bit::Not>::not",
    "hash": "599325085483868264711648261609001014048"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Add<num::saturating::Saturating<i32>>>::add",
    "hash": "576553012307906319414054611906005235602"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Add>::add",
    "hash": "72519460932902295673571524640324980110"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Div<num::saturating::Saturating<i32>>>::div",
    "hash": "45328241062659366775082314511954233993"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Div>::div",
    "hash": "206983715119407225716873224772144199410"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Mul<num::saturating::Saturating<i32>>>::mul",
    "hash": "60159458942020349313714292225877727185"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Mul>::mul",
    "hash": "180514856994096098847188657008423676811"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Neg>::neg",
    "hash": "1505627788469617524316777646349008813106"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Rem<num::saturating::Saturating<i32>>>::rem",
    "hash": "1648354978398246864017770648067957926668"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Rem>::rem",
    "hash": "780925561722304094913557013380638704655"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Sub<num::saturating::Saturating<i32>>>::sub",
    "hash": "1137215904222657121010416618163020105616"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Sub>::sub",
    "hash": "1347513960914600497315177406962619902783"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::bit::BitAnd<num::saturating::Saturating<i32>>>::bitand",
    "hash": "54892587953798363484931565024789941246"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::bit::BitAnd>::bitand",
    "hash": "3085515142309510125599074969192547481"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::bit::BitOr<num::saturating::Saturating<i32>>>::bitor",
    "hash": "149802067960455334912827314807976462982"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::bit::BitOr>::bitor",
    "hash": "1721605706553478032012969801878009793136"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::bit::BitXor<num::saturating::Saturating<i32>>>::bitxor",
    "hash": "2706256674075195854282939001951841110"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::bit::BitXor>::bitxor",
    "hash": "82465307163493313733369878278388041736"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::bit::Not>::not",
    "hash": "1551448562476148108016176886814220091390"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Add<num::saturating::Saturating<i64>>>::add",
    "hash": "67321048907631223631153413872871535019"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Add>::add",
    "hash": "69958233684724101408368986775961972300"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Div<num::saturating::Saturating<i64>>>::div",
    "hash": "91324355580472200791070145934286575442"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Div>::div",
    "hash": "56187615624993811613576408482846340758"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Mul<num::saturating::Saturating<i64>>>::mul",
    "hash": "1188159394951936206760133465292175057"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Mul>::mul",
    "hash": "4213631045942907170167310252055653998"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Neg>::neg",
    "hash": "708817517798368256914382709473104782371"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Rem<num::saturating::Saturating<i64>>>::rem",
    "hash": "89256061833298874138676374637260183593"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Rem>::rem",
    "hash": "1216343584060733996917655479750486372252"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Sub<num::saturating::Saturating<i64>>>::sub",
    "hash": "1629078499595604151762189511558478019"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Sub>::sub",
    "hash": "781703216529653216713716040280989625928"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::bit::BitAnd<num::saturating::Saturating<i64>>>::bitand",
    "hash": "297463084841537053912636274857853668669"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::bit::BitAnd>::bitand",
    "hash": "70111404814641564579633146275079539354"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::bit::BitOr<num::saturating::Saturating<i64>>>::bitor",
    "hash": "1213205376297184219511751704162092192184"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::bit::BitOr>::bitor",
    "hash": "6264861854130439642492266456323505699"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::bit::BitXor<num::saturating::Saturating<i64>>>::bitxor",
    "hash": "61939036601242373839763001059500335421"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::bit::BitXor>::bitxor",
    "hash": "13405628446102637717548810321701109388"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::bit::Not>::not",
    "hash": "573138316215909682810971425122646498916"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Add<num::saturating::Saturating<i8>>>::add",
    "hash": "165598455961467609967470130314519064944"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Add>::add",
    "hash": "75930273162182415075052739816609558867"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Div<num::saturating::Saturating<i8>>>::div",
    "hash": "713548288540039002716176784304065935031"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Div>::div",
    "hash": "87282487252660961397594603594521874801"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Mul<num::saturating::Saturating<i8>>>::mul",
    "hash": "1483199375861648353016385852511057446876"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Mul>::mul",
    "hash": "216130675310508275615256825153453178797"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Neg>::neg",
    "hash": "1562269471556751745111636527613939232460"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Rem<num::saturating::Saturating<i8>>>::rem",
    "hash": "21733606648139720784567860373384057969"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Rem>::rem",
    "hash": "124589833027750690075078648658378496774"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Sub<num::saturating::Saturating<i8>>>::sub",
    "hash": "121619605323477236862536749722616935214"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Sub>::sub",
    "hash": "12536411259117728880616358905505035630"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::bit::BitAnd<num::saturating::Saturating<i8>>>::bitand",
    "hash": "40679548901880790634790817769819559930"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::bit::BitAnd>::bitand",
    "hash": "592252792520972779610679525175870114497"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::bit::BitOr<num::saturating::Saturating<i8>>>::bitor",
    "hash": "174425937886210509567942296534983248804"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::bit::BitOr>::bitor",
    "hash": "84797197052642977304426427134738996858"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::bit::BitXor<num::saturating::Saturating<i8>>>::bitxor",
    "hash": "91876134766376109858274189875327526056"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::bit::BitXor>::bitxor",
    "hash": "13349850203493590847459761267872970861"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::bit::Not>::not",
    "hash": "1624996569003215158515396235646919070121"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Add<num::saturating::Saturating<isize>>>::add",
    "hash": "135929320529236502485249843659811067639"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Add>::add",
    "hash": "219249714359121634716240410528341550685"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Div<num::saturating::Saturating<isize>>>::div",
    "hash": "546910570537487922713524444045708237413"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Div>::div",
    "hash": "406650064014845737114954766022194073288"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Mul<num::saturating::Saturating<isize>>>::mul",
    "hash": "1469045147849995087315897362262909692010"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Mul>::mul",
    "hash": "1345542898589993975111879534257637982099"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Neg>::neg",
    "hash": "1028682856557337240417492010772775074478"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Rem<num::saturating::Saturating<isize>>>::rem",
    "hash": "463296883576556002717260975705803118212"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Rem>::rem",
    "hash": "63738914697258679567891260979200174458"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Sub<num::saturating::Saturating<isize>>>::sub",
    "hash": "14949614448234828781695971680374420975"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Sub>::sub",
    "hash": "33758813375580631431057896786817188492"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::bit::BitAnd<num::saturating::Saturating<isize>>>::bitand",
    "hash": "1642866768934124233415908874941163753672"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::bit::BitAnd>::bitand",
    "hash": "1117814121036636518617655101323262290634"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::bit::BitOr<num::saturating::Saturating<isize>>>::bitor",
    "hash": "13142449285945918421294394371709065504"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::bit::BitOr>::bitor",
    "hash": "1430683129329995592411963714487256953029"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::bit::BitXor<num::saturating::Saturating<isize>>>::bitxor",
    "hash": "106064270116457943115271401682833456928"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::bit::BitXor>::bitxor",
    "hash": "528214848026272692410909242943256489381"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::bit::Not>::not",
    "hash": "1418457847732022241818133574162516297901"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::arith::Add<num::saturating::Saturating<u128>>>::add",
    "hash": "649774842861346902110273043319509837888"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::arith::Add>::add",
    "hash": "33539234409898148131640828092430778938"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::arith::Div<num::saturating::Saturating<u128>>>::div",
    "hash": "36918475974997446766747273957206069230"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::arith::Div>::div",
    "hash": "122623396117889664554992682257274303349"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::arith::Mul<num::saturating::Saturating<u128>>>::mul",
    "hash": "92868880376105179981029349870545134438"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::arith::Mul>::mul",
    "hash": "180280648740629056126233886400617938928"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::arith::Rem<num::saturating::Saturating<u128>>>::rem",
    "hash": "26445665990569449823944579607459088139"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::arith::Rem>::rem",
    "hash": "897997776090527299515486793610668811147"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::arith::Sub<num::saturating::Saturating<u128>>>::sub",
    "hash": "17282670596782498578849187045199331312"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::arith::Sub>::sub",
    "hash": "11847133417432388561427769232806370994"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::bit::BitAnd<num::saturating::Saturating<u128>>>::bitand",
    "hash": "867418546470295476412483100988281200791"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::bit::BitAnd>::bitand",
    "hash": "1792365696683989431012438615461225604920"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::bit::BitOr<num::saturating::Saturating<u128>>>::bitor",
    "hash": "447648879388635342716328856022099381637"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::bit::BitOr>::bitor",
    "hash": "1601991425537747962210221223904444801757"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::bit::BitXor<num::saturating::Saturating<u128>>>::bitxor",
    "hash": "21406353996110965217504306127739633551"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::bit::BitXor>::bitxor",
    "hash": "51120875041836143242744408844095124768"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::bit::Not>::not",
    "hash": "152712252246251233316730900410169683506"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::arith::Add<num::saturating::Saturating<u16>>>::add",
    "hash": "240981136788734525716009569917085091061"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::arith::Add>::add",
    "hash": "780464031154520009412919355358909963577"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::arith::Div<num::saturating::Saturating<u16>>>::div",
    "hash": "27270025026278454010086650952848497474"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::arith::Div>::div",
    "hash": "311627617122451111311755640590030192920"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::arith::Mul<num::saturating::Saturating<u16>>>::mul",
    "hash": "811685342535095615412702700396943587989"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::arith::Mul>::mul",
    "hash": "50901800005429738156605582609877914085"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::arith::Rem<num::saturating::Saturating<u16>>>::rem",
    "hash": "57527141689997729848868456420694941460"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::arith::Rem>::rem",
    "hash": "141543372085509308405000713551287937937"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::arith::Sub<num::saturating::Saturating<u16>>>::sub",
    "hash": "74996224049360199687121429211637686493"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::arith::Sub>::sub",
    "hash": "1476441928807408406415078239996115727634"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::bit::BitAnd<num::saturating::Saturating<u16>>>::bitand",
    "hash": "102609036268273417635195257271756434793"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::bit::BitAnd>::bitand",
    "hash": "86651351269774730287832006315354568002"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::bit::BitOr<num::saturating::Saturating<u16>>>::bitor",
    "hash": "950071264369265002214058176041833031772"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::bit::BitOr>::bitor",
    "hash": "1172242625181628543815725375469239251485"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::bit::BitXor<num::saturating::Saturating<u16>>>::bitxor",
    "hash": "22952311063559877086695396600522252567"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::bit::BitXor>::bitxor",
    "hash": "1803299081383678186917572978410293276146"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::bit::Not>::not",
    "hash": "92631857521177524912402539298832676829"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::arith::Add<num::saturating::Saturating<u32>>>::add",
    "hash": "1356561105991526694111606066994386552745"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::arith::Add>::add",
    "hash": "173475906286046204045872447842620058778"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::arith::Div<num::saturating::Saturating<u32>>>::div",
    "hash": "29321492626577921417033095960019407373"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::arith::Div>::div",
    "hash": "1549441423750229483513059053702835589996"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::arith::Mul<num::saturating::Saturating<u32>>>::mul",
    "hash": "69035274455562500648863318881402390938"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::arith::Mul>::mul",
    "hash": "79446369853411340926406025919889814060"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::arith::Rem<num::saturating::Saturating<u32>>>::rem",
    "hash": "155788409275388658101953738236817271448"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::arith::Rem>::rem",
    "hash": "37395330639998670603782920273431991783"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::arith::Sub<num::saturating::Saturating<u32>>>::sub",
    "hash": "105082722886234874851203624149531705650"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::arith::Sub>::sub",
    "hash": "10558898184670143013703759672503018128"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::bit::BitAnd<num::saturating::Saturating<u32>>>::bitand",
    "hash": "16043859446694395157567626328052697929"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::bit::BitAnd>::bitand",
    "hash": "158392626922966074624405682066066310498"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::bit::BitOr<num::saturating::Saturating<u32>>>::bitor",
    "hash": "522809240722697630710804446307046583938"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::bit::BitOr>::bitor",
    "hash": "1456641668198307778012011916874103053925"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::bit::BitXor<num::saturating::Saturating<u32>>>::bitxor",
    "hash": "1539265577012981449213793822929901602808"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::bit::BitXor>::bitxor",
    "hash": "1545066465346278149113571319502676933399"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::bit::Not>::not",
    "hash": "33475073342884183438447992695546883317"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::arith::Add<num::saturating::Saturating<u64>>>::add",
    "hash": "107886013166029653957637112602440839529"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::arith::Add>::add",
    "hash": "1001269927112038485918196260718136897045"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::arith::Div<num::saturating::Saturating<u64>>>::div",
    "hash": "68174194656463237946803898781867680649"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::arith::Div>::div",
    "hash": "8057078851841636858690771438515522170"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::arith::Mul<num::saturating::Saturating<u64>>>::mul",
    "hash": "1452229515983163943211898403053538367847"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::arith::Mul>::mul",
    "hash": "918421094003588934811449771211088604842"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::arith::Rem<num::saturating::Saturating<u64>>>::rem",
    "hash": "143836061301218774799302876576671556826"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::arith::Rem>::rem",
    "hash": "969470945443589044411600898050446406052"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::arith::Sub<num::saturating::Saturating<u64>>>::sub",
    "hash": "96737580800937446307233752519952210657"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::arith::Sub>::sub",
    "hash": "75922792762171916836630360562703447"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::bit::BitAnd<num::saturating::Saturating<u64>>>::bitand",
    "hash": "70145061065599067408935873645710465845"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::bit::BitAnd>::bitand",
    "hash": "559275040145627315316727798246354186713"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::bit::BitOr<num::saturating::Saturating<u64>>>::bitor",
    "hash": "799149595618109365012569414743029618762"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::bit::BitOr>::bitor",
    "hash": "305486188121943624915242417638726189707"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::bit::BitXor<num::saturating::Saturating<u64>>>::bitxor",
    "hash": "1265921720359983632618356004724544948290"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::bit::BitXor>::bitxor",
    "hash": "28788991861233145437324521923178088289"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::bit::Not>::not",
    "hash": "1221672594960321484755985114288477350"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::arith::Add<num::saturating::Saturating<u8>>>::add",
    "hash": "1294279601298091740517876124238187084597"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::arith::Add>::add",
    "hash": "99952485921494794766004693353713174357"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::arith::Div<num::saturating::Saturating<u8>>>::div",
    "hash": "151428056975458700916747817736816952996"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::arith::Div>::div",
    "hash": "713815153259456469318118392494462093982"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::arith::Mul<num::saturating::Saturating<u8>>>::mul",
    "hash": "23857581843378090908491186662741288158"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::arith::Mul>::mul",
    "hash": "87465212697142619101575888163019763277"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::arith::Rem<num::saturating::Saturating<u8>>>::rem",
    "hash": "179142600328801822415896773152923871236"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::arith::Rem>::rem",
    "hash": "72501386322270842772323309839503385990"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::arith::Sub<num::saturating::Saturating<u8>>>::sub",
    "hash": "16524182271780156058611668439040817360"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::arith::Sub>::sub",
    "hash": "1764166690328656569013742623194616979713"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::bit::BitAnd<num::saturating::Saturating<u8>>>::bitand",
    "hash": "774834974749566305514428595102887007703"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::bit::BitAnd>::bitand",
    "hash": "294357046050091099318297120169264137728"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::bit::BitOr<num::saturating::Saturating<u8>>>::bitor",
    "hash": "999859800265625444510595553533346597119"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::bit::BitOr>::bitor",
    "hash": "35090081832740957315398225389759052936"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::bit::BitXor<num::saturating::Saturating<u8>>>::bitxor",
    "hash": "675956012623774968413781234662759359188"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::bit::BitXor>::bitxor",
    "hash": "858176592372062314815045782012998147356"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::bit::Not>::not",
    "hash": "49830904555372786495170374959882275355"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::arith::Add<num::saturating::Saturating<usize>>>::add",
    "hash": "3655142332126811398907855853840507545"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::arith::Add>::add",
    "hash": "204960239813391287512515710049026036797"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::arith::Div<num::saturating::Saturating<usize>>>::div",
    "hash": "1195687550140074974615568932911335877621"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::arith::Div>::div",
    "hash": "1339093985437017715112694887420863436448"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::arith::Mul<num::saturating::Saturating<usize>>>::mul",
    "hash": "442345669859648288312764309529381605290"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::arith::Mul>::mul",
    "hash": "444850136660655476310429339952577536720"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::arith::Rem<num::saturating::Saturating<usize>>>::rem",
    "hash": "1751126422258229398515107692451582982643"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::arith::Rem>::rem",
    "hash": "56755266713455194738993084392833870021"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::arith::Sub<num::saturating::Saturating<usize>>>::sub",
    "hash": "516377111004190754115631027239585062438"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::arith::Sub>::sub",
    "hash": "1443191135937096467512677266288261872471"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::bit::BitAnd<num::saturating::Saturating<usize>>>::bitand",
    "hash": "920745862393786427412418310963865989019"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::bit::BitAnd>::bitand",
    "hash": "1796588158396543706318229536195279024746"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::bit::BitOr<num::saturating::Saturating<usize>>>::bitor",
    "hash": "112919329238375074977812833293827938276"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::bit::BitOr>::bitor",
    "hash": "1426865916983207233468322311169410195"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::bit::BitXor<num::saturating::Saturating<usize>>>::bitxor",
    "hash": "75372215498476330392140913187015961428"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::bit::BitXor>::bitxor",
    "hash": "1750824097696278179213351110205833459340"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::bit::Not>::not",
    "hash": "160804271649793846474081348266450721543"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Add<num::wrapping::Wrapping<i128>>>::add",
    "hash": "1720403474802865623215964961238834881893"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Add>::add",
    "hash": "1318868738505796200510002463996239408398"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Div<num::wrapping::Wrapping<i128>>>::div",
    "hash": "181231765422349450821790766185895928671"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Div>::div",
    "hash": "127597600896956259316535963986847203862"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Mul<num::wrapping::Wrapping<i128>>>::mul",
    "hash": "83727883519188232346880059674005607874"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Mul>::mul",
    "hash": "122555587183388539509044347240772983617"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Neg>::neg",
    "hash": "103864410827765803882533002283573393479"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Rem<num::wrapping::Wrapping<i128>>>::rem",
    "hash": "1673711367894809940913402204219583800648"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Rem>::rem",
    "hash": "12764628977026627544890116081907450867"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Sub<num::wrapping::Wrapping<i128>>>::sub",
    "hash": "1267107783819743420814408739662634293987"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Sub>::sub",
    "hash": "6080812576385410692509132410279325618"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::BitAnd<num::wrapping::Wrapping<i128>>>::bitand",
    "hash": "51278431989766028706499114258196783801"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::BitAnd>::bitand",
    "hash": "1685438678321854504715657690099320610786"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::BitOr<num::wrapping::Wrapping<i128>>>::bitor",
    "hash": "100457041226822995785764045053281090673"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::BitOr>::bitor",
    "hash": "102235584566737884589701746269275511017"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::BitXor<num::wrapping::Wrapping<i128>>>::bitxor",
    "hash": "115334695634007226102183653422535062938"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::BitXor>::bitxor",
    "hash": "8346469332978447415243447272652426056"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::Not>::not",
    "hash": "56742298200268951118315753241514382544"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::Shl<&usize>>::shl",
    "hash": "96363501594086228439492732959101663883"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::Shl<usize>>::shl",
    "hash": "985565686214222441917678075445395213011"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::Shr<&usize>>::shr",
    "hash": "80031734879907896544664643620932674495"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::Shr<usize>>::shr",
    "hash": "1047859733566649559313308686943838990483"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Add<num::wrapping::Wrapping<i16>>>::add",
    "hash": "36754182836013092278135426045512019954"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Add>::add",
    "hash": "1157713244898873430118366295573309564955"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Div<num::wrapping::Wrapping<i16>>>::div",
    "hash": "92926155608831436103901281213278540059"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Div>::div",
    "hash": "183057864574222304419300422554115813641"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Mul<num::wrapping::Wrapping<i16>>>::mul",
    "hash": "1598994141843761026913237807587644379613"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Mul>::mul",
    "hash": "1091417246090162973911747884175312813781"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Neg>::neg",
    "hash": "3422184538838489659455149831264402693"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Rem<num::wrapping::Wrapping<i16>>>::rem",
    "hash": "22797721202596807864278739546876865835"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Rem>::rem",
    "hash": "1567017544572004008017490299956678276484"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Sub<num::wrapping::Wrapping<i16>>>::sub",
    "hash": "129316695230230423304130812068919777123"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Sub>::sub",
    "hash": "184128475767836989706120239853065125451"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::BitAnd<num::wrapping::Wrapping<i16>>>::bitand",
    "hash": "1028475283608914050017057414581460889058"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::BitAnd>::bitand",
    "hash": "86949185259454163679489498259195762203"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::BitOr<num::wrapping::Wrapping<i16>>>::bitor",
    "hash": "87802051606815267513167889668207963631"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::BitOr>::bitor",
    "hash": "324985955703347421616480625692460405454"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::BitXor<num::wrapping::Wrapping<i16>>>::bitxor",
    "hash": "75175163594238575975475794873246591778"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::BitXor>::bitxor",
    "hash": "69708522933981465655812294219800440063"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::Not>::not",
    "hash": "108993870549584183213096812818362687826"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::Shl<&usize>>::shl",
    "hash": "161868302395400353986671948623470825299"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::Shl<usize>>::shl",
    "hash": "135389068491866513821503830756346320343"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::Shr<&usize>>::shr",
    "hash": "85586616593623723831599928878232083633"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::Shr<usize>>::shr",
    "hash": "1091853717440192235013079754776343556726"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Add<num::wrapping::Wrapping<i32>>>::add",
    "hash": "25682995040862064236042967873957331412"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Add>::add",
    "hash": "15547381293332916566468159104974588244"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Div<num::wrapping::Wrapping<i32>>>::div",
    "hash": "660594112242310895312264653083070684391"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Div>::div",
    "hash": "32479901543453577197136673557014022013"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Mul<num::wrapping::Wrapping<i32>>>::mul",
    "hash": "182008139803107477256817137298205874068"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Mul>::mul",
    "hash": "1035570894323763292112942110690964061158"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Neg>::neg",
    "hash": "289854391526065482716158701708968400589"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Rem<num::wrapping::Wrapping<i32>>>::rem",
    "hash": "76845847145448014433947524649202405042"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Rem>::rem",
    "hash": "989233851946172481510076995838077809411"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Sub<num::wrapping::Wrapping<i32>>>::sub",
    "hash": "864049095421961691117377750960934576586"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Sub>::sub",
    "hash": "874138629806243208611215273180093178606"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::BitAnd<num::wrapping::Wrapping<i32>>>::bitand",
    "hash": "1151835788785027330718182810734656984631"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::BitAnd>::bitand",
    "hash": "58493834985947123782492497003072203247"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::BitOr<num::wrapping::Wrapping<i32>>>::bitor",
    "hash": "1561183017805296975813008485052833585813"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::BitOr>::bitor",
    "hash": "80205480968549307259047951061082499003"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::BitXor<num::wrapping::Wrapping<i32>>>::bitxor",
    "hash": "95572692922392708718036614559294805509"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::BitXor>::bitxor",
    "hash": "4621599375320725179820165925446372679"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::Not>::not",
    "hash": "92010961785731088111012023776440865318"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::Shl<&usize>>::shl",
    "hash": "14968418237585391494973190773187880190"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::Shl<usize>>::shl",
    "hash": "1134535736940446211013107416493644219308"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::Shr<&usize>>::shr",
    "hash": "398401128415375645010860227412202729051"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::Shr<usize>>::shr",
    "hash": "40854079234890039409791981978469482365"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Add<num::wrapping::Wrapping<i64>>>::add",
    "hash": "1609727245284353411315000028845728231162"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Add>::add",
    "hash": "1156901300462877534411887955034542139395"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Div<num::wrapping::Wrapping<i64>>>::div",
    "hash": "44011817429506791721033692564695435185"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Div>::div",
    "hash": "445280500312646166413346531400849745655"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Mul<num::wrapping::Wrapping<i64>>>::mul",
    "hash": "45869812614441723147923010496330741939"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Mul>::mul",
    "hash": "155547360631732530658960022735584595221"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Neg>::neg",
    "hash": "145498385211756078497949361198390712981"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Rem<num::wrapping::Wrapping<i64>>>::rem",
    "hash": "706851267410997464810134233370390683008"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Rem>::rem",
    "hash": "109003458616679740116887967983908407256"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Sub<num::wrapping::Wrapping<i64>>>::sub",
    "hash": "176655868355340906777535521941613447649"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Sub>::sub",
    "hash": "118869683931446636347623533118486776544"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::BitAnd<num::wrapping::Wrapping<i64>>>::bitand",
    "hash": "616428129220549715216994299033502954325"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::BitAnd>::bitand",
    "hash": "184643219482815890914125921184262453445"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::BitOr<num::wrapping::Wrapping<i64>>>::bitor",
    "hash": "112253383969330965929941906802309193274"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::BitOr>::bitor",
    "hash": "1368474574588003245416916315708704392854"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::BitXor<num::wrapping::Wrapping<i64>>>::bitxor",
    "hash": "1308802575172552284517399477232315974587"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::BitXor>::bitxor",
    "hash": "2901199543208227658793683058444912916"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::Not>::not",
    "hash": "178303533797913717781221807929838851949"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::Shl<&usize>>::shl",
    "hash": "32945701106059869611987506226786391949"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::Shl<usize>>::shl",
    "hash": "81360753185068489544749727769542838448"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::Shr<&usize>>::shr",
    "hash": "161434604060669566215512740298435730283"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::Shr<usize>>::shr",
    "hash": "82291412629865750068673322467225368722"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Add<num::wrapping::Wrapping<i8>>>::add",
    "hash": "119008620776203851419305815417913387448"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Add>::add",
    "hash": "762049734383866661510347399144279841571"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Div<num::wrapping::Wrapping<i8>>>::div",
    "hash": "512980790684967577315898113075174699663"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Div>::div",
    "hash": "787168721770047786712037845345717099727"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Mul<num::wrapping::Wrapping<i8>>>::mul",
    "hash": "96066484433986732410739735140230795470"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Mul>::mul",
    "hash": "39593993379053131516095759855991043221"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Neg>::neg",
    "hash": "82244280440958506534500065778616688857"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Rem<num::wrapping::Wrapping<i8>>>::rem",
    "hash": "907654963401992469313424110045030023173"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Rem>::rem",
    "hash": "85251448628373352775057970580199551238"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Sub<num::wrapping::Wrapping<i8>>>::sub",
    "hash": "604123596222268319116379116978884792752"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Sub>::sub",
    "hash": "123066049908717954698940991668136937493"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::BitAnd<num::wrapping::Wrapping<i8>>>::bitand",
    "hash": "1306407742880879071734562766285183009"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::BitAnd>::bitand",
    "hash": "1460214850617501348110268375449263808049"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::BitOr<num::wrapping::Wrapping<i8>>>::bitor",
    "hash": "1206291449666838807117400348079040185357"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::BitOr>::bitor",
    "hash": "146344504447511447849227294595986798618"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::BitXor<num::wrapping::Wrapping<i8>>>::bitxor",
    "hash": "805006804827174534710374932042105840959"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::BitXor>::bitxor",
    "hash": "1539384212219457256712845403073420007502"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::Not>::not",
    "hash": "167020842421073383803570158685538499385"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::Shl<&usize>>::shl",
    "hash": "1303869404932842112313877707346021452891"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::Shl<usize>>::shl",
    "hash": "160831028426745419925008012502048463892"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::Shr<&usize>>::shr",
    "hash": "14921444941051613172310221505716227016"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::Shr<usize>>::shr",
    "hash": "1716318421286444776411771959204724877076"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Add<num::wrapping::Wrapping<isize>>>::add",
    "hash": "1338555115580182789311028081641343631806"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Add>::add",
    "hash": "61966328165553276312473721052989055867"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Div<num::wrapping::Wrapping<isize>>>::div",
    "hash": "123620062538217532348314056348374473103"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Div>::div",
    "hash": "1597393536330914860516067904961060024445"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Mul<num::wrapping::Wrapping<isize>>>::mul",
    "hash": "588037622088926599011678744572573401729"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Mul>::mul",
    "hash": "95954507521241078382168173262290501337"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Neg>::neg",
    "hash": "1541323264089796256225453559073292726"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Rem<num::wrapping::Wrapping<isize>>>::rem",
    "hash": "677320657500720754416519920429229459936"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Rem>::rem",
    "hash": "10528712659582507700199723311819184787"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Sub<num::wrapping::Wrapping<isize>>>::sub",
    "hash": "591846484395514537111896302143744212196"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Sub>::sub",
    "hash": "1005048787919494388715571030293060815299"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::BitAnd<num::wrapping::Wrapping<isize>>>::bitand",
    "hash": "1764709524688129967510118589742728922728"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::BitAnd>::bitand",
    "hash": "114471052876309947693435077195727887688"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::BitOr<num::wrapping::Wrapping<isize>>>::bitor",
    "hash": "45623581786398480246907026494460706610"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::BitOr>::bitor",
    "hash": "91714199039746428415043927160987174813"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::BitXor<num::wrapping::Wrapping<isize>>>::bitxor",
    "hash": "1674422434400160517511742739234440059172"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::BitXor>::bitxor",
    "hash": "110911919620704518465800239756780286035"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::Not>::not",
    "hash": "53151058160939101564435176280464644444"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::Shl<&usize>>::shl",
    "hash": "157446429135856891513094030596498025121"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::Shl<usize>>::shl",
    "hash": "31285211917967021539373362192731922356"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::Shr<&usize>>::shr",
    "hash": "80037576997099716557207181732412113860"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::Shr<usize>>::shr",
    "hash": "1842593305382148674813081510897774551459"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Add<num::wrapping::Wrapping<u128>>>::add",
    "hash": "1552975764405867924810649007492818479459"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Add>::add",
    "hash": "1039005366495414109518155572743933872589"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Div<num::wrapping::Wrapping<u128>>>::div",
    "hash": "114903653923746353872049733579951094115"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Div>::div",
    "hash": "18389485904848771448256557381434048551"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Mul<num::wrapping::Wrapping<u128>>>::mul",
    "hash": "130999060409035075259562730977772221017"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Mul>::mul",
    "hash": "1310471988980343341013980249726108644850"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Neg>::neg",
    "hash": "101778575989646804859710563028775363543"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Rem<num::wrapping::Wrapping<u128>>>::rem",
    "hash": "120504172148696679664735529058410556207"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Rem>::rem",
    "hash": "58716884305725246669489238652125635557"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Sub<num::wrapping::Wrapping<u128>>>::sub",
    "hash": "1308228434834642340411450052164136829259"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Sub>::sub",
    "hash": "97882950726405851798007861342276027738"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::BitAnd<num::wrapping::Wrapping<u128>>>::bitand",
    "hash": "1659761185718709458211758714216332829877"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::BitAnd>::bitand",
    "hash": "41231885053467540774983365137621231702"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::BitOr<num::wrapping::Wrapping<u128>>>::bitor",
    "hash": "149924065430303595375595833513608050962"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::BitOr>::bitor",
    "hash": "1516541699426826552016819853729199294918"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::BitXor<num::wrapping::Wrapping<u128>>>::bitxor",
    "hash": "1591161640183166657717997456132343869156"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::BitXor>::bitxor",
    "hash": "103768852061926319258049036393767935425"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::Not>::not",
    "hash": "58501394887734408571489067013420794508"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::Shl<&usize>>::shl",
    "hash": "108809783746208184853267996293435049579"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::Shl<usize>>::shl",
    "hash": "612798774308721503816689267511512120708"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::Shr<&usize>>::shr",
    "hash": "1561482420501376133512866608520761132265"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::Shr<usize>>::shr",
    "hash": "5913897901838828013988542878371162825"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Add<num::wrapping::Wrapping<u16>>>::add",
    "hash": "48927991789728345982628469186392987570"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Add>::add",
    "hash": "16617925589384747760703616372262641101"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Div<num::wrapping::Wrapping<u16>>>::div",
    "hash": "1542367480495974674112555044879516042890"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Div>::div",
    "hash": "151138065077530384954205437543338340196"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Mul<num::wrapping::Wrapping<u16>>>::mul",
    "hash": "43250879561405224922863299147112019111"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Mul>::mul",
    "hash": "55475507406306735015737218303890962468"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Neg>::neg",
    "hash": "11472629440142848384328576910197691664"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Rem<num::wrapping::Wrapping<u16>>>::rem",
    "hash": "576576959831306463611883602671204060908"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Rem>::rem",
    "hash": "51379383475788028519843163042361514187"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Sub<num::wrapping::Wrapping<u16>>>::sub",
    "hash": "96815057467978354119440395626215839547"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Sub>::sub",
    "hash": "1150041769316856220515998787301327996525"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::BitAnd<num::wrapping::Wrapping<u16>>>::bitand",
    "hash": "1636495298028375871417116129554469265276"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::BitAnd>::bitand",
    "hash": "14596400186171140398238235691472600253"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::BitOr<num::wrapping::Wrapping<u16>>>::bitor",
    "hash": "1717781083693181853211053853516241316407"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::BitOr>::bitor",
    "hash": "1456985843786990552011577164727881828235"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::BitXor<num::wrapping::Wrapping<u16>>>::bitxor",
    "hash": "1828399869538700131409454889227970792"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::BitXor>::bitxor",
    "hash": "363177419474449246217105700943126580031"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::Not>::not",
    "hash": "75699008303779191739390175653042797521"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::Shl<&usize>>::shl",
    "hash": "71805793481154512706738490270274989644"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::Shl<usize>>::shl",
    "hash": "145588575379446152053180521824238383688"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::Shr<&usize>>::shr",
    "hash": "114994322037572117629070964036127901344"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::Shr<usize>>::shr",
    "hash": "34287055659373101892911042830904776431"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Add<num::wrapping::Wrapping<u32>>>::add",
    "hash": "2648417957910441879856642264369195443"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Add>::add",
    "hash": "1737922972371647578517754161947970627618"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Div<num::wrapping::Wrapping<u32>>>::div",
    "hash": "114148897299792825667658946310150487279"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Div>::div",
    "hash": "82487299687490667057797667088654039511"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Mul<num::wrapping::Wrapping<u32>>>::mul",
    "hash": "16176937709469495836138662933831457540"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Mul>::mul",
    "hash": "22914746688051710801722516148148432762"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Neg>::neg",
    "hash": "173706277257088730901332713404906575262"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Rem<num::wrapping::Wrapping<u32>>>::rem",
    "hash": "16415151906639985051977498142940600267"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Rem>::rem",
    "hash": "1759520299199509568215204963531910412283"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Sub<num::wrapping::Wrapping<u32>>>::sub",
    "hash": "564061295630291763710258167171038648446"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Sub>::sub",
    "hash": "62874821970464037284270721151685446664"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::BitAnd<num::wrapping::Wrapping<u32>>>::bitand",
    "hash": "43692817155000169738390645447702786401"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::BitAnd>::bitand",
    "hash": "22617501378428499498330302991521485769"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::BitOr<num::wrapping::Wrapping<u32>>>::bitor",
    "hash": "497868304850633540816067494971654015050"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::BitOr>::bitor",
    "hash": "1835422608541714220515667358500763033174"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::BitXor<num::wrapping::Wrapping<u32>>>::bitxor",
    "hash": "127013362244296240721701309819008268826"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::BitXor>::bitxor",
    "hash": "23879322274814695658053412382986639462"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::Not>::not",
    "hash": "42402464720640900987856151360815494191"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::Shl<&usize>>::shl",
    "hash": "131791355056741151969064155599499702821"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::Shl<usize>>::shl",
    "hash": "103186465211916431966264843642746945951"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::Shr<&usize>>::shr",
    "hash": "347013137933577896616023851388610061653"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::Shr<usize>>::shr",
    "hash": "10852578463286031479977040498462347475"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Add<num::wrapping::Wrapping<u64>>>::add",
    "hash": "568443606335680232514726899708137659349"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Add>::add",
    "hash": "23081209715853701519145707192232138940"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Div<num::wrapping::Wrapping<u64>>>::div",
    "hash": "14496471551596186922578814192373443825"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Div>::div",
    "hash": "15064574238655782572823576257426038366"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Mul<num::wrapping::Wrapping<u64>>>::mul",
    "hash": "371091459594697536315488346255740570597"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Mul>::mul",
    "hash": "97058443950668007079735022483920112738"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Neg>::neg",
    "hash": "14009097055422332964604877679267373846"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Rem<num::wrapping::Wrapping<u64>>>::rem",
    "hash": "1610877151041093303615195357952892053520"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Rem>::rem",
    "hash": "164042473832545622275810333140405707599"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Sub<num::wrapping::Wrapping<u64>>>::sub",
    "hash": "103509697437420100232824091148849787546"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Sub>::sub",
    "hash": "1575621094234279797714468981393290507359"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::BitAnd<num::wrapping::Wrapping<u64>>>::bitand",
    "hash": "35418406053815257204357004220395590615"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::BitAnd>::bitand",
    "hash": "337496980769468348517848525702778276439"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::BitOr<num::wrapping::Wrapping<u64>>>::bitor",
    "hash": "1710057128983311039116875268204059796447"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::BitOr>::bitor",
    "hash": "1536786289453084152516749566643984061282"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::BitXor<num::wrapping::Wrapping<u64>>>::bitxor",
    "hash": "1467319598501889705814822950722204047820"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::BitXor>::bitxor",
    "hash": "64330954768917337576358091999359636339"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::Not>::not",
    "hash": "521628405895454644616706632206262836166"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::Shl<&usize>>::shl",
    "hash": "150964000421222765638287326791995453775"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::Shl<usize>>::shl",
    "hash": "278671684636558136816411783483961228373"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::Shr<&usize>>::shr",
    "hash": "85882729580559878617680739188200106955"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::Shr<usize>>::shr",
    "hash": "162106134004066277258946502070405087478"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Add<num::wrapping::Wrapping<u8>>>::add",
    "hash": "151244136662693984939622390312265667307"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Add>::add",
    "hash": "1137908304730835811314015757392110208663"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Div<num::wrapping::Wrapping<u8>>>::div",
    "hash": "52889412538096481602706055879761612883"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Div>::div",
    "hash": "710518184222132356010510888357576942580"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Mul<num::wrapping::Wrapping<u8>>>::mul",
    "hash": "135985987092131817562677288420694126576"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Mul>::mul",
    "hash": "1024134896048708099118159285025545322256"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Neg>::neg",
    "hash": "130538475238644030741663745177205143073"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Rem<num::wrapping::Wrapping<u8>>>::rem",
    "hash": "13755286687265730496971485407475413230"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Rem>::rem",
    "hash": "85155416948279311324462141721374759160"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Sub<num::wrapping::Wrapping<u8>>>::sub",
    "hash": "8113966107591525710893760235831883633"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Sub>::sub",
    "hash": "164009747475064001484679050963478518324"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::BitAnd<num::wrapping::Wrapping<u8>>>::bitand",
    "hash": "48402160220454116296258682764308725085"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::BitAnd>::bitand",
    "hash": "1153052198131139880113365281514638134683"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::BitOr<num::wrapping::Wrapping<u8>>>::bitor",
    "hash": "172090173808613084984137121569555938043"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::BitOr>::bitor",
    "hash": "1696161332617467543216022189685693107886"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::BitXor<num::wrapping::Wrapping<u8>>>::bitxor",
    "hash": "183148526910531296133049757297123601967"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::BitXor>::bitxor",
    "hash": "128315667351902305653196313105255610500"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::Not>::not",
    "hash": "474185802253909917912578566299204832810"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::Shl<&usize>>::shl",
    "hash": "705981504458269074515118513720634318447"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::Shl<usize>>::shl",
    "hash": "255994419088212431115407692467565397908"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::Shr<&usize>>::shr",
    "hash": "42188465917829583239853574153997218219"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::Shr<usize>>::shr",
    "hash": "1142937263599006535116337966627741221744"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Add<num::wrapping::Wrapping<usize>>>::add",
    "hash": "108859817440426480695891265831279496112"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Add>::add",
    "hash": "184933485792145940311246019496206198268"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Div<num::wrapping::Wrapping<usize>>>::div",
    "hash": "562667935737776857611266819451559779810"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Div>::div",
    "hash": "104976532983578045525197343395299275542"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Mul<num::wrapping::Wrapping<usize>>>::mul",
    "hash": "698978660060853426416365825622597433951"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Mul>::mul",
    "hash": "10913574431215128449802434053753674432"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Neg>::neg",
    "hash": "32684079090620248023247691836534104346"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Rem<num::wrapping::Wrapping<usize>>>::rem",
    "hash": "50727753520983973317527219243498861873"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Rem>::rem",
    "hash": "1817149617830122252618088846260125146332"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Sub<num::wrapping::Wrapping<usize>>>::sub",
    "hash": "161250575970661943275593587602957045315"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Sub>::sub",
    "hash": "139553030014521312096446492065530107562"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::BitAnd<num::wrapping::Wrapping<usize>>>::bitand",
    "hash": "117667712942413883091995093098135045614"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::BitAnd>::bitand",
    "hash": "234950762874715555012138936638895825684"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::BitOr<num::wrapping::Wrapping<usize>>>::bitor",
    "hash": "142786609084270181825665985701272456793"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::BitOr>::bitor",
    "hash": "58949521386964026377698237142003590373"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::BitXor<num::wrapping::Wrapping<usize>>>::bitxor",
    "hash": "113111210833975851245630542895552951001"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::BitXor>::bitxor",
    "hash": "26747083385848703411116161719043579266"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::Not>::not",
    "hash": "453297136283542473812903433912628693838"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::Shl<&usize>>::shl",
    "hash": "1158359034158724440310560048001413127976"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::Shl<usize>>::shl",
    "hash": "1005884730598520233716126423902517048743"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::Shr<&usize>>::shr",
    "hash": "1036141834201057911416102627173308613790"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::Shr<usize>>::shr",
    "hash": "3001307632378449265618542621617156667"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::arith::Add<u128>>::add",
    "hash": "82734289528069015946241299902781950967"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::arith::Add>::add",
    "hash": "1368059339996922269516383221951176464650"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::arith::Div<u128>>::div",
    "hash": "143889520242320860682950811525154242931"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::arith::Div>::div",
    "hash": "154224520866116098196881006847342709094"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::arith::Mul<u128>>::mul",
    "hash": "966455139349630206617809733168595499219"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::arith::Mul>::mul",
    "hash": "68920973388731666942997543632565614305"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::arith::Rem<u128>>::rem",
    "hash": "7491605404170295710719792318678329537"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::arith::Rem>::rem",
    "hash": "159375071383441195297415822979062454818"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::arith::Sub<u128>>::sub",
    "hash": "764907984152003495213282169282664666554"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::arith::Sub>::sub",
    "hash": "1541735454483826441318414389891766703234"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::BitAnd<u128>>::bitand",
    "hash": "72042370228857880082204987048680775813"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::BitAnd>::bitand",
    "hash": "683370716743291462810989997890900158166"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::BitOr<u128>>::bitor",
    "hash": "69616708302925090591334088276208524798"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::BitOr>::bitor",
    "hash": "665284573206974720113768018552587069457"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::BitXor<u128>>::bitxor",
    "hash": "1748301014000791495413147333225170889131"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::BitXor>::bitxor",
    "hash": "111751806292072521412030115615561054527"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Not>::not",
    "hash": "681608784955501143212203566472353285681"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&i128>>::shl",
    "hash": "1383838447537442305010735453570940955285"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&i16>>::shl",
    "hash": "812855686067608330112140278545798526427"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&i32>>::shl",
    "hash": "161317627005043064062474257111056368241"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&i64>>::shl",
    "hash": "1535708111194630479016412538119392488748"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&i8>>::shl",
    "hash": "113612541489429377736169590792189030583"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&isize>>::shl",
    "hash": "224035172991005876917295717183426307970"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&u16>>::shl",
    "hash": "70832947111651877458616953835996337882"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&u32>>::shl",
    "hash": "421414067678281292114814431009408180619"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&u64>>::shl",
    "hash": "95964462714697587516719348334908895808"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&u8>>::shl",
    "hash": "109016110155464120804146263403438400037"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&usize>>::shl",
    "hash": "91374018996362229974363441910324554648"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<i128>>::shl",
    "hash": "78384068952255431158019129011019313038"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<i16>>::shl",
    "hash": "504712935870273724313458617529713040151"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<i32>>::shl",
    "hash": "9745104471783750877992604021747670688"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<i64>>::shl",
    "hash": "141625411705578644727744460002315168446"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<i8>>::shl",
    "hash": "22713506251996639745281381825434888793"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<isize>>::shl",
    "hash": "64828728208674603499278986796512873344"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<u128>>::shl",
    "hash": "37622619798633598901960990220522616889"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<u16>>::shl",
    "hash": "16665772108046481645316075411768223923"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<u32>>::shl",
    "hash": "98456495501599739843830573223949213162"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<u64>>::shl",
    "hash": "151983224674726294621018330395106292134"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<u8>>::shl",
    "hash": "1579671952910543839015869904897729229399"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<usize>>::shl",
    "hash": "180025402500771996494538326177614578090"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl>::shl",
    "hash": "359510708595711890610749657903354018373"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&i128>>::shr",
    "hash": "1268971495478769475110992220113742873578"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&i16>>::shr",
    "hash": "23676456680405944511706316861258050313"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&i32>>::shr",
    "hash": "499539540589652569913068138084443103083"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&i64>>::shr",
    "hash": "671575998613098201316863522077038773168"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&i8>>::shr",
    "hash": "102124771600598323431705094097050200719"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&isize>>::shr",
    "hash": "858187367227578784112466828408092809387"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&u16>>::shr",
    "hash": "1690288693907005049014030550368691185630"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&u32>>::shr",
    "hash": "180500923859564745766439849418313775971"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&u64>>::shr",
    "hash": "754277052318271730712889864174736194383"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&u8>>::shr",
    "hash": "9962752784120610022973566235968468935"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&usize>>::shr",
    "hash": "86037432259685145136747983972520447342"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<i128>>::shr",
    "hash": "182843058101103873686335253686833033106"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<i16>>::shr",
    "hash": "149904660080892647857152968684749971264"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<i32>>::shr",
    "hash": "800764444734789663112771277903617792346"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<i64>>::shr",
    "hash": "164625254313855943761504425919020050028"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<i8>>::shr",
    "hash": "111174098869301780259849118679767270272"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<isize>>::shr",
    "hash": "1009201096279857918714151075436356599503"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<u128>>::shr",
    "hash": "88315783651751419829567145356880536610"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<u16>>::shr",
    "hash": "168338404046575953569808219814018537122"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<u32>>::shr",
    "hash": "16394511495261017352901563062815623849"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<u64>>::shr",
    "hash": "1157815810949274669413693965595826470553"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<u8>>::shr",
    "hash": "141382694539226346279921384392444198945"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<usize>>::shr",
    "hash": "36863596492670592516764678867849963217"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr>::shr",
    "hash": "62881541392075144188407098580208763623"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::arith::Add<u16>>::add",
    "hash": "1835420921884104177112425740248525514083"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::arith::Add>::add",
    "hash": "854393268147535383617943453828889067287"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::arith::Div<u16>>::div",
    "hash": "536711884552490331618443737258406186560"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::arith::Div>::div",
    "hash": "129000606728654663938268142517513076476"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::arith::Mul<u16>>::mul",
    "hash": "989053416161586767013334241812553290728"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::arith::Mul>::mul",
    "hash": "74623112439521002519319573179971326294"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::arith::Rem<u16>>::rem",
    "hash": "120950157105850725604304819023281570006"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::arith::Rem>::rem",
    "hash": "8486985267066988062413450538893414441"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::arith::Sub<u16>>::sub",
    "hash": "145946463077731572542504300330154248862"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::arith::Sub>::sub",
    "hash": "422127666090329670614413205521659149091"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::BitAnd<u16>>::bitand",
    "hash": "28414425187680394093458461897954469200"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::BitAnd>::bitand",
    "hash": "121524937280540128164959926802363578607"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::BitOr<u16>>::bitor",
    "hash": "39338034002717608314910940678351809235"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::BitOr>::bitor",
    "hash": "4289130445703438177217687706258890406"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::BitXor<u16>>::bitxor",
    "hash": "1731697903032050630518315740049853844528"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::BitXor>::bitxor",
    "hash": "1767201022648020183114809789568916482085"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Not>::not",
    "hash": "96417808971026608282239739428832315798"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&i128>>::shl",
    "hash": "7995408941192344354877368047685398519"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&i16>>::shl",
    "hash": "1834925674940870281112146547967669934955"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&i32>>::shl",
    "hash": "1573614315813243355817868280265789653232"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&i64>>::shl",
    "hash": "1258764233097044960515326816405122252063"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&i8>>::shl",
    "hash": "1595776478587335463517491734888862852837"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&isize>>::shl",
    "hash": "1601269604756060124617904577508186383590"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&u128>>::shl",
    "hash": "90662981311700309966485334649902662532"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&u32>>::shl",
    "hash": "4308804393010082158602271103852402907"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&u64>>::shl",
    "hash": "1218284163631580538215043015140815834892"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&u8>>::shl",
    "hash": "87101426554801543489182844591286342527"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&usize>>::shl",
    "hash": "1325675380536601859614629696713499063309"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<i128>>::shl",
    "hash": "91799888983171300924686745092589778074"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<i16>>::shl",
    "hash": "418039225002329712011730572128502790703"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<i32>>::shl",
    "hash": "1080747387910652780414162954965442216726"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<i64>>::shl",
    "hash": "101663081541908529639180572720987025420"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<i8>>::shl",
    "hash": "1366474649405984273317013508446592138825"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<isize>>::shl",
    "hash": "145646281761597831358796528572710586238"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<u128>>::shl",
    "hash": "156923637451523036243161054092372522215"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<u16>>::shl",
    "hash": "490048590875100880711421231794694765819"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<u32>>::shl",
    "hash": "675756367378097154713245812251213474365"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<u64>>::shl",
    "hash": "307185838710442314415689367474766632552"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<u8>>::shl",
    "hash": "51031553588582848747934970876185896414"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<usize>>::shl",
    "hash": "975850444747540803112152972660283696626"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl>::shl",
    "hash": "549248893738290294217666256693611924923"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&i128>>::shr",
    "hash": "191306001583202435213210254586515883296"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&i16>>::shr",
    "hash": "877201431944490009316645810317147331821"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&i32>>::shr",
    "hash": "1649791918434528767415321586561857014090"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&i64>>::shr",
    "hash": "399622283597245232715017686358165565501"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&i8>>::shr",
    "hash": "1295166367773191509013793764321921013663"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&isize>>::shr",
    "hash": "118039410179122607714956437970451739777"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&u128>>::shr",
    "hash": "14471369891961002232624947063383073714"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&u32>>::shr",
    "hash": "737577474724144174311811767510484295451"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&u64>>::shr",
    "hash": "1596575575438337919576786536699965625"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&u8>>::shr",
    "hash": "1295496017730614156012758731413825724206"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&usize>>::shr",
    "hash": "13116772915822434373377540423670336421"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<i128>>::shr",
    "hash": "350341359213965076115808997973322023271"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<i16>>::shr",
    "hash": "180446435546744298735693207876089495874"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<i32>>::shr",
    "hash": "46389004382702130517781892181185613844"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<i64>>::shr",
    "hash": "12114654754382925694828908790977539023"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<i8>>::shr",
    "hash": "72161452216123227567440341112937928182"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<isize>>::shr",
    "hash": "148387799871592359564586749205630334471"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<u128>>::shr",
    "hash": "1764910780602210211417130894600372355795"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<u16>>::shr",
    "hash": "1249845617996916658315251278610356255610"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<u32>>::shr",
    "hash": "718434215564575757311682364526897242381"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<u64>>::shr",
    "hash": "60488211596653991621893929147264260297"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<u8>>::shr",
    "hash": "31353857871106438228633803967821801532"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<usize>>::shr",
    "hash": "299160801020215661715408545222574600170"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr>::shr",
    "hash": "91786511708047246613840566357398677365"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::arith::Add<u32>>::add",
    "hash": "70033593155496069745464701093641887481"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::arith::Add>::add",
    "hash": "170830447827917427677449373901740278907"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::arith::Div<u32>>::div",
    "hash": "53095409267712816454188946367039791363"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::arith::Div>::div",
    "hash": "1015960272468883677912220571694042476548"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::arith::Mul<u32>>::mul",
    "hash": "1098889098768841981316351181843013458697"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::arith::Mul>::mul",
    "hash": "616685395068277821916778085871378598797"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::arith::Rem<u32>>::rem",
    "hash": "20855797299675449403802801117539973982"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::arith::Rem>::rem",
    "hash": "59677023194345341667743303935118870654"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::arith::Sub<u32>>::sub",
    "hash": "38094506305940337238743672236470423966"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::arith::Sub>::sub",
    "hash": "1462954606212807212217235099144943176932"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::BitAnd<u32>>::bitand",
    "hash": "121380644833737710514368909981030146508"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::BitAnd>::bitand",
    "hash": "115957689722409970337153998760788133185"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::BitOr<u32>>::bitor",
    "hash": "1284196093881024676111334680007446719194"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::BitOr>::bitor",
    "hash": "75546471028219167855477290584204466696"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::BitXor<u32>>::bitxor",
    "hash": "97644969783204403851916368727531590129"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::BitXor>::bitxor",
    "hash": "663639709235165461813472821009456489091"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Not>::not",
    "hash": "1383959140131906656615060511976522317964"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&i128>>::shl",
    "hash": "146374138756862017744849736918010715151"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&i16>>::shl",
    "hash": "181109855225366901946866782147185760443"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&i32>>::shl",
    "hash": "128281533429373501379166381824815392303"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&i64>>::shl",
    "hash": "9506709974375741069915375641211465750"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&i8>>::shl",
    "hash": "809050537109644739515114230148564489158"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&isize>>::shl",
    "hash": "1205532712432762379811393051208445392366"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&u128>>::shl",
    "hash": "148102501714327305883940155995580064861"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&u16>>::shl",
    "hash": "993890104083784378212155026106996844421"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&u64>>::shl",
    "hash": "11146732325445421615566140130232455136"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&u8>>::shl",
    "hash": "132569470270946891784342049169597110899"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&usize>>::shl",
    "hash": "978105688280375118410847206641190867809"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<i128>>::shl",
    "hash": "81836041276434679284079101710210543"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<i16>>::shl",
    "hash": "911538807718776080712918237551443621154"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<i32>>::shl",
    "hash": "1628502955774075617511388673319780196973"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<i64>>::shl",
    "hash": "1395952955862927940115824120555965108850"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<i8>>::shl",
    "hash": "176047591529791085979996120051221645491"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<isize>>::shl",
    "hash": "130060858147609046683146381979893154815"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<u128>>::shl",
    "hash": "108028586501389279578422759217348189108"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<u16>>::shl",
    "hash": "25631447140056778005362683390659865726"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<u32>>::shl",
    "hash": "730177359315579413916735956712330786496"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<u64>>::shl",
    "hash": "78238104454220130481083732159681871004"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<u8>>::shl",
    "hash": "523011497796683558815494397292189019522"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<usize>>::shl",
    "hash": "447441523798489484811356342486568148862"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl>::shl",
    "hash": "54493951937708927617206868308756405570"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&i128>>::shr",
    "hash": "1698377770618167965416719820886481538918"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&i16>>::shr",
    "hash": "89698611101096385275427436530976329534"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&i32>>::shr",
    "hash": "142666644228020542754721144426187428488"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&i64>>::shr",
    "hash": "64555615871626835035303724905092136152"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&i8>>::shr",
    "hash": "52019684766904830001491237913582610693"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&isize>>::shr",
    "hash": "60461314157618778511118417373112796502"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&u128>>::shr",
    "hash": "41132024835220750396484302390843187838"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&u16>>::shr",
    "hash": "1741562678782502701711979201696799855079"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&u64>>::shr",
    "hash": "129714383748372549711308383016963783590"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&u8>>::shr",
    "hash": "1514796187456769151515964114842351940219"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&usize>>::shr",
    "hash": "28519740618662261491105091017219635980"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<i128>>::shr",
    "hash": "7878539720532759324282868372734073840"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<i16>>::shr",
    "hash": "190814341904419707811854227983936596611"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<i32>>::shr",
    "hash": "1626200938260846699314813988082562794103"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<i64>>::shr",
    "hash": "134417798279392183087107644095888659481"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<i8>>::shr",
    "hash": "1579628246061942818010625260209759259729"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<isize>>::shr",
    "hash": "568159705419465246015155735623137904042"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<u128>>::shr",
    "hash": "1390622520090582151112185714081741570075"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<u16>>::shr",
    "hash": "104491237479629807345033888506441694180"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<u32>>::shr",
    "hash": "1430066552310688710514899996387606455462"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<u64>>::shr",
    "hash": "71715221213979494702058030179231274351"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<u8>>::shr",
    "hash": "1400712727107429269414147608806897126948"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<usize>>::shr",
    "hash": "175141703061118560018061335649812182895"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr>::shr",
    "hash": "497723569038909810014705728205113236734"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::arith::Add<u64>>::add",
    "hash": "33331557417589730831665925566843047445"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::arith::Add>::add",
    "hash": "163396781071348608202476441382261093085"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::arith::Div<u64>>::div",
    "hash": "119167913234071907523194001676895532562"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::arith::Div>::div",
    "hash": "843353982591817317317675648580757467787"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::arith::Mul<u64>>::mul",
    "hash": "4845573506098039582380911550567106485"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::arith::Mul>::mul",
    "hash": "1393336016143168210016281493527258672130"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::arith::Rem<u64>>::rem",
    "hash": "148870095657924744222372880002073267712"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::arith::Rem>::rem",
    "hash": "946931836166750526115701561906917756562"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::arith::Sub<u64>>::sub",
    "hash": "1192381740732418688411924246696390052940"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::arith::Sub>::sub",
    "hash": "1328451105441438441812507627496957310057"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::BitAnd<u64>>::bitand",
    "hash": "1417238128284550428315535405162383146626"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::BitAnd>::bitand",
    "hash": "210438382073689327710592734984828308071"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::BitOr<u64>>::bitor",
    "hash": "167359529974750999498011573524808630288"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::BitOr>::bitor",
    "hash": "47272795762849062126942129674253603224"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::BitXor<u64>>::bitxor",
    "hash": "180762176507005435482755677247990752025"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::BitXor>::bitxor",
    "hash": "9194986428990627099344386831027217925"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Not>::not",
    "hash": "134839891059554646644329350855584029273"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&i128>>::shl",
    "hash": "392512883733227984814850737253218949177"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&i16>>::shl",
    "hash": "5720714955307291654751503426165651324"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&i32>>::shl",
    "hash": "485259696259518091812399268265771105286"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&i64>>::shl",
    "hash": "124851964479508303817264777850527440109"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&i8>>::shl",
    "hash": "2007102255935635103841166089409607020"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&isize>>::shl",
    "hash": "133522788972975617394105804772949519616"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&u128>>::shl",
    "hash": "164216770921551971893002203663234409594"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&u16>>::shl",
    "hash": "287166772028845529511732115206921859362"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&u32>>::shl",
    "hash": "1013245883307078494113140807543187035457"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&u8>>::shl",
    "hash": "3304024049656499379006064702478054409"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&usize>>::shl",
    "hash": "110479146314355736751499313586796333306"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<i128>>::shl",
    "hash": "1283703044380298346712833589551234261017"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<i16>>::shl",
    "hash": "91850952202987791676529283414426512941"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<i32>>::shl",
    "hash": "58168715859550718015570808253196545736"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<i64>>::shl",
    "hash": "1179983254110602294917108525952407409113"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<i8>>::shl",
    "hash": "155647100058842454993891115528276542290"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<isize>>::shl",
    "hash": "261226803992134287113043386948000050725"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<u128>>::shl",
    "hash": "180659691283896290357936636441738952877"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<u16>>::shl",
    "hash": "72166017761654091721555158786185675818"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<u32>>::shl",
    "hash": "76847114410597172833945562625664919551"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<u64>>::shl",
    "hash": "152975890332242627558953263347430501741"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<u8>>::shl",
    "hash": "1482628189736871723517657803520689486548"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<usize>>::shl",
    "hash": "56268138362984901414944298399504017301"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl>::shl",
    "hash": "154660065264916810441095963143951388380"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&i128>>::shr",
    "hash": "205402991408139705718205586767490221362"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&i16>>::shr",
    "hash": "819787010396980161514942899709338810830"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&i32>>::shr",
    "hash": "8512283520214614348085068092153617517"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&i64>>::shr",
    "hash": "321332476169044990512545791426119738219"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&i8>>::shr",
    "hash": "130986878530520484566696100827089533258"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&isize>>::shr",
    "hash": "153025305532858390415742915257534817719"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&u128>>::shr",
    "hash": "57713145127437431721625740941632479232"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&u16>>::shr",
    "hash": "154791681661556504773838344770058487222"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&u32>>::shr",
    "hash": "120442369664465488355134028163785874627"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&u8>>::shr",
    "hash": "552287348467626204712967041130326335786"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&usize>>::shr",
    "hash": "773371809053715815314730386986008897298"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<i128>>::shr",
    "hash": "3105185029816583918392421812159573279"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<i16>>::shr",
    "hash": "1249446499640926627118346471018460461363"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<i32>>::shr",
    "hash": "160777728834942820932616949996058515505"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<i64>>::shr",
    "hash": "138077895583189014201455395585664810382"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<i8>>::shr",
    "hash": "472230091183965213813073954855855482704"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<isize>>::shr",
    "hash": "121723913311298650364878270836632675503"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<u128>>::shr",
    "hash": "1277606360938721294313264922268395646154"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<u16>>::shr",
    "hash": "85905883965308882365375870458772530485"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<u32>>::shr",
    "hash": "119647381514428261754661648558031868813"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<u64>>::shr",
    "hash": "1620306399243927810018154280291324733321"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<u8>>::shr",
    "hash": "156464307264994646753075926382699830003"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<usize>>::shr",
    "hash": "47480966937559420226726009486499305076"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr>::shr",
    "hash": "21414017961124087231251793075150855002"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::arith::Add<u8>>::add",
    "hash": "1450176940975280811511680647021413221950"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::arith::Add>::add",
    "hash": "12471820624900661671147457116964060412"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::arith::Div<u8>>::div",
    "hash": "729813184486935198012310578133778617459"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::arith::Div>::div",
    "hash": "11429862701388016006108916303590598864"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::arith::Mul<u8>>::mul",
    "hash": "113570411688688540853338733271621808334"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::arith::Mul>::mul",
    "hash": "94825364841709794043216918839895431614"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::arith::Rem<u8>>::rem",
    "hash": "63958408087734703714359412751594610133"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::arith::Rem>::rem",
    "hash": "31804740076636853222437739766941083043"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::arith::Sub<u8>>::sub",
    "hash": "54270614149678762282871058595133279337"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::arith::Sub>::sub",
    "hash": "972865376722062256115991834903153644664"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::BitAnd<u8>>::bitand",
    "hash": "1306599253137065923614281773446707915475"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::BitAnd>::bitand",
    "hash": "58648221330900769177726510350052223191"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::BitOr<u8>>::bitor",
    "hash": "654783384242718781110098426298919994956"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::BitOr>::bitor",
    "hash": "44575442811320202886261647944902279214"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::BitXor<u8>>::bitxor",
    "hash": "146063172940146169013544499503021589576"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::BitXor>::bitxor",
    "hash": "44543816578077988163322341160714439621"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Not>::not",
    "hash": "45468103384529318562920457208506891147"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&i128>>::shl",
    "hash": "153548240768005530929286426227834809489"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&i16>>::shl",
    "hash": "134385329897832391781854079098601956214"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&i32>>::shl",
    "hash": "4109678121660482676460389992354965477"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&i64>>::shl",
    "hash": "39064081088966793910107516360345615995"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&i8>>::shl",
    "hash": "329696116232641918114711286783213805705"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&isize>>::shl",
    "hash": "151635826536299364972571268511224746375"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&u128>>::shl",
    "hash": "143360053359849916775436691202375538477"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&u16>>::shl",
    "hash": "56006661203730835244511408555593134498"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&u32>>::shl",
    "hash": "35775918316891594766704332212329313429"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&u64>>::shl",
    "hash": "1304709069431027470010486614661938867824"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&usize>>::shl",
    "hash": "94618361139796208341328266184379844179"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<i128>>::shl",
    "hash": "1104124595083431481911170398706285170822"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<i16>>::shl",
    "hash": "13346384547147083570243518556164599482"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<i32>>::shl",
    "hash": "14541031787190459911501526392193115923"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<i64>>::shl",
    "hash": "3307494033759957709278742393229386408"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<i8>>::shl",
    "hash": "1446550290865725360510559893727930152108"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<isize>>::shl",
    "hash": "167985306724794424828882663233562312107"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<u128>>::shl",
    "hash": "25878410218074916272037511531781236671"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<u16>>::shl",
    "hash": "1603900275397604010712329210008593377308"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<u32>>::shl",
    "hash": "69541779994415077251511490130632924585"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<u64>>::shl",
    "hash": "1329800117021898110211157514542469643770"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<u8>>::shl",
    "hash": "183499233831915322712413717449352584182"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<usize>>::shl",
    "hash": "28549061408659462887791365415551441686"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl>::shl",
    "hash": "179812035835771431055884940179856957578"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&i128>>::shr",
    "hash": "1086751539164161270112538117861787675700"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&i16>>::shr",
    "hash": "180823366389138230618273464646893354858"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&i32>>::shr",
    "hash": "402351214406065676813072336990139334028"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&i64>>::shr",
    "hash": "139454997083324991669514274264384138913"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&i8>>::shr",
    "hash": "1396530612580186138917536057671385344171"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&isize>>::shr",
    "hash": "99216345946045910903583198604272663127"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&u128>>::shr",
    "hash": "331018506418819924616595722956472962057"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&u16>>::shr",
    "hash": "1389463599383797700313166643744412375950"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&u32>>::shr",
    "hash": "1301839706036347398313849882351330338938"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&u64>>::shr",
    "hash": "79061370817141484591843639450871823445"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&usize>>::shr",
    "hash": "992498190890676082112343058439603788776"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<i128>>::shr",
    "hash": "67712302402622023405361259037015738955"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<i16>>::shr",
    "hash": "87673204901337065404769075130844050175"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<i32>>::shr",
    "hash": "37121642278878901037809655144147841312"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<i64>>::shr",
    "hash": "5666322687630611280521739130823572097"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<i8>>::shr",
    "hash": "455089624145437675613828691201846260307"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<isize>>::shr",
    "hash": "62235739251903262028617766428131359133"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<u128>>::shr",
    "hash": "727890128839327467413253373100370752123"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<u16>>::shr",
    "hash": "92752772566448262146269129744376498197"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<u32>>::shr",
    "hash": "93142941748049122786639886904668761"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<u64>>::shr",
    "hash": "381482774784597994712745287159475711626"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<u8>>::shr",
    "hash": "452727797262814055517839071463497164798"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<usize>>::shr",
    "hash": "1271401683466613494511639416050290091548"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr>::shr",
    "hash": "759480743252128386315526013362574129747"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::arith::Add<usize>>::add",
    "hash": "1825994194789046965112915513657718135589"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::arith::Add>::add",
    "hash": "11764961515515950298043216116330121006"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::arith::Div<usize>>::div",
    "hash": "7196002893950985818832164879412652068"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::arith::Div>::div",
    "hash": "1426887536633609091213852998379949011942"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::arith::Mul<usize>>::mul",
    "hash": "24852367499495304485153491900127988151"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::arith::Mul>::mul",
    "hash": "150163639109559689083492277857504462937"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::arith::Rem<usize>>::rem",
    "hash": "1541474629289746765612034722308496514680"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::arith::Rem>::rem",
    "hash": "21020527073179568516155983604511600101"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::arith::Sub<usize>>::sub",
    "hash": "158227952296256296186620655005473701328"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::arith::Sub>::sub",
    "hash": "859378723764991095811195085555427104407"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::BitAnd<usize>>::bitand",
    "hash": "118749287005435127227658704651739947094"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::BitAnd>::bitand",
    "hash": "148883724030399851413808810259250641234"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::BitOr<usize>>::bitor",
    "hash": "81986267404833965714455535680918903739"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::BitOr>::bitor",
    "hash": "666767564672854709717306393187817062877"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::BitXor<usize>>::bitxor",
    "hash": "6674558348999862231483559443469522742"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::BitXor>::bitxor",
    "hash": "1269977774979252352011418047624393463171"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Not>::not",
    "hash": "83201146647483598085497875820318842215"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&i128>>::shl",
    "hash": "147288205365117239468566585456857289141"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&i16>>::shl",
    "hash": "71099005334795953568709972140229227279"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&i32>>::shl",
    "hash": "142843970058905482911004701791952471659"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&i64>>::shl",
    "hash": "5314336281881298321356527315565027304"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&i8>>::shl",
    "hash": "57954553351533777269888549588770122620"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&isize>>::shl",
    "hash": "139517171560462546815726851417373476662"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&u128>>::shl",
    "hash": "1813161645759317828014804187485650405259"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&u16>>::shl",
    "hash": "1780388358200541992611979601606498130513"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&u32>>::shl",
    "hash": "157933251659659672709721216545672941513"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&u64>>::shl",
    "hash": "24868738786821075531057654255874617425"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&u8>>::shl",
    "hash": "942728885585609359915553555454019576279"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<i128>>::shl",
    "hash": "512988778594167032011666958124514951793"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<i16>>::shl",
    "hash": "778303778570490043218309284195382574568"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<i32>>::shl",
    "hash": "1516243086020496029366500688814148608"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<i64>>::shl",
    "hash": "1330800396806147995711908328412182787940"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<i8>>::shl",
    "hash": "128591827988940754931275790611828845238"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<isize>>::shl",
    "hash": "157970885883590653318570597605293787961"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<u128>>::shl",
    "hash": "135501402210930935413554316623283655927"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<u16>>::shl",
    "hash": "63157261267604179314460573612548647777"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<u32>>::shl",
    "hash": "810116896732251771513062968300394223031"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<u64>>::shl",
    "hash": "113423777502842132173577369420688342136"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<u8>>::shl",
    "hash": "45139398918120095354564024462999233284"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<usize>>::shl",
    "hash": "852895959509117699814465021405787805318"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl>::shl",
    "hash": "133494807453391920515942712170532515783"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&i128>>::shr",
    "hash": "10620112275569371844131176430622996319"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&i16>>::shr",
    "hash": "1440085918663671409012704342399616065100"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&i32>>::shr",
    "hash": "208131555663274117013160730303715890405"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&i64>>::shr",
    "hash": "171030368808518374011836464064487007224"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&i8>>::shr",
    "hash": "8672799597825170546670241604552181911"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&isize>>::shr",
    "hash": "104034143376858478966575296192671381492"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&u128>>::shr",
    "hash": "54190114424512004836723622001702376168"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&u16>>::shr",
    "hash": "1056000977560548137016779702763053548396"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&u32>>::shr",
    "hash": "9347288501147751705685723772492277594"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&u64>>::shr",
    "hash": "1530880789751038105615014881971867508705"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&u8>>::shr",
    "hash": "128912470132151468404586954351526434798"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<i128>>::shr",
    "hash": "1429031653702389293514314021692581369382"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<i16>>::shr",
    "hash": "1530040105882327158712611874744302544494"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<i32>>::shr",
    "hash": "646734427034679215515449877423961837466"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<i64>>::shr",
    "hash": "769783741192906517615844839102417369854"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<i8>>::shr",
    "hash": "49762848597465359201369343891127542787"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<isize>>::shr",
    "hash": "1724782263971276776311210060619893643943"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<u128>>::shr",
    "hash": "310258427275170955110538481433256442859"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<u16>>::shr",
    "hash": "127264401621156307583600334584457354305"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<u32>>::shr",
    "hash": "1315679867081711816318186438541219064694"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<u64>>::shr",
    "hash": "1157752715478968414116495420031434210352"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<u8>>::shr",
    "hash": "7004271595067559143494947600662922207"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<usize>>::shr",
    "hash": "3744076839691443012386021938329124196"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr>::shr",
    "hash": "828755626651577801111656916872016381994"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<bool as ops::bit::BitAnd<&bool>>::bitand",
    "hash": "77668908298663733032226436761840213633"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<bool as ops::bit::BitAndAssign<&bool>>::bitand_assign",
    "hash": "104891665549736895492023087598938299512"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<bool as ops::bit::BitOr<&bool>>::bitor",
    "hash": "4991280812392628402231440048792398989"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<bool as ops::bit::BitOrAssign<&bool>>::bitor_assign",
    "hash": "33365749677149259034954781568303036706"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<bool as ops::bit::BitXor<&bool>>::bitxor",
    "hash": "792116821238867620014874936495311436284"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<bool as ops::bit::BitXorAssign<&bool>>::bitxor_assign",
    "hash": "1607849616613687371513559705966949369453"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f128 as ops::arith::Add<&f128>>::add",
    "hash": "54934051275090074431975626844324756794"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f128 as ops::arith::AddAssign<&f128>>::add_assign",
    "hash": "11602203155233726392998394425736614990"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f128 as ops::arith::Div<&f128>>::div",
    "hash": "975528482471841736117778489735429144115"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f128 as ops::arith::DivAssign<&f128>>::div_assign",
    "hash": "166467277260184652821185087423970392011"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f128 as ops::arith::Mul<&f128>>::mul",
    "hash": "51961118673010123252905102547520105560"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f128 as ops::arith::MulAssign<&f128>>::mul_assign",
    "hash": "177648775352790466857282330902098326909"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f128 as ops::arith::Rem<&f128>>::rem",
    "hash": "19757719817578762717398958836643451837"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f128 as ops::arith::RemAssign<&f128>>::rem_assign",
    "hash": "957474170912725518413132143458820831362"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f128 as ops::arith::Sub<&f128>>::sub",
    "hash": "1348364691876949452613877452476035508691"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f128 as ops::arith::SubAssign<&f128>>::sub_assign",
    "hash": "126666412888530529835259550563831469847"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f16 as ops::arith::Add<&f16>>::add",
    "hash": "1161190888950183033110830281187001788031"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f16 as ops::arith::AddAssign<&f16>>::add_assign",
    "hash": "157143843428663036861829184273538173337"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f16 as ops::arith::Div<&f16>>::div",
    "hash": "934249694515085265816315365637378401053"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f16 as ops::arith::DivAssign<&f16>>::div_assign",
    "hash": "1413403813696346971678012923298213001"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f16 as ops::arith::Mul<&f16>>::mul",
    "hash": "995340285067628267115511312931057994319"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f16 as ops::arith::MulAssign<&f16>>::mul_assign",
    "hash": "82683667931698202054204043329686619970"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f16 as ops::arith::Rem<&f16>>::rem",
    "hash": "127877788550872661292757104981983933193"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f16 as ops::arith::RemAssign<&f16>>::rem_assign",
    "hash": "352402199144305102717609094404420846880"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f16 as ops::arith::Sub<&f16>>::sub",
    "hash": "687187487174757070815142979308465023824"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f16 as ops::arith::SubAssign<&f16>>::sub_assign",
    "hash": "1229367076273572715311139873680393863320"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f32 as ops::arith::Add<&f32>>::add",
    "hash": "329424281969913405916758665102423842131"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f32 as ops::arith::AddAssign<&f32>>::add_assign",
    "hash": "131363467900616297419348330031436668199"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f32 as ops::arith::Div<&f32>>::div",
    "hash": "929266892331746180713017364462744691238"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f32 as ops::arith::DivAssign<&f32>>::div_assign",
    "hash": "131248800487678711334062678319753476316"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f32 as ops::arith::Mul<&f32>>::mul",
    "hash": "1367938817600533635113575158565400069307"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f32 as ops::arith::MulAssign<&f32>>::mul_assign",
    "hash": "1540295675351962027518019986324965433863"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f32 as ops::arith::Rem<&f32>>::rem",
    "hash": "1007915103193673748917425066874075655597"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f32 as ops::arith::RemAssign<&f32>>::rem_assign",
    "hash": "95570051789741164724735289754348429577"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f32 as ops::arith::Sub<&f32>>::sub",
    "hash": "859643795356927077213741155956164834484"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f32 as ops::arith::SubAssign<&f32>>::sub_assign",
    "hash": "159060448590142899303238721013977318234"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f64 as ops::arith::Add<&f64>>::add",
    "hash": "982975655936520697612225030774426602124"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f64 as ops::arith::AddAssign<&f64>>::add_assign",
    "hash": "237873795418536586910652161490088854130"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f64 as ops::arith::Div<&f64>>::div",
    "hash": "1760085970258207219717735666414258675878"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f64 as ops::arith::DivAssign<&f64>>::div_assign",
    "hash": "1481053180543240376012269137720404774662"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f64 as ops::arith::Mul<&f64>>::mul",
    "hash": "977104548642875856713666272240759537002"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f64 as ops::arith::MulAssign<&f64>>::mul_assign",
    "hash": "214442269685416045110218568479726725342"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f64 as ops::arith::Rem<&f64>>::rem",
    "hash": "93138337462101792465687020776876836628"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f64 as ops::arith::RemAssign<&f64>>::rem_assign",
    "hash": "165785437539010707763138994295724317441"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f64 as ops::arith::Sub<&f64>>::sub",
    "hash": "95672016099363052333996466075731818699"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f64 as ops::arith::SubAssign<&f64>>::sub_assign",
    "hash": "133870422498065270056320868414659826447"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::arith::Add<&i128>>::add",
    "hash": "114545824265515893441477454134551387687"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::arith::AddAssign<&i128>>::add_assign",
    "hash": "956283264113187028815210015242845610962"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::arith::Div<&i128>>::div",
    "hash": "36063902368621463004441055409419003834"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::arith::DivAssign<&i128>>::div_assign",
    "hash": "155385422469450611399216523358957400842"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::arith::Mul<&i128>>::mul",
    "hash": "180518380496321456878127964860767172180"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::arith::MulAssign<&i128>>::mul_assign",
    "hash": "59401595674447088412742890259598046731"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::arith::Rem<&i128>>::rem",
    "hash": "155964553619169456539998935044831778416"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::arith::RemAssign<&i128>>::rem_assign",
    "hash": "69135370191384571925807796551022445515"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::arith::Sub<&i128>>::sub",
    "hash": "106229787906788619977580510236797690028"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::arith::SubAssign<&i128>>::sub_assign",
    "hash": "1627850595307722218713124413167528173811"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::BitAnd<&i128>>::bitand",
    "hash": "40715639933211699259288827888629152746"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::BitAndAssign<&i128>>::bitand_assign",
    "hash": "1020890394448684713011071252795742064704"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::BitOr<&i128>>::bitor",
    "hash": "48096658079868321673141173653884018252"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::BitOrAssign<&i128>>::bitor_assign",
    "hash": "68492256087026216154864316457095158477"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::BitXor<&i128>>::bitxor",
    "hash": "963422000192796097611290580678198235348"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::BitXorAssign<&i128>>::bitxor_assign",
    "hash": "177702107941320258926209467485529619"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&i128>>::shl",
    "hash": "14984636461477266188440265038974301530"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&i16>>::shl",
    "hash": "38363939128698146082096633085543577539"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&i32>>::shl",
    "hash": "180411666635455910719929075137956955032"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&i64>>::shl",
    "hash": "645557200650174453317687769875771417124"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&i8>>::shl",
    "hash": "523514605086288913316987272932988850087"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&isize>>::shl",
    "hash": "1097932567737949965712378053217579935105"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&u128>>::shl",
    "hash": "1185026915721454471612871785102548678616"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&u16>>::shl",
    "hash": "948633227301788983210538087601756906052"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&u32>>::shl",
    "hash": "1686028144601267643011749997524873551522"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&u64>>::shl",
    "hash": "372967551347800167717648806682610375722"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&u8>>::shl",
    "hash": "1534637241572261189516801178574344306933"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&usize>>::shl",
    "hash": "589437227359416080210212725148866879623"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "12016732080440119927804325324097186719"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "51091453180274693021859208247308698525"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "68953961646238988336547890813766502139"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "1156740749869261836012661954770280866062"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "130363757398169413217777220775438018045"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "1712934276785262254115447643992005011039"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "63342211296298726017511365152330790315"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "6545742823933068843412682201554790533"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "1013095564822238599211217371665081373590"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "242390716004288941915964653990989610572"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "32516930000178740958023128992315691364"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "90011926086805283646151571464196755024"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&i128>>::shr",
    "hash": "95643957364873916919664391601064134628"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&i16>>::shr",
    "hash": "1391136281403195995713431738635356804707"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&i32>>::shr",
    "hash": "499623258836392825316413493620670456239"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&i64>>::shr",
    "hash": "137638669549053230995521032226802602806"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&i8>>::shr",
    "hash": "905613681680810037812282890866967902485"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&isize>>::shr",
    "hash": "1026009870420008420515722817828825939977"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&u128>>::shr",
    "hash": "101452276421029137691587614902986482014"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&u16>>::shr",
    "hash": "1063150746978699843816211863910114350607"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&u32>>::shr",
    "hash": "1755268987791934137011903313573554574115"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&u64>>::shr",
    "hash": "1584470964692854981414154229500287345841"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&u8>>::shr",
    "hash": "135538472958078713389023482022081887094"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&usize>>::shr",
    "hash": "1309578256761506046214518430026452043275"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "264400900254326142111570371369040970119"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "1372730432022910529013738743463356510180"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "4978666306179714015054638506704997234"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "1843975455763669003017474916492218810931"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "812464472401606351013750930455218623276"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "12437153188584918784419293342245205850"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "49982104887316374235264225599159660351"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "794390564665375616417098943499674261377"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "1219714424906045362314531954717483215483"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "146278415105455598314413270528357268155"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "1306896208071433705010346024458158922369"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "173007190119150701475488622458575148595"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::arith::Add<&i16>>::add",
    "hash": "14251242422510758811335459972154583914"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::arith::AddAssign<&i16>>::add_assign",
    "hash": "72234125394727902663803565187381189836"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::arith::Div<&i16>>::div",
    "hash": "114499226763559011639188581403912807334"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::arith::DivAssign<&i16>>::div_assign",
    "hash": "163559599963835616593932973160362105489"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::arith::Mul<&i16>>::mul",
    "hash": "97487264614903428162671787396524187767"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::arith::MulAssign<&i16>>::mul_assign",
    "hash": "63539331101969995475929152669840633019"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::arith::Rem<&i16>>::rem",
    "hash": "113612625298396876752855389508157183108"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::arith::RemAssign<&i16>>::rem_assign",
    "hash": "1359350094956498708817357378835298180127"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::arith::Sub<&i16>>::sub",
    "hash": "119130059356627178734846662510538257803"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::arith::SubAssign<&i16>>::sub_assign",
    "hash": "796374607085193852810269917864883179550"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::BitAnd<&i16>>::bitand",
    "hash": "108322297613592287405553860062462743755"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::BitAndAssign<&i16>>::bitand_assign",
    "hash": "1567250105646941888310606866848979228447"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::BitOr<&i16>>::bitor",
    "hash": "96610512134135327528483954969271922269"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::BitOrAssign<&i16>>::bitor_assign",
    "hash": "132006727085639250233256713332343642322"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::BitXor<&i16>>::bitxor",
    "hash": "101731050079908242844831991158852401470"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::BitXorAssign<&i16>>::bitxor_assign",
    "hash": "1199190101527718472112414671044868088982"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&i128>>::shl",
    "hash": "31307452919813496591092413034439950192"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&i16>>::shl",
    "hash": "1384173985703855952813119055071796904849"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&i32>>::shl",
    "hash": "1698458133116898626314659516313601287219"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&i64>>::shl",
    "hash": "1373443053241495869742077603452518609"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&i8>>::shl",
    "hash": "1518557881150521008218399264332731550555"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&isize>>::shl",
    "hash": "357316253993425046117210924619793983888"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&u128>>::shl",
    "hash": "1027579833019070856714952456010475973376"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&u16>>::shl",
    "hash": "444160916099086111211474143963003639754"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&u32>>::shl",
    "hash": "10576627950274670244154559934723857666"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&u64>>::shl",
    "hash": "189554748401514298414972670498934769951"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&u8>>::shl",
    "hash": "636665416502332632912097634263512023171"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&usize>>::shl",
    "hash": "56493005654322745286819025928677801004"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "970365620802595577511201446451390503108"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "695668567259598529412808111583573011650"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "51801432399497451892486775464531960787"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "40985610417604824396859420136166223104"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "3284985056503405331803554172813897894"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "603960992310404116813358658086228226529"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "136815154097636041418968158590540558029"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "1562754938202676304912496294384079725271"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "443959638382042603816152799958379066940"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "87174835492659771234051930803548693822"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "74892110214747568154193332524314429772"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "17005404754820061414827439427334570214"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&i128>>::shr",
    "hash": "136279136623198532017855148461553027648"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&i16>>::shr",
    "hash": "1014823018160487291214408386278020714647"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&i32>>::shr",
    "hash": "878136091841639183711042894985846972131"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&i64>>::shr",
    "hash": "107116657715829963528934258819834995389"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&i8>>::shr",
    "hash": "73083907822825617611576143425366585325"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&isize>>::shr",
    "hash": "166622804396880978348006364085261005685"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&u128>>::shr",
    "hash": "34921550644759478733012896108432081030"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&u16>>::shr",
    "hash": "1509357632862297082111896398334582775935"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&u32>>::shr",
    "hash": "1217758544912578384617808821743969124557"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&u64>>::shr",
    "hash": "1581377335621831968414314967815432250960"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&u8>>::shr",
    "hash": "140297301831719234721640926825143938705"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&usize>>::shr",
    "hash": "152747153928389907521530165788673338001"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "72528301137840878621647379659222081240"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "1633320673548010626310899526896486554951"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "46535900811240358737277792424873598499"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "1600637981160887446816914998624719304455"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "93750131162841910872106090758910853476"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "1740259275583925722918183749530667186881"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "1159090768253993699015928043954974824884"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "136661281452881077802071776484111024167"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "1634386804437937927215635525936992933955"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "412392819917572690711889620249104317450"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "278034579454058040536162496818645992"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "517657813439753455517669801685714994034"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::arith::Add<&i32>>::add",
    "hash": "74820973598209560359288848777852857923"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::arith::AddAssign<&i32>>::add_assign",
    "hash": "13363730902893962187688580887652641729"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::arith::Div<&i32>>::div",
    "hash": "329523781381934867613868590574581309051"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::arith::DivAssign<&i32>>::div_assign",
    "hash": "2702348955541197049671642164162124444"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::arith::Mul<&i32>>::mul",
    "hash": "135234661813878885084213698139927883382"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::arith::MulAssign<&i32>>::mul_assign",
    "hash": "133145444556103818003474717663351893886"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::arith::Rem<&i32>>::rem",
    "hash": "1217824091838775545212795125154356269387"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::arith::RemAssign<&i32>>::rem_assign",
    "hash": "86123851767370717272168874720690838544"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::arith::Sub<&i32>>::sub",
    "hash": "155572844697267510612682389754231995158"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::arith::SubAssign<&i32>>::sub_assign",
    "hash": "128737403100533769695944676428323191606"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::BitAnd<&i32>>::bitand",
    "hash": "5931897964367307037218252471193728354"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::BitAndAssign<&i32>>::bitand_assign",
    "hash": "1002091101716257371017465078823704354912"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::BitOr<&i32>>::bitor",
    "hash": "46189164185107806863301104754393144075"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::BitOrAssign<&i32>>::bitor_assign",
    "hash": "116215686923794596058425273579429898260"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::BitXor<&i32>>::bitxor",
    "hash": "119317407676641730647596389133818749060"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::BitXorAssign<&i32>>::bitxor_assign",
    "hash": "827435277632533631915131857981734407399"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&i128>>::shl",
    "hash": "172372101531285085039830071750943780539"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&i16>>::shl",
    "hash": "2109931966283820527630437989647602245"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&i32>>::shl",
    "hash": "910999868950995871015516053170703449060"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&i64>>::shl",
    "hash": "40882081138207050278664224036878384675"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&i8>>::shl",
    "hash": "61591119580566985375058889394358792753"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&isize>>::shl",
    "hash": "1414858859685522463816272258121793701835"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&u128>>::shl",
    "hash": "34223969597807711743492936281230103398"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&u16>>::shl",
    "hash": "115878849677982524665605801231063522334"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&u32>>::shl",
    "hash": "1718520397352588415616386869646519234423"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&u64>>::shl",
    "hash": "144415611816639112674741934634549697159"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&u8>>::shl",
    "hash": "11388517342998318337683217946133496922"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&usize>>::shl",
    "hash": "20283260052229411144676799266596887030"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "120188111792185228552083059963242688467"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "1794074814581016089912788130134794620099"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "874338999576682736916158675301274056696"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "60090792942542607194945662078085110538"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "223887750028560705715625453161131420277"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "78964361520374556606475040260827437624"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "43627110148978539964323242262966035947"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "3458036056432986718081443406397320140"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "12108504097102775548264019256936707104"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "101173952972331809532945997765950816440"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "9342231760384964189355498854329916592"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "325898505715790067411872180302176156217"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&i128>>::shr",
    "hash": "928451950345208894015248643131211204029"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&i16>>::shr",
    "hash": "110980484121837364862578106299918987069"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&i32>>::shr",
    "hash": "8759426850122440952822704544864307134"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&i64>>::shr",
    "hash": "73925974614589634149115303023301757040"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&i8>>::shr",
    "hash": "1762604847687987777715313213216519915658"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&isize>>::shr",
    "hash": "139776624535643334596620927577082017653"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&u128>>::shr",
    "hash": "660522378472212848612608031986836919720"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&u16>>::shr",
    "hash": "15184637279743868374763657922606868812"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&u32>>::shr",
    "hash": "28756855361848655247028594612002366977"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&u64>>::shr",
    "hash": "778545855597045054715930191134307556159"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&u8>>::shr",
    "hash": "141843418289604055113621204912591940846"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&usize>>::shr",
    "hash": "105538677269464983811002192263882430732"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "53333221716071648355100671786915079526"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "893626155806409237813358474569901495984"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "1813870681465680246014529045986153601895"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "1108654067855658193712198852900165862243"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "166688096840989200124438616084486678380"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "46369017114389239511325370842861443192"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "113380471615554851643964249281371756205"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "153935464145547119963305332125446801453"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "288902087403751995514819384751567492861"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "66103011149201734616070759383022409337"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "78384259045431364677904006867925853313"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "41425856379337626308108133795125568500"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::arith::Add<&i64>>::add",
    "hash": "621417160278843779516306826218108227030"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::arith::AddAssign<&i64>>::add_assign",
    "hash": "45780376162797751855215476177303846675"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::arith::Div<&i64>>::div",
    "hash": "37892061058365160537163479119590189251"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::arith::DivAssign<&i64>>::div_assign",
    "hash": "1826531917053891973810515589313616332741"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::arith::Mul<&i64>>::mul",
    "hash": "96413324016636961618192025250009638183"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::arith::MulAssign<&i64>>::mul_assign",
    "hash": "11084685148374047345375931849696543342"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::arith::Rem<&i64>>::rem",
    "hash": "37263033957171297179115866799685234803"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::arith::RemAssign<&i64>>::rem_assign",
    "hash": "1654258414274204642013373289018854809825"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::arith::Sub<&i64>>::sub",
    "hash": "1499876157039757054213576736430357161598"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::arith::SubAssign<&i64>>::sub_assign",
    "hash": "2929950153265441082861219625407482686"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::BitAnd<&i64>>::bitand",
    "hash": "533392532981290140411812648564011609130"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::BitAndAssign<&i64>>::bitand_assign",
    "hash": "36246029427736319354378245050884073754"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::BitOr<&i64>>::bitor",
    "hash": "72199379048014460328228372799099719326"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::BitOrAssign<&i64>>::bitor_assign",
    "hash": "135248643296514268475386654425615771311"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::BitXor<&i64>>::bitxor",
    "hash": "213023564755064787515167821226378949751"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::BitXorAssign<&i64>>::bitxor_assign",
    "hash": "1135070892491756301316200978845934546521"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&i128>>::shl",
    "hash": "38618312384401341922772387142531790396"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&i16>>::shl",
    "hash": "23067987568570556011150322596191708709"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&i32>>::shl",
    "hash": "153833852018301352877116771547012582948"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&i64>>::shl",
    "hash": "150478512124952641335658498864210539053"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&i8>>::shl",
    "hash": "144396427640511530974366817112137772245"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&isize>>::shl",
    "hash": "168921480684202237416569154524282259401"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&u128>>::shl",
    "hash": "1146211279304716162213864856885756508996"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&u16>>::shl",
    "hash": "94781794557798756104112418186218687269"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&u32>>::shl",
    "hash": "442611581563960907416917638717567156126"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&u64>>::shl",
    "hash": "37754680675501629723525456326930036611"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&u8>>::shl",
    "hash": "135809373688682186723408285877143914431"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&usize>>::shl",
    "hash": "187112588819476892517068374668623172843"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "1603751669371622705710538085656939986237"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "9200802789476607479805079307792990353"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "571032323788168546714191417005769158104"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "1836237060569335956913245778319371256614"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "352534628599580148216364147786213650165"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "138883885698765171596361121368398635419"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "732486413096870761913534474712988072612"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "1283967497878366812021211992318663114"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "22419905131079435971694144766127024416"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "1426071402992761365118053552480374167496"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "626161772288660810311712556050579802337"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "110011443250924874366434258775829348963"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&i128>>::shr",
    "hash": "21021036557344671437826926363887697112"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&i16>>::shr",
    "hash": "75206547525729491019363767560887674859"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&i32>>::shr",
    "hash": "170237449997668343814062732774323925687"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&i64>>::shr",
    "hash": "150715371687695606082105657256597366296"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&i8>>::shr",
    "hash": "825632344154222640617752374792004892075"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&isize>>::shr",
    "hash": "15376518174565761177505422970931399486"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&u128>>::shr",
    "hash": "417496103856432035612402156594951829066"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&u16>>::shr",
    "hash": "5528845397537497689243733824636360497"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&u32>>::shr",
    "hash": "60459652709497901182885951489288518532"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&u64>>::shr",
    "hash": "431447600187760917911402836197251377628"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&u8>>::shr",
    "hash": "118691949973897360158907485529336039588"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&usize>>::shr",
    "hash": "161299441837663092724956132244252241963"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "1141459628545108441717031406952422354040"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "920628206244618579412112346530727450366"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "15562864100631398054143900939039244734"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "917055573538743924114576138867191413583"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "350784664029020347115744691416943725356"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "1654838746428571223415112528395525095695"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "1592339171367325369711847832885606845868"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "130216253737316168578419133517885841961"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "74577537473265354318064339006223386469"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "55130173963189312579835382658864275990"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "654296666793668967614124729729311294859"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "315979869777595000715813728416900434198"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::arith::Add<&i8>>::add",
    "hash": "957945827905253094214148150501985267118"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::arith::AddAssign<&i8>>::add_assign",
    "hash": "151824909519449230789821770434221484123"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::arith::Div<&i8>>::div",
    "hash": "1014305670345667473217152203814532805686"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::arith::DivAssign<&i8>>::div_assign",
    "hash": "271954025808879269913260018153998216701"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::arith::Mul<&i8>>::mul",
    "hash": "880908813610896830316291420323192782195"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::arith::MulAssign<&i8>>::mul_assign",
    "hash": "119057997268843357621511160966518793402"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::arith::Rem<&i8>>::rem",
    "hash": "248882315942977572811945676937095043009"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::arith::RemAssign<&i8>>::rem_assign",
    "hash": "505427473123391206416818727915614310598"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::arith::Sub<&i8>>::sub",
    "hash": "1655628454729527675417561531133177474892"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::arith::SubAssign<&i8>>::sub_assign",
    "hash": "36225250793039808965994696852643908546"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::BitAnd<&i8>>::bitand",
    "hash": "1004180067607670762815887478187194711002"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::BitAndAssign<&i8>>::bitand_assign",
    "hash": "26727425218073683856778199483834498331"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::BitOr<&i8>>::bitor",
    "hash": "192603323422720427313441569094205485120"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::BitOrAssign<&i8>>::bitor_assign",
    "hash": "405772589721555995012601784912730541040"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::BitXor<&i8>>::bitxor",
    "hash": "66202926021140699215051980833384320624"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::BitXorAssign<&i8>>::bitxor_assign",
    "hash": "1482047964947779111016344767533616516404"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&i128>>::shl",
    "hash": "154704729601342888696331928886814934299"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&i16>>::shl",
    "hash": "2265155874147341041042916176815264711"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&i32>>::shl",
    "hash": "182258149339194923967994666897074559506"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&i64>>::shl",
    "hash": "33254729709612489942740302161031187904"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&i8>>::shl",
    "hash": "20485112305777671054061256971715532944"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&isize>>::shl",
    "hash": "38619373363902328606507150166449290837"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&u128>>::shl",
    "hash": "14865803260963625536367108884237714287"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&u16>>::shl",
    "hash": "1657033549584310605911422084084492035132"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&u32>>::shl",
    "hash": "538905085312201006117367809882160902838"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&u64>>::shl",
    "hash": "958094658473999834618076050611629601421"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&u8>>::shl",
    "hash": "120217464668136078224077204967558499883"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&usize>>::shl",
    "hash": "51556225948989796347268074670536848682"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "631868036938364661516134156469499418549"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "770287913732031103710408286322992957747"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "802929655138356501111641958358752068725"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "687968302977570266612085435418044497436"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "112210500944709357089951920678192371184"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "10312707536031133527799766663622098601"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "132209300385111394914234123025104680297"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "1499316173599621306517791625056909032320"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "269434601536366676711052281195790813471"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "159012461912120357171878434438211938209"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "13242215843841384991216406153081006458"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "1516961640768242471415381325612473432468"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&i128>>::shr",
    "hash": "10131681027671792866470288229710194944"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&i16>>::shr",
    "hash": "116813539817265930619744891821804360633"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&i32>>::shr",
    "hash": "145181972408978905689696368001107778987"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&i64>>::shr",
    "hash": "2201253865479409619141666524829118476"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&i8>>::shr",
    "hash": "87550087737003032482726246132200457262"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&isize>>::shr",
    "hash": "1284675577761042364016416860090285207492"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&u128>>::shr",
    "hash": "711773914523466572915425393516635323017"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&u16>>::shr",
    "hash": "15005796739324569378545666306012977682"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&u32>>::shr",
    "hash": "24496257897734848796072233017297376732"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&u64>>::shr",
    "hash": "1503460033494949927412021130423377729710"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&u8>>::shr",
    "hash": "1745026361120123482110608674039173629986"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&usize>>::shr",
    "hash": "1777666620815475558515436973168849916381"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "56307820585549541896738551494301791596"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "16618589061696659105659460536525719251"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "4633985086628698685989821029159277637"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "9403411695146714337706851325051517338"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "70821645427514109175086037717601011413"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "276844002005070770516733329157444972263"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "116380862722429433688945440676235371408"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "1086812004876984907212762645045132310924"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "165601844854576033006365505325094808821"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "78824621965400971924018032235598027332"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "877688668274666503710578614250576955484"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "1149849534857962401915394273535192133803"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::arith::Add<&isize>>::add",
    "hash": "60331126894468359407230470097010125778"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::arith::AddAssign<&isize>>::add_assign",
    "hash": "132449584224789635486836679266378994429"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::arith::Div<&isize>>::div",
    "hash": "31987572136085918891318328664430296920"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::arith::DivAssign<&isize>>::div_assign",
    "hash": "1193567250745185414111405706867047686019"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::arith::Mul<&isize>>::mul",
    "hash": "1352375438826298998410319652092098318551"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::arith::MulAssign<&isize>>::mul_assign",
    "hash": "139508241437966252778402440494024328295"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::arith::Rem<&isize>>::rem",
    "hash": "569167636225726701116993736163524951606"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::arith::RemAssign<&isize>>::rem_assign",
    "hash": "958565291087777571418083714692202439824"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::arith::Sub<&isize>>::sub",
    "hash": "176378552462415681171707568211352274879"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::arith::SubAssign<&isize>>::sub_assign",
    "hash": "1300153085291125282010158560398330990202"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::BitAnd<&isize>>::bitand",
    "hash": "650460010716084314610888026190929419008"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::BitAndAssign<&isize>>::bitand_assign",
    "hash": "1042290879650696614415823504568200477406"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::BitOr<&isize>>::bitor",
    "hash": "1672841064637544624012743462971831913330"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::BitOrAssign<&isize>>::bitor_assign",
    "hash": "116232986680947692887746244980786565941"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::BitXor<&isize>>::bitxor",
    "hash": "159339126408046907614739370806192035624"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::BitXorAssign<&isize>>::bitxor_assign",
    "hash": "58672793852729948312889284929483483830"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&i128>>::shl",
    "hash": "105967141506584817316210215701326887418"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&i16>>::shl",
    "hash": "167730248679986123215211041622912850525"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&i32>>::shl",
    "hash": "47347477178668725142203456589556605147"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&i64>>::shl",
    "hash": "101113565163633822281711239290753709494"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&i8>>::shl",
    "hash": "961539007930788967314083672189342327306"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&isize>>::shl",
    "hash": "170153440402399663096462699511491898062"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&u128>>::shl",
    "hash": "1198376724680399676114740645364641475822"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&u16>>::shl",
    "hash": "5111116630962081015631323227054470636"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&u32>>::shl",
    "hash": "519690613799666698618065007740976962287"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&u64>>::shl",
    "hash": "193669346252723217397481670837686717"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&u8>>::shl",
    "hash": "1347472188785514034917125718285132266049"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&usize>>::shl",
    "hash": "629435932312521399814645644546393796764"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "514711965222549525417421249956433481011"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "65037513573167708044545424060277577638"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "39209864685980580743770004632419074136"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "7000653694897725043182491909196610241"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "133748417173162211362680615434983062786"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "1682664618162820736216122740124686875658"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "958990274300123574518020483689063399031"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "160045021522430648265353147329838308494"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "1067758747354216555310728914631283565438"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "1279830939527297586513733828501482876201"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "834506864789774155813859456073224116946"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "143840939588164321598111398913474330069"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&i128>>::shr",
    "hash": "585339527782717469812733988686921342133"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&i16>>::shr",
    "hash": "1224763918825533312110233574032810529392"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&i32>>::shr",
    "hash": "84091289825032107242267009643637508439"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&i64>>::shr",
    "hash": "154115050756775372022454169051005451834"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&i8>>::shr",
    "hash": "888188654881115432617985346272435180775"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&isize>>::shr",
    "hash": "247974407580116057112812815628410020913"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&u128>>::shr",
    "hash": "102698748086609078298821705595344013930"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&u16>>::shr",
    "hash": "1786011844028194318811861850643878507936"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&u32>>::shr",
    "hash": "46270550121416893732153661112553016147"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&u64>>::shr",
    "hash": "179830655109743509769179812154971614135"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&u8>>::shr",
    "hash": "57621788043487617344253439828242795184"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&usize>>::shr",
    "hash": "104215125148840620666476259204429722150"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "888667146749941918115198394839892486823"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "118527591905584527407470350284955670555"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "172089107088180304947417641155180798240"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "171539385614278335176039601021247929891"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "44612487864594819447300363592238532513"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "107011414448404065033275471971610472462"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "851515630839955921911741418121477244845"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "10283160772166775633202851132372533014"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "319704230181613756712462411532892607366"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "209608133185976633210992885855423006058"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "1314410631095225210816979548382604699061"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "180004841078921817355881152825655489710"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Add<&num::saturating::Saturating<i128>>>::add",
    "hash": "958592434659743695210773850186523523505"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::AddAssign<&i128>>::add_assign",
    "hash": "1580955617190739543018195091573733842276"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::AddAssign<&num::saturating::Saturating<i128>>>::add_assign",
    "hash": "106650585881092978112870174868542307372"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Div<&num::saturating::Saturating<i128>>>::div",
    "hash": "1564440511854583809611684026739078232874"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::DivAssign<&i128>>::div_assign",
    "hash": "5521373488837339388962868251893325987"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::DivAssign<&num::saturating::Saturating<i128>>>::div_assign",
    "hash": "1132409483033292449611398537349644401646"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Mul<&num::saturating::Saturating<i128>>>::mul",
    "hash": "254357262335111040817989676436024155852"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::MulAssign<&i128>>::mul_assign",
    "hash": "285028650984371318215170920124477605865"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::MulAssign<&num::saturating::Saturating<i128>>>::mul_assign",
    "hash": "68863745092677122237950252985452373825"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Rem<&num::saturating::Saturating<i128>>>::rem",
    "hash": "632203645739475756216753385270311098788"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::RemAssign<&i128>>::rem_assign",
    "hash": "69152005550859352123142337579923036636"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::RemAssign<&num::saturating::Saturating<i128>>>::rem_assign",
    "hash": "979948744623652913415811329606076795728"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Sub<&num::saturating::Saturating<i128>>>::sub",
    "hash": "1196046847775328294211044280756115403849"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::SubAssign<&i128>>::sub_assign",
    "hash": "73149487586222239221666095877133676568"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::SubAssign<&num::saturating::Saturating<i128>>>::sub_assign",
    "hash": "77516255401650566446927107533392838671"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitAnd<&num::saturating::Saturating<i128>>>::bitand",
    "hash": "4529174905003408858295421083661239586"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitAndAssign<&i128>>::bitand_assign",
    "hash": "369888015270594587718245920349435843207"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitAndAssign<&num::saturating::Saturating<i128>>>::bitand_assign",
    "hash": "699792333249322926811298523233042818651"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitOr<&num::saturating::Saturating<i128>>>::bitor",
    "hash": "1075489825223117212016565012375054670715"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitOrAssign<&i128>>::bitor_assign",
    "hash": "115921663531136768617423011870340679448"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitOrAssign<&num::saturating::Saturating<i128>>>::bitor_assign",
    "hash": "137756730001348016645275437308313575333"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitXor<&num::saturating::Saturating<i128>>>::bitxor",
    "hash": "16203112981112193138462729668873660941"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitXorAssign<&i128>>::bitxor_assign",
    "hash": "77328214016507160682673424383393718347"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitXorAssign<&num::saturating::Saturating<i128>>>::bitxor_assign",
    "hash": "1492075071710517735212729972689292152995"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Add<&num::saturating::Saturating<i16>>>::add",
    "hash": "177432606060041692847905958350121094127"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::AddAssign<&i16>>::add_assign",
    "hash": "1091273780234881970213973534316250100741"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::AddAssign<&num::saturating::Saturating<i16>>>::add_assign",
    "hash": "156305166833836254429695647003706655406"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Div<&num::saturating::Saturating<i16>>>::div",
    "hash": "166341418447093219157586710674700613361"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::DivAssign<&i16>>::div_assign",
    "hash": "968868951721348102817259784020118476176"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::DivAssign<&num::saturating::Saturating<i16>>>::div_assign",
    "hash": "108186521663190439551800694220306763407"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Mul<&num::saturating::Saturating<i16>>>::mul",
    "hash": "1706636755538919176311402502149109248319"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::MulAssign<&i16>>::mul_assign",
    "hash": "107635542335819978301285302000643332909"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::MulAssign<&num::saturating::Saturating<i16>>>::mul_assign",
    "hash": "125902597902883815552187456495564737523"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Rem<&num::saturating::Saturating<i16>>>::rem",
    "hash": "1472920937352355387914712267063687922867"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::RemAssign<&i16>>::rem_assign",
    "hash": "5553840653485150656505648310522478833"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::RemAssign<&num::saturating::Saturating<i16>>>::rem_assign",
    "hash": "10145919207524320422358200781071898908"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Sub<&num::saturating::Saturating<i16>>>::sub",
    "hash": "560083530879185807516188632229485989381"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::SubAssign<&i16>>::sub_assign",
    "hash": "33800567410803876217299608632094566919"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::SubAssign<&num::saturating::Saturating<i16>>>::sub_assign",
    "hash": "137094512171990509332177551664795724438"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitAnd<&num::saturating::Saturating<i16>>>::bitand",
    "hash": "159206339900618952722767737233970639684"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitAndAssign<&i16>>::bitand_assign",
    "hash": "713458623090224401517487711551356911924"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitAndAssign<&num::saturating::Saturating<i16>>>::bitand_assign",
    "hash": "15377222211541073141818830961868377058"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitOr<&num::saturating::Saturating<i16>>>::bitor",
    "hash": "775441453621489483411489910113898417752"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitOrAssign<&i16>>::bitor_assign",
    "hash": "1386427166305909206718015409345707299709"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitOrAssign<&num::saturating::Saturating<i16>>>::bitor_assign",
    "hash": "122381345761171424003296196671801630180"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitXor<&num::saturating::Saturating<i16>>>::bitxor",
    "hash": "695239222473852356812189085988411624712"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitXorAssign<&i16>>::bitxor_assign",
    "hash": "1241318019172537603015031187806341607605"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitXorAssign<&num::saturating::Saturating<i16>>>::bitxor_assign",
    "hash": "1186599677044166555712154332457600579518"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Add<&num::saturating::Saturating<i32>>>::add",
    "hash": "67476795547533702077351206565941377912"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::AddAssign<&i32>>::add_assign",
    "hash": "69720093952855537716345833066669079217"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::AddAssign<&num::saturating::Saturating<i32>>>::add_assign",
    "hash": "77305452691047001974834631908888253786"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Div<&num::saturating::Saturating<i32>>>::div",
    "hash": "1301648257209657003617421898667998560658"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::DivAssign<&i32>>::div_assign",
    "hash": "369843210329377459118265169897447635404"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::DivAssign<&num::saturating::Saturating<i32>>>::div_assign",
    "hash": "48765372534062694085699190201482439595"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Mul<&num::saturating::Saturating<i32>>>::mul",
    "hash": "6907778586973764377677486221460726840"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::MulAssign<&i32>>::mul_assign",
    "hash": "434408678889000219412917365266158943642"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::MulAssign<&num::saturating::Saturating<i32>>>::mul_assign",
    "hash": "1717969326058846381410661100061191330605"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Rem<&num::saturating::Saturating<i32>>>::rem",
    "hash": "872667992399247072113435586709214850856"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::RemAssign<&i32>>::rem_assign",
    "hash": "464928659853439401510741713229785195170"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::RemAssign<&num::saturating::Saturating<i32>>>::rem_assign",
    "hash": "496856661046363376611383048855127258496"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Sub<&num::saturating::Saturating<i32>>>::sub",
    "hash": "411337010520370824017146971809982537596"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::SubAssign<&i32>>::sub_assign",
    "hash": "70179987028898033032112066627591281288"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::SubAssign<&num::saturating::Saturating<i32>>>::sub_assign",
    "hash": "14034823999075797068813425026392213160"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitAnd<&num::saturating::Saturating<i32>>>::bitand",
    "hash": "432027896632894797412324147976945467319"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitAndAssign<&i32>>::bitand_assign",
    "hash": "74067082511212639738674331958951090598"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitAndAssign<&num::saturating::Saturating<i32>>>::bitand_assign",
    "hash": "48680955322708584233055880273214030552"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitOr<&num::saturating::Saturating<i32>>>::bitor",
    "hash": "939491617002613612010083335511500363366"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitOrAssign<&i32>>::bitor_assign",
    "hash": "1750840540774748177011392019622996349715"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitOrAssign<&num::saturating::Saturating<i32>>>::bitor_assign",
    "hash": "81307190284869646579140383503409902808"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitXor<&num::saturating::Saturating<i32>>>::bitxor",
    "hash": "570679423165641270013052943531398680700"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitXorAssign<&i32>>::bitxor_assign",
    "hash": "134351972411168303129910050979931985730"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitXorAssign<&num::saturating::Saturating<i32>>>::bitxor_assign",
    "hash": "18309632453628027377952573655713819382"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Add<&num::saturating::Saturating<i64>>>::add",
    "hash": "51541803544428094142378602442704342512"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::AddAssign<&i64>>::add_assign",
    "hash": "140037367770921925853934148768564568132"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::AddAssign<&num::saturating::Saturating<i64>>>::add_assign",
    "hash": "1479331909920332374517369377024734984480"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Div<&num::saturating::Saturating<i64>>>::div",
    "hash": "1016931526524646243918133674494863112956"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::DivAssign<&i64>>::div_assign",
    "hash": "1453914172869600670616253610436047494818"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::DivAssign<&num::saturating::Saturating<i64>>>::div_assign",
    "hash": "35108321506842328016146214983398789177"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Mul<&num::saturating::Saturating<i64>>>::mul",
    "hash": "178449212729455456286381113825205177737"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::MulAssign<&i64>>::mul_assign",
    "hash": "449253256532916201216054180275965686486"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::MulAssign<&num::saturating::Saturating<i64>>>::mul_assign",
    "hash": "617812178870802637013731186390120599246"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Rem<&num::saturating::Saturating<i64>>>::rem",
    "hash": "11600437941916428276799381820510197636"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::RemAssign<&i64>>::rem_assign",
    "hash": "1366196331009934209518355843636610268054"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::RemAssign<&num::saturating::Saturating<i64>>>::rem_assign",
    "hash": "756299294891882766617887365291208194455"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Sub<&num::saturating::Saturating<i64>>>::sub",
    "hash": "1655302294002738945815948569354471935926"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::SubAssign<&i64>>::sub_assign",
    "hash": "7321763213307899048263821745071780677"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::SubAssign<&num::saturating::Saturating<i64>>>::sub_assign",
    "hash": "1269422953005387708012279364683971139988"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitAnd<&num::saturating::Saturating<i64>>>::bitand",
    "hash": "148964653616453991235436697275875759"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitAndAssign<&i64>>::bitand_assign",
    "hash": "939125340758960531918019326753555472432"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitAndAssign<&num::saturating::Saturating<i64>>>::bitand_assign",
    "hash": "1704601175004116643514045369578463368194"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitOr<&num::saturating::Saturating<i64>>>::bitor",
    "hash": "151158596076494401031666326473654938688"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitOrAssign<&i64>>::bitor_assign",
    "hash": "12066250041010451497306235939414928521"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitOrAssign<&num::saturating::Saturating<i64>>>::bitor_assign",
    "hash": "554131134242479421810594244734507987022"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitXor<&num::saturating::Saturating<i64>>>::bitxor",
    "hash": "82698217210362071621123974924154071188"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitXorAssign<&i64>>::bitxor_assign",
    "hash": "556519577690761654915956355923195385900"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitXorAssign<&num::saturating::Saturating<i64>>>::bitxor_assign",
    "hash": "1297797962629342808816005859141852517916"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Add<&num::saturating::Saturating<i8>>>::add",
    "hash": "530008802769558341812359167899195269971"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::AddAssign<&i8>>::add_assign",
    "hash": "917558462803041922810551880989791420588"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::AddAssign<&num::saturating::Saturating<i8>>>::add_assign",
    "hash": "116855878274671674387079803317069007991"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Div<&num::saturating::Saturating<i8>>>::div",
    "hash": "179226720075247028467257794425953983699"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::DivAssign<&i8>>::div_assign",
    "hash": "12905745666463300231428724874713663789"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::DivAssign<&num::saturating::Saturating<i8>>>::div_assign",
    "hash": "10855938950667587967642637726813715532"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Mul<&num::saturating::Saturating<i8>>>::mul",
    "hash": "172990396258889786084750002142156061595"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::MulAssign<&i8>>::mul_assign",
    "hash": "701749471861474209112002722294586363328"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::MulAssign<&num::saturating::Saturating<i8>>>::mul_assign",
    "hash": "1405287973619418581814793682029002841603"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Rem<&num::saturating::Saturating<i8>>>::rem",
    "hash": "137913438963545033374050622920259553305"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::RemAssign<&i8>>::rem_assign",
    "hash": "391454347513567336411472722492357333105"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::RemAssign<&num::saturating::Saturating<i8>>>::rem_assign",
    "hash": "610818402563084538716272390894172011968"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Sub<&num::saturating::Saturating<i8>>>::sub",
    "hash": "288995023097986361311207437466818673885"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::SubAssign<&i8>>::sub_assign",
    "hash": "60629117349519769916972386710647630723"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::SubAssign<&num::saturating::Saturating<i8>>>::sub_assign",
    "hash": "1836895448428848167314298401777810442571"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitAnd<&num::saturating::Saturating<i8>>>::bitand",
    "hash": "485990076821611095612437181964163391289"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitAndAssign<&i8>>::bitand_assign",
    "hash": "74436138301816287287949082662641017851"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitAndAssign<&num::saturating::Saturating<i8>>>::bitand_assign",
    "hash": "91927781966917934427090677772527671184"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitOr<&num::saturating::Saturating<i8>>>::bitor",
    "hash": "129753949657858112401759994500682521646"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitOrAssign<&i8>>::bitor_assign",
    "hash": "611177484694262293114298260370873532544"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitOrAssign<&num::saturating::Saturating<i8>>>::bitor_assign",
    "hash": "173343535645730291189343900367568432752"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitXor<&num::saturating::Saturating<i8>>>::bitxor",
    "hash": "1422153335797785491973681092850627660"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitXorAssign<&i8>>::bitxor_assign",
    "hash": "163069627040178494107988449038788377756"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitXorAssign<&num::saturating::Saturating<i8>>>::bitxor_assign",
    "hash": "649314996106840473616526118115312161925"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Add<&num::saturating::Saturating<isize>>>::add",
    "hash": "107241488220091877378153209874997405725"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::AddAssign<&isize>>::add_assign",
    "hash": "111770383592460131027170005722092649708"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::AddAssign<&num::saturating::Saturating<isize>>>::add_assign",
    "hash": "24475223671430733984791956848329839838"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Div<&num::saturating::Saturating<isize>>>::div",
    "hash": "740662595861075277111203652049332438309"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::DivAssign<&isize>>::div_assign",
    "hash": "271900428073754053017841021243314469675"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::DivAssign<&num::saturating::Saturating<isize>>>::div_assign",
    "hash": "95260716461203460236042931910728030357"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Mul<&num::saturating::Saturating<isize>>>::mul",
    "hash": "1462959873519796028616749485798372154053"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::MulAssign<&isize>>::mul_assign",
    "hash": "358174048267159535201100543605055188"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::MulAssign<&num::saturating::Saturating<isize>>>::mul_assign",
    "hash": "55332379083618156714989456953599944541"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Rem<&num::saturating::Saturating<isize>>>::rem",
    "hash": "1672366185805468300717415490907881164037"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::RemAssign<&isize>>::rem_assign",
    "hash": "68960877313197405182892673239658566297"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::RemAssign<&num::saturating::Saturating<isize>>>::rem_assign",
    "hash": "152276948180230723439569259000654647163"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Sub<&num::saturating::Saturating<isize>>>::sub",
    "hash": "93429938365322522743944154267473620215"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::SubAssign<&isize>>::sub_assign",
    "hash": "159890636005694237631910913081097685051"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::SubAssign<&num::saturating::Saturating<isize>>>::sub_assign",
    "hash": "12122351438632244165458770732418450665"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitAnd<&num::saturating::Saturating<isize>>>::bitand",
    "hash": "1029038298192549371016085197781253982449"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitAndAssign<&isize>>::bitand_assign",
    "hash": "147284944896508261743680101682664687251"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitAndAssign<&num::saturating::Saturating<isize>>>::bitand_assign",
    "hash": "72670101930894263219342139938026873908"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitOr<&num::saturating::Saturating<isize>>>::bitor",
    "hash": "79218962765212155366896762661685801316"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitOrAssign<&isize>>::bitor_assign",
    "hash": "5181601176800762821013186447881059164"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitOrAssign<&num::saturating::Saturating<isize>>>::bitor_assign",
    "hash": "61891349833805878227127057255139785898"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitXor<&num::saturating::Saturating<isize>>>::bitxor",
    "hash": "26681542414777859852284861864675253978"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitXorAssign<&isize>>::bitxor_assign",
    "hash": "69543915326927445216176611421710216778"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitXorAssign<&num::saturating::Saturating<isize>>>::bitxor_assign",
    "hash": "2836281492040191721817926440400217444"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Add<&num::saturating::Saturating<u128>>>::add",
    "hash": "653119099153168473116059689128955031858"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::AddAssign<&num::saturating::Saturating<u128>>>::add_assign",
    "hash": "64538076435501176069526235385470589335"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::AddAssign<&u128>>::add_assign",
    "hash": "16174201386369867287874979665807253339"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Div<&num::saturating::Saturating<u128>>>::div",
    "hash": "40994243992209007353581958781307289627"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::DivAssign<&num::saturating::Saturating<u128>>>::div_assign",
    "hash": "100761190714474115568952014335511371233"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::DivAssign<&u128>>::div_assign",
    "hash": "171929080661167329565557474290070725471"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Mul<&num::saturating::Saturating<u128>>>::mul",
    "hash": "158528124821627168310100074159349430473"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::MulAssign<&num::saturating::Saturating<u128>>>::mul_assign",
    "hash": "155625668849256161887023104760910389319"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::MulAssign<&u128>>::mul_assign",
    "hash": "95189082577783108228879386066553911572"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Rem<&num::saturating::Saturating<u128>>>::rem",
    "hash": "163556774947860797655224522067858186496"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::RemAssign<&num::saturating::Saturating<u128>>>::rem_assign",
    "hash": "1566069568485401192813118522937537028463"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::RemAssign<&u128>>::rem_assign",
    "hash": "38163302143418994404394971799080005454"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Sub<&num::saturating::Saturating<u128>>>::sub",
    "hash": "51306799937977365372863248918380049019"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::SubAssign<&num::saturating::Saturating<u128>>>::sub_assign",
    "hash": "1571699383163424115410328937204618167432"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::SubAssign<&u128>>::sub_assign",
    "hash": "1308225337628975347317842309097167144321"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitAnd<&num::saturating::Saturating<u128>>>::bitand",
    "hash": "1586612142195618290517082560964781137237"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitAndAssign<&num::saturating::Saturating<u128>>>::bitand_assign",
    "hash": "54984976903597886287716087611938207853"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitAndAssign<&u128>>::bitand_assign",
    "hash": "632628476416999833016082340918613957428"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitOr<&num::saturating::Saturating<u128>>>::bitor",
    "hash": "84364849138670844921396920328382591317"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitOrAssign<&num::saturating::Saturating<u128>>>::bitor_assign",
    "hash": "1544395190171079460515943706947553123463"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitOrAssign<&u128>>::bitor_assign",
    "hash": "999762568023288536914835701195807197625"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitXor<&num::saturating::Saturating<u128>>>::bitxor",
    "hash": "163637080908547485559601646284630024574"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitXorAssign<&num::saturating::Saturating<u128>>>::bitxor_assign",
    "hash": "26982233871198899465682050328857869417"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitXorAssign<&u128>>::bitxor_assign",
    "hash": "95033304847011108713079148655432245339"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Add<&num::saturating::Saturating<u16>>>::add",
    "hash": "21016355290296519999669168262713610058"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::AddAssign<&num::saturating::Saturating<u16>>>::add_assign",
    "hash": "138350738664950483678262157939520813074"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::AddAssign<&u16>>::add_assign",
    "hash": "314805697477815717614651916913097635330"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Div<&num::saturating::Saturating<u16>>>::div",
    "hash": "37392587056659970748157881152199066493"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::DivAssign<&num::saturating::Saturating<u16>>>::div_assign",
    "hash": "48479339349706069878352766735813316301"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::DivAssign<&u16>>::div_assign",
    "hash": "132611159974690731509845923155743888947"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Mul<&num::saturating::Saturating<u16>>>::mul",
    "hash": "415976517314049746413723563757600653927"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::MulAssign<&num::saturating::Saturating<u16>>>::mul_assign",
    "hash": "652753878280436361610891628220488510968"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::MulAssign<&u16>>::mul_assign",
    "hash": "118615242242373220864655107171646818690"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Rem<&num::saturating::Saturating<u16>>>::rem",
    "hash": "1962619729674023897070691785184731224"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::RemAssign<&num::saturating::Saturating<u16>>>::rem_assign",
    "hash": "35999378691656211218219924263213566633"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::RemAssign<&u16>>::rem_assign",
    "hash": "661367153813290968813627858567104176419"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Sub<&num::saturating::Saturating<u16>>>::sub",
    "hash": "1150949366860555580499550817253659172"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::SubAssign<&num::saturating::Saturating<u16>>>::sub_assign",
    "hash": "15924483681788679106608131346922783171"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::SubAssign<&u16>>::sub_assign",
    "hash": "70152500644630224117557174684195469896"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitAnd<&num::saturating::Saturating<u16>>>::bitand",
    "hash": "30947355874017412184521521477381485911"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitAndAssign<&num::saturating::Saturating<u16>>>::bitand_assign",
    "hash": "151596165237081842193547288544484158068"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitAndAssign<&u16>>::bitand_assign",
    "hash": "83165162482076394973234413095570391848"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitOr<&num::saturating::Saturating<u16>>>::bitor",
    "hash": "92029479624834062757663099122447404729"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitOrAssign<&num::saturating::Saturating<u16>>>::bitor_assign",
    "hash": "64920976184836815999364181920911412990"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitOrAssign<&u16>>::bitor_assign",
    "hash": "1476942745280885018915096292121061916650"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitXor<&num::saturating::Saturating<u16>>>::bitxor",
    "hash": "15932873330975320679577371101163045279"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitXorAssign<&num::saturating::Saturating<u16>>>::bitxor_assign",
    "hash": "111322053000772895555035689801420744630"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitXorAssign<&u16>>::bitxor_assign",
    "hash": "85703190794730706495899628676810535655"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Add<&num::saturating::Saturating<u32>>>::add",
    "hash": "165400049694054275043090099732604135367"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::AddAssign<&num::saturating::Saturating<u32>>>::add_assign",
    "hash": "65344362153245598347232581915593832993"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::AddAssign<&u32>>::add_assign",
    "hash": "89996046643884736117451840326730212685"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Div<&num::saturating::Saturating<u32>>>::div",
    "hash": "4681446393066090519696842807877825116"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::DivAssign<&num::saturating::Saturating<u32>>>::div_assign",
    "hash": "1484059218933840597610146222467272578983"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::DivAssign<&u32>>::div_assign",
    "hash": "40093425296012440513906127043904312053"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Mul<&num::saturating::Saturating<u32>>>::mul",
    "hash": "110676117047881003702273697131594281391"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::MulAssign<&num::saturating::Saturating<u32>>>::mul_assign",
    "hash": "46102049886050610284813880109993867533"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::MulAssign<&u32>>::mul_assign",
    "hash": "98435721662263290854201099676064001519"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Rem<&num::saturating::Saturating<u32>>>::rem",
    "hash": "1302159762166697474012786447180712964454"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::RemAssign<&num::saturating::Saturating<u32>>>::rem_assign",
    "hash": "172900726955334710866638022908024748271"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::RemAssign<&u32>>::rem_assign",
    "hash": "1705717573863604320213620451645942888526"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Sub<&num::saturating::Saturating<u32>>>::sub",
    "hash": "83164618644782116856451251615312723686"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::SubAssign<&num::saturating::Saturating<u32>>>::sub_assign",
    "hash": "354609077667512837412121599003743165443"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::SubAssign<&u32>>::sub_assign",
    "hash": "142702294896529270249919302347973745427"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitAnd<&num::saturating::Saturating<u32>>>::bitand",
    "hash": "181608571557069981589070661142071295986"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitAndAssign<&num::saturating::Saturating<u32>>>::bitand_assign",
    "hash": "1329907767304454515014686086202903455510"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitAndAssign<&u32>>::bitand_assign",
    "hash": "126014217170929718441538537527859467760"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitOr<&num::saturating::Saturating<u32>>>::bitor",
    "hash": "1428195191825694474414977553925550876211"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitOrAssign<&num::saturating::Saturating<u32>>>::bitor_assign",
    "hash": "650200476049364264313797680493317413466"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitOrAssign<&u32>>::bitor_assign",
    "hash": "83925411088114686674139893662956208679"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitXor<&num::saturating::Saturating<u32>>>::bitxor",
    "hash": "234901542025814248913669597192070235548"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitXorAssign<&num::saturating::Saturating<u32>>>::bitxor_assign",
    "hash": "328379662672357389910075555631831375573"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitXorAssign<&u32>>::bitxor_assign",
    "hash": "65060911874222312785949373520593537127"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Add<&num::saturating::Saturating<u64>>>::add",
    "hash": "62809017961397517367502695737032136559"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::AddAssign<&num::saturating::Saturating<u64>>>::add_assign",
    "hash": "612694449267016008417558366999452301954"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::AddAssign<&u64>>::add_assign",
    "hash": "82362290763210741811339408530841387622"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Div<&num::saturating::Saturating<u64>>>::div",
    "hash": "7810158554080127225466129690289517916"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::DivAssign<&num::saturating::Saturating<u64>>>::div_assign",
    "hash": "710335522005584543711564950923727097180"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::DivAssign<&u64>>::div_assign",
    "hash": "731173794908068114816612309171125399740"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Mul<&num::saturating::Saturating<u64>>>::mul",
    "hash": "31988908800755575541617105081738415922"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::MulAssign<&num::saturating::Saturating<u64>>>::mul_assign",
    "hash": "1789973569146642224615909659805887489559"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::MulAssign<&u64>>::mul_assign",
    "hash": "7897217629229813459153674121639760240"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Rem<&num::saturating::Saturating<u64>>>::rem",
    "hash": "86436231788569726841493102178695213860"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::RemAssign<&num::saturating::Saturating<u64>>>::rem_assign",
    "hash": "144912683914811053926693833333147886520"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::RemAssign<&u64>>::rem_assign",
    "hash": "1067448139644896035417136461202210404442"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Sub<&num::saturating::Saturating<u64>>>::sub",
    "hash": "17542551599605699835656845010597249069"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::SubAssign<&num::saturating::Saturating<u64>>>::sub_assign",
    "hash": "1368269911046791050913657194485935392641"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::SubAssign<&u64>>::sub_assign",
    "hash": "1735764795796021635211135588670659458257"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitAnd<&num::saturating::Saturating<u64>>>::bitand",
    "hash": "118434218828739610836920811020669849759"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitAndAssign<&num::saturating::Saturating<u64>>>::bitand_assign",
    "hash": "96318577598294560826676454467039705238"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitAndAssign<&u64>>::bitand_assign",
    "hash": "3359871319813181232021252761714116880"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitOr<&num::saturating::Saturating<u64>>>::bitor",
    "hash": "1388011547326450790610939860520438455844"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitOrAssign<&num::saturating::Saturating<u64>>>::bitor_assign",
    "hash": "94440777663390981474538085821413136946"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitOrAssign<&u64>>::bitor_assign",
    "hash": "991815182936113900311851837777046048331"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitXor<&num::saturating::Saturating<u64>>>::bitxor",
    "hash": "44143631107288872365717766772506979472"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitXorAssign<&num::saturating::Saturating<u64>>>::bitxor_assign",
    "hash": "1119097468660158010615199673233601732659"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitXorAssign<&u64>>::bitxor_assign",
    "hash": "104352739706528051187782507719615929773"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Add<&num::saturating::Saturating<u8>>>::add",
    "hash": "2961446291267362603900142031093263479"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::AddAssign<&num::saturating::Saturating<u8>>>::add_assign",
    "hash": "456187485921409028315011259567882365983"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::AddAssign<&u8>>::add_assign",
    "hash": "163296256402589748736483777048140420449"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Div<&num::saturating::Saturating<u8>>>::div",
    "hash": "24862207888341067444963986067840103780"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::DivAssign<&num::saturating::Saturating<u8>>>::div_assign",
    "hash": "172630962091052749122555716325850907421"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::DivAssign<&u8>>::div_assign",
    "hash": "882780676793603349713352257117250204756"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Mul<&num::saturating::Saturating<u8>>>::mul",
    "hash": "15391012082931796841478772554401472841"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::MulAssign<&num::saturating::Saturating<u8>>>::mul_assign",
    "hash": "155721325641112278533389429606065130410"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::MulAssign<&u8>>::mul_assign",
    "hash": "1715544371110736068714717057307532801715"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Rem<&num::saturating::Saturating<u8>>>::rem",
    "hash": "1827329930798182313518183669026304175863"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::RemAssign<&num::saturating::Saturating<u8>>>::rem_assign",
    "hash": "60768713471428322428799015960623502607"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::RemAssign<&u8>>::rem_assign",
    "hash": "204012584163302876513224593809435318239"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Sub<&num::saturating::Saturating<u8>>>::sub",
    "hash": "27931159697985743467357117610414120534"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::SubAssign<&num::saturating::Saturating<u8>>>::sub_assign",
    "hash": "784703917797384255613874949476849138798"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::SubAssign<&u8>>::sub_assign",
    "hash": "1339409724135086328714865315799204329757"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitAnd<&num::saturating::Saturating<u8>>>::bitand",
    "hash": "144613412197365605414831411752624341748"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitAndAssign<&num::saturating::Saturating<u8>>>::bitand_assign",
    "hash": "1530675555285175003011707008938381030725"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitAndAssign<&u8>>::bitand_assign",
    "hash": "137220210331350433778522945167503097813"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitOr<&num::saturating::Saturating<u8>>>::bitor",
    "hash": "138933086039407254504062016832526667590"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitOrAssign<&num::saturating::Saturating<u8>>>::bitor_assign",
    "hash": "63618192934903793643252157524356499043"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitOrAssign<&u8>>::bitor_assign",
    "hash": "1284833368630121245711461346407701377824"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitXor<&num::saturating::Saturating<u8>>>::bitxor",
    "hash": "666074730341997351614378745336125407564"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitXorAssign<&num::saturating::Saturating<u8>>>::bitxor_assign",
    "hash": "78300212117258375992040617561883417759"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitXorAssign<&u8>>::bitxor_assign",
    "hash": "393669793514660588912161635742338418591"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Add<&num::saturating::Saturating<usize>>>::add",
    "hash": "1338341150003205029415638734066819674022"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::AddAssign<&num::saturating::Saturating<usize>>>::add_assign",
    "hash": "1743998404074934204010902462147303928657"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::AddAssign<&usize>>::add_assign",
    "hash": "96896821171769674115644316295283556775"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Div<&num::saturating::Saturating<usize>>>::div",
    "hash": "1775416508078143034915672436292709555793"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::DivAssign<&num::saturating::Saturating<usize>>>::div_assign",
    "hash": "4633454009826394258094734418645665363"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::DivAssign<&usize>>::div_assign",
    "hash": "39168593559307682931033427099857012617"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Mul<&num::saturating::Saturating<usize>>>::mul",
    "hash": "1291974573058484581515030319967444747386"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::MulAssign<&num::saturating::Saturating<usize>>>::mul_assign",
    "hash": "166814494005297074649263734254767605518"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::MulAssign<&usize>>::mul_assign",
    "hash": "752049126559977957512039293386422498267"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Rem<&num::saturating::Saturating<usize>>>::rem",
    "hash": "22045961939121551729579655006471649359"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::RemAssign<&num::saturating::Saturating<usize>>>::rem_assign",
    "hash": "1595567593176112730816444196220172646507"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::RemAssign<&usize>>::rem_assign",
    "hash": "431796685477969191411024457445209626282"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Sub<&num::saturating::Saturating<usize>>>::sub",
    "hash": "149367529342550675265981000012037913984"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::SubAssign<&num::saturating::Saturating<usize>>>::sub_assign",
    "hash": "1419065121382282623614862880509297527916"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::SubAssign<&usize>>::sub_assign",
    "hash": "69667262308226271134653901768242249531"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitAnd<&num::saturating::Saturating<usize>>>::bitand",
    "hash": "398189656834025967513417660547987239721"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitAndAssign<&num::saturating::Saturating<usize>>>::bitand_assign",
    "hash": "369064201012240729516988436661022257571"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitAndAssign<&usize>>::bitand_assign",
    "hash": "1212785386216276259613074035633317290741"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitOr<&num::saturating::Saturating<usize>>>::bitor",
    "hash": "1389484483259841215616490833099015155871"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitOrAssign<&num::saturating::Saturating<usize>>>::bitor_assign",
    "hash": "150472673215144657795798049364469141003"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitOrAssign<&usize>>::bitor_assign",
    "hash": "142734499517809557552112197976406142610"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitXor<&num::saturating::Saturating<usize>>>::bitxor",
    "hash": "467291627211184368312523988874046611380"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitXorAssign<&num::saturating::Saturating<usize>>>::bitxor_assign",
    "hash": "168951480305374336473408137879471269827"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitXorAssign<&usize>>::bitxor_assign",
    "hash": "1484424056815599283115486480099759226680"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Add<&num::wrapping::Wrapping<i128>>>::add",
    "hash": "1030240650690403392517963169456106248880"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::AddAssign<&i128>>::add_assign",
    "hash": "124793194034523519097210977278294359193"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::AddAssign<&num::wrapping::Wrapping<i128>>>::add_assign",
    "hash": "387462768765221658110643173425186228026"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Div<&num::wrapping::Wrapping<i128>>>::div",
    "hash": "213181962410434537510688335627007592509"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::DivAssign<&i128>>::div_assign",
    "hash": "1710616926993646485916572182883585826960"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::DivAssign<&num::wrapping::Wrapping<i128>>>::div_assign",
    "hash": "66627708122168293221558838863666628511"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Mul<&num::wrapping::Wrapping<i128>>>::mul",
    "hash": "366642252568146103511318054535842371691"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::MulAssign<&i128>>::mul_assign",
    "hash": "953389229051464091411544846676629408147"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::MulAssign<&num::wrapping::Wrapping<i128>>>::mul_assign",
    "hash": "1505131688151693141418383000248244283130"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Rem<&num::wrapping::Wrapping<i128>>>::rem",
    "hash": "154574114960917859994309928838061471875"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::RemAssign<&i128>>::rem_assign",
    "hash": "181096651943855566035318970467545941881"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::RemAssign<&num::wrapping::Wrapping<i128>>>::rem_assign",
    "hash": "709189294375442874311818899746452954788"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Sub<&num::wrapping::Wrapping<i128>>>::sub",
    "hash": "86868154560431398127022869530091790022"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::SubAssign<&i128>>::sub_assign",
    "hash": "750787340295337666615088305621156903185"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::SubAssign<&num::wrapping::Wrapping<i128>>>::sub_assign",
    "hash": "1695828127391621755410731473442631340718"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitAnd<&num::wrapping::Wrapping<i128>>>::bitand",
    "hash": "10112753626300529591849255109706264945"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitAndAssign<&i128>>::bitand_assign",
    "hash": "888601222372597156012453513633497487977"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<i128>>>::bitand_assign",
    "hash": "1754232287511276820113472740898059626677"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitOr<&num::wrapping::Wrapping<i128>>>::bitor",
    "hash": "30764207410714678171033087770602468213"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitOrAssign<&i128>>::bitor_assign",
    "hash": "53586027615008256721947021578277412611"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<i128>>>::bitor_assign",
    "hash": "1398755961226854633418372709167441202062"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitXor<&num::wrapping::Wrapping<i128>>>::bitxor",
    "hash": "1176357627164153253410845823822079072235"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitXorAssign<&i128>>::bitxor_assign",
    "hash": "98606303936150562769161631115889844028"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<i128>>>::bitxor_assign",
    "hash": "848689674774025239815015918853055095993"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::Shl<&usize>>::shl",
    "hash": "317752498522169549712009659344420948350"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "1817628017775928615910940564164991480331"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::Shr<&usize>>::shr",
    "hash": "127590981700179685885596794651238543354"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "47731150741988240136876100532981775468"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Add<&num::wrapping::Wrapping<i16>>>::add",
    "hash": "17257866764526698698568898350719406080"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::AddAssign<&i16>>::add_assign",
    "hash": "1823813168981861678311032208309807584087"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::AddAssign<&num::wrapping::Wrapping<i16>>>::add_assign",
    "hash": "874634807980267323611461207374721160078"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Div<&num::wrapping::Wrapping<i16>>>::div",
    "hash": "1235102297436859741517905117026649715457"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::DivAssign<&i16>>::div_assign",
    "hash": "365202024396524342115731894643164965556"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::DivAssign<&num::wrapping::Wrapping<i16>>>::div_assign",
    "hash": "87213162716385659816965452096444997893"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Mul<&num::wrapping::Wrapping<i16>>>::mul",
    "hash": "149726877437656676775521554396116212641"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::MulAssign<&i16>>::mul_assign",
    "hash": "640103991594234982013791529605613107424"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::MulAssign<&num::wrapping::Wrapping<i16>>>::mul_assign",
    "hash": "3424005712873113945525487055454303209"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Rem<&num::wrapping::Wrapping<i16>>>::rem",
    "hash": "120358691668009010608361835393928953328"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::RemAssign<&i16>>::rem_assign",
    "hash": "452128942016068617710783122752510622630"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::RemAssign<&num::wrapping::Wrapping<i16>>>::rem_assign",
    "hash": "1784581503629167203416989839204467011201"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Sub<&num::wrapping::Wrapping<i16>>>::sub",
    "hash": "1216478190059569804915636888046014568463"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::SubAssign<&i16>>::sub_assign",
    "hash": "727599525432245145016668468240023007804"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::SubAssign<&num::wrapping::Wrapping<i16>>>::sub_assign",
    "hash": "241050408662209350216355409762781174551"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitAnd<&num::wrapping::Wrapping<i16>>>::bitand",
    "hash": "187656301853131112017935755307930590385"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitAndAssign<&i16>>::bitand_assign",
    "hash": "124238343662381942323375836893880332590"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<i16>>>::bitand_assign",
    "hash": "546353379616730951215489298901471681910"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitOr<&num::wrapping::Wrapping<i16>>>::bitor",
    "hash": "1740930292932491118516919971564517303535"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitOrAssign<&i16>>::bitor_assign",
    "hash": "1366176245266904286611969867878711188972"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<i16>>>::bitor_assign",
    "hash": "22904260270781805825527643875672830758"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitXor<&num::wrapping::Wrapping<i16>>>::bitxor",
    "hash": "16505410653546204613678182724362187591"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitXorAssign<&i16>>::bitxor_assign",
    "hash": "823029901611996000812811022380080538931"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<i16>>>::bitxor_assign",
    "hash": "52029801296215555855866701039645195668"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::Shl<&usize>>::shl",
    "hash": "914552255705342313617917316041022323918"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "628642260472402520812130245957310017369"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::Shr<&usize>>::shr",
    "hash": "104256344570561223136386984383395733527"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "1629639918837208684010878731892739661979"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Add<&num::wrapping::Wrapping<i32>>>::add",
    "hash": "163721444576996436125987894557446474088"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::AddAssign<&i32>>::add_assign",
    "hash": "2059121114868829529342768237848315554"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::AddAssign<&num::wrapping::Wrapping<i32>>>::add_assign",
    "hash": "9046711103401083795834415012269957844"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Div<&num::wrapping::Wrapping<i32>>>::div",
    "hash": "51550840046288649755596858372256923275"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::DivAssign<&i32>>::div_assign",
    "hash": "1682462355859262788315037403533462395585"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::DivAssign<&num::wrapping::Wrapping<i32>>>::div_assign",
    "hash": "65993945710564617742667215450240699461"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Mul<&num::wrapping::Wrapping<i32>>>::mul",
    "hash": "108926776997543008325212460781007723554"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::MulAssign<&i32>>::mul_assign",
    "hash": "31088190355481615138017312361467399034"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::MulAssign<&num::wrapping::Wrapping<i32>>>::mul_assign",
    "hash": "1833262986553767891616665892892211636840"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Rem<&num::wrapping::Wrapping<i32>>>::rem",
    "hash": "442663902190348065410003731660850413868"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::RemAssign<&i32>>::rem_assign",
    "hash": "92037885941745091725227037999088202285"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::RemAssign<&num::wrapping::Wrapping<i32>>>::rem_assign",
    "hash": "96406504216769169017904128585407224874"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Sub<&num::wrapping::Wrapping<i32>>>::sub",
    "hash": "1148278980359891962716887763357994673297"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::SubAssign<&i32>>::sub_assign",
    "hash": "11242309537039406487643057597227163940"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::SubAssign<&num::wrapping::Wrapping<i32>>>::sub_assign",
    "hash": "75295328972984091528588874382616358904"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitAnd<&num::wrapping::Wrapping<i32>>>::bitand",
    "hash": "793463926299434503817346604502825159520"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitAndAssign<&i32>>::bitand_assign",
    "hash": "74691509261521790616529908734321462931"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<i32>>>::bitand_assign",
    "hash": "899971373615221393312226246888423192021"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitOr<&num::wrapping::Wrapping<i32>>>::bitor",
    "hash": "94166221813969345217243225650979077008"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitOrAssign<&i32>>::bitor_assign",
    "hash": "182543189080745557116261659331138443974"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<i32>>>::bitor_assign",
    "hash": "5580352657957916389114044101626258298"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitXor<&num::wrapping::Wrapping<i32>>>::bitxor",
    "hash": "109846369256452202968466291194850559269"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitXorAssign<&i32>>::bitxor_assign",
    "hash": "1127887004726246338899715202039724132"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<i32>>>::bitxor_assign",
    "hash": "416140274399719526511250747798861194676"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::Shl<&usize>>::shl",
    "hash": "461112048057208690013077063399673921666"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "3609256876478409906666205255895439021"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::Shr<&usize>>::shr",
    "hash": "5319752889133853658233519130605496232"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "434038816039651236662530582875001307"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Add<&num::wrapping::Wrapping<i64>>>::add",
    "hash": "1341430108621051788737187950506618383"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::AddAssign<&i64>>::add_assign",
    "hash": "7026562289771334872980224694994623726"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::AddAssign<&num::wrapping::Wrapping<i64>>>::add_assign",
    "hash": "181536458929269643413936229723611787831"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Div<&num::wrapping::Wrapping<i64>>>::div",
    "hash": "113074122578913410506794774380120347196"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::DivAssign<&i64>>::div_assign",
    "hash": "180602622915998754765543779675473451603"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::DivAssign<&num::wrapping::Wrapping<i64>>>::div_assign",
    "hash": "170687381146439783335620183571079557710"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Mul<&num::wrapping::Wrapping<i64>>>::mul",
    "hash": "10792926550225340164744565721584989394"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::MulAssign<&i64>>::mul_assign",
    "hash": "179981996614593276456864003822941905816"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::MulAssign<&num::wrapping::Wrapping<i64>>>::mul_assign",
    "hash": "81163256035193969297549290569033682692"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Rem<&num::wrapping::Wrapping<i64>>>::rem",
    "hash": "175238696338601118415534960683632904009"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::RemAssign<&i64>>::rem_assign",
    "hash": "554820632350765985307569235274275574"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::RemAssign<&num::wrapping::Wrapping<i64>>>::rem_assign",
    "hash": "38322124760229376446630697931776618832"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Sub<&num::wrapping::Wrapping<i64>>>::sub",
    "hash": "1668635427403618195816547550246791579372"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::SubAssign<&i64>>::sub_assign",
    "hash": "1474540174869536181111692791133148131487"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::SubAssign<&num::wrapping::Wrapping<i64>>>::sub_assign",
    "hash": "1658816897564636088016289922517138369593"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitAnd<&num::wrapping::Wrapping<i64>>>::bitand",
    "hash": "728445270648883664410071608452660816292"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitAndAssign<&i64>>::bitand_assign",
    "hash": "129961742192546887511914539199903339297"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<i64>>>::bitand_assign",
    "hash": "45566724884160501329358117929448450084"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitOr<&num::wrapping::Wrapping<i64>>>::bitor",
    "hash": "1036200127659718295916048383252909054024"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitOrAssign<&i64>>::bitor_assign",
    "hash": "619383975993713697017063995002482328022"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<i64>>>::bitor_assign",
    "hash": "26525643419649402895999123800662620889"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitXor<&num::wrapping::Wrapping<i64>>>::bitxor",
    "hash": "983532210357934792413269715557241428982"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitXorAssign<&i64>>::bitxor_assign",
    "hash": "536489799223263311311104416884596014431"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<i64>>>::bitxor_assign",
    "hash": "92833682644123120719795460593568822263"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::Shl<&usize>>::shl",
    "hash": "3166303193727414787754519640028075754"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "133984491649285739288288808497273622096"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::Shr<&usize>>::shr",
    "hash": "21432418814089330187225667762975963039"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "58249111060350946272200041904878549124"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Add<&num::wrapping::Wrapping<i8>>>::add",
    "hash": "124014453378187354145559500689560997918"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::AddAssign<&i8>>::add_assign",
    "hash": "82614137156641671627703646372432309366"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::AddAssign<&num::wrapping::Wrapping<i8>>>::add_assign",
    "hash": "152429092273186386458173108811407738386"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Div<&num::wrapping::Wrapping<i8>>>::div",
    "hash": "1097658860342056568114107949647080112599"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::DivAssign<&i8>>::div_assign",
    "hash": "645373309333614071312376753639913112060"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::DivAssign<&num::wrapping::Wrapping<i8>>>::div_assign",
    "hash": "8552962749421467679633038453698895066"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Mul<&num::wrapping::Wrapping<i8>>>::mul",
    "hash": "119704525909796897196494803226474703788"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::MulAssign<&i8>>::mul_assign",
    "hash": "11922331859021490469834271642441492839"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::MulAssign<&num::wrapping::Wrapping<i8>>>::mul_assign",
    "hash": "1335080414781108059212034521466629348389"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Rem<&num::wrapping::Wrapping<i8>>>::rem",
    "hash": "1559211965232386426213058758210588264692"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::RemAssign<&i8>>::rem_assign",
    "hash": "1432356084998377017818416668694964379669"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::RemAssign<&num::wrapping::Wrapping<i8>>>::rem_assign",
    "hash": "1232496698374635217918283960225421357559"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Sub<&num::wrapping::Wrapping<i8>>>::sub",
    "hash": "117827930225169973832704105302932335261"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::SubAssign<&i8>>::sub_assign",
    "hash": "1594200239977546870213542249581698671065"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::SubAssign<&num::wrapping::Wrapping<i8>>>::sub_assign",
    "hash": "65218723558650612072822321796713717863"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitAnd<&num::wrapping::Wrapping<i8>>>::bitand",
    "hash": "430552428336040316410808342675202099332"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitAndAssign<&i8>>::bitand_assign",
    "hash": "1191841443975983091513288140073217032423"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<i8>>>::bitand_assign",
    "hash": "409322855453674698313837696642162818614"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitOr<&num::wrapping::Wrapping<i8>>>::bitor",
    "hash": "880558134298026146716189467349772059562"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitOrAssign<&i8>>::bitor_assign",
    "hash": "32707347472066704655658934683516837653"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<i8>>>::bitor_assign",
    "hash": "520860117520266249012171909513912915409"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitXor<&num::wrapping::Wrapping<i8>>>::bitxor",
    "hash": "1449464577861016864610187076186218761992"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitXorAssign<&i8>>::bitxor_assign",
    "hash": "829778417933022489816073611476232512972"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<i8>>>::bitxor_assign",
    "hash": "25885455175625782429559638893308682446"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::Shl<&usize>>::shl",
    "hash": "169532024801244348644721263516913090276"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "70088037016521022344125266501878363501"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::Shr<&usize>>::shr",
    "hash": "374589799349658166614262610972632257620"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "17225182259368477718318883399862192942"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Add<&num::wrapping::Wrapping<isize>>>::add",
    "hash": "287847623352739651915103914760916331964"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::AddAssign<&isize>>::add_assign",
    "hash": "89237559984779857655317575098713636851"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::AddAssign<&num::wrapping::Wrapping<isize>>>::add_assign",
    "hash": "41534618112179967099899113729043538721"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Div<&num::wrapping::Wrapping<isize>>>::div",
    "hash": "1761026281179881791215945468894522129901"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::DivAssign<&isize>>::div_assign",
    "hash": "47137598516451742626156297057547041680"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::DivAssign<&num::wrapping::Wrapping<isize>>>::div_assign",
    "hash": "210835843101834767092617882460219030"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Mul<&num::wrapping::Wrapping<isize>>>::mul",
    "hash": "1841838090289702955316646590291575685017"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::MulAssign<&isize>>::mul_assign",
    "hash": "82200125383704045133365159925771616174"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::MulAssign<&num::wrapping::Wrapping<isize>>>::mul_assign",
    "hash": "24778724932257978848622089358822218710"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Rem<&num::wrapping::Wrapping<isize>>>::rem",
    "hash": "156879656183646861615797312080123312991"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::RemAssign<&isize>>::rem_assign",
    "hash": "165180001256688019308923142309000470621"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::RemAssign<&num::wrapping::Wrapping<isize>>>::rem_assign",
    "hash": "107420591946193262812904755340770497988"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Sub<&num::wrapping::Wrapping<isize>>>::sub",
    "hash": "53781641500493627705742771269774142492"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::SubAssign<&isize>>::sub_assign",
    "hash": "574814805396956298012418992553617865867"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::SubAssign<&num::wrapping::Wrapping<isize>>>::sub_assign",
    "hash": "611432627172659858114119855751735528924"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitAnd<&num::wrapping::Wrapping<isize>>>::bitand",
    "hash": "437779995661574010114612662353711361021"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitAndAssign<&isize>>::bitand_assign",
    "hash": "143720856997084986325752373091024644301"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<isize>>>::bitand_assign",
    "hash": "1774913413173164778513525178257826301879"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitOr<&num::wrapping::Wrapping<isize>>>::bitor",
    "hash": "141379534121483683215031289364260726374"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitOrAssign<&isize>>::bitor_assign",
    "hash": "7691318599357444745167055424322525487"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<isize>>>::bitor_assign",
    "hash": "43842994766648827387211028203032487874"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitXor<&num::wrapping::Wrapping<isize>>>::bitxor",
    "hash": "12746683981417145712663815131420963245"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitXorAssign<&isize>>::bitxor_assign",
    "hash": "72077334072306267033316289113268215231"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<isize>>>::bitxor_assign",
    "hash": "169269758608861596894430668993428039037"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::Shl<&usize>>::shl",
    "hash": "993954159846106681815044071330671047556"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "169298223298020774736559710300013302614"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::Shr<&usize>>::shr",
    "hash": "920844565831585898312522425111875322005"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "282395694198106424911318523309244797996"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Add<&num::wrapping::Wrapping<u128>>>::add",
    "hash": "442405322930710826612345118502179033837"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::AddAssign<&num::wrapping::Wrapping<u128>>>::add_assign",
    "hash": "4893398672610210877227020361306503351"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::AddAssign<&u128>>::add_assign",
    "hash": "165709744303928083368401546985627761924"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Div<&num::wrapping::Wrapping<u128>>>::div",
    "hash": "996264759713545510811128791692745570332"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::DivAssign<&num::wrapping::Wrapping<u128>>>::div_assign",
    "hash": "139883497115260545665927631188348795264"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::DivAssign<&u128>>::div_assign",
    "hash": "1145536511790597578114806818410341870431"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Mul<&num::wrapping::Wrapping<u128>>>::mul",
    "hash": "614267066890306873616951886635804000882"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::MulAssign<&num::wrapping::Wrapping<u128>>>::mul_assign",
    "hash": "1300500034608724434517729782878982040962"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::MulAssign<&u128>>::mul_assign",
    "hash": "163157541384144348318364161955972648791"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Rem<&num::wrapping::Wrapping<u128>>>::rem",
    "hash": "7966403419316456679746673856159726059"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::RemAssign<&num::wrapping::Wrapping<u128>>>::rem_assign",
    "hash": "1585463901953718506514746182653537183908"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::RemAssign<&u128>>::rem_assign",
    "hash": "55212517764180762273284185717880851773"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Sub<&num::wrapping::Wrapping<u128>>>::sub",
    "hash": "1579153435787301872512653598847410070426"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::SubAssign<&num::wrapping::Wrapping<u128>>>::sub_assign",
    "hash": "802825202170300148715937619861231437211"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::SubAssign<&u128>>::sub_assign",
    "hash": "62539859838866074708071397481242216188"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitAnd<&num::wrapping::Wrapping<u128>>>::bitand",
    "hash": "778925635719220611210412200355970450123"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<u128>>>::bitand_assign",
    "hash": "177831158320032071408414223666913860101"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitAndAssign<&u128>>::bitand_assign",
    "hash": "2957794332384549241365378417645324215"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitOr<&num::wrapping::Wrapping<u128>>>::bitor",
    "hash": "1675551722437363816615678894165219735934"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<u128>>>::bitor_assign",
    "hash": "122014373390981314453445296082997355821"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitOrAssign<&u128>>::bitor_assign",
    "hash": "7585208501884706426302641685134724625"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitXor<&num::wrapping::Wrapping<u128>>>::bitxor",
    "hash": "79559790655009326918416251273768254507"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<u128>>>::bitxor_assign",
    "hash": "151592686952459454697603535875563276191"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitXorAssign<&u128>>::bitxor_assign",
    "hash": "3115817818936655032245849574415899257"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::Shl<&usize>>::shl",
    "hash": "182430298510483158534567023207503728717"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "1319074622788160685517925997404909948329"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::Shr<&usize>>::shr",
    "hash": "97674403168083362515275565974825597679"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "51908150783573114585257400968843354617"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Add<&num::wrapping::Wrapping<u16>>>::add",
    "hash": "15826147141651249958405049253822960208"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::AddAssign<&num::wrapping::Wrapping<u16>>>::add_assign",
    "hash": "138241233323103772522462931034384861"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::AddAssign<&u16>>::add_assign",
    "hash": "16668861503781508985745669700405090320"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Div<&num::wrapping::Wrapping<u16>>>::div",
    "hash": "99371933482266727064526409902176468248"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::DivAssign<&num::wrapping::Wrapping<u16>>>::div_assign",
    "hash": "726529319078933988910631894927757415156"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::DivAssign<&u16>>::div_assign",
    "hash": "775413612565938774013999135597950375474"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Mul<&num::wrapping::Wrapping<u16>>>::mul",
    "hash": "1299937246552823521715526803419617065474"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::MulAssign<&num::wrapping::Wrapping<u16>>>::mul_assign",
    "hash": "159824482716855501373650515778754848953"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::MulAssign<&u16>>::mul_assign",
    "hash": "19682591384645443236062011520836703254"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Rem<&num::wrapping::Wrapping<u16>>>::rem",
    "hash": "10893922257661037586416085052819886560"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::RemAssign<&num::wrapping::Wrapping<u16>>>::rem_assign",
    "hash": "3661232758114243084768150526229042625"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::RemAssign<&u16>>::rem_assign",
    "hash": "105119805091862271698860178019205988670"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Sub<&num::wrapping::Wrapping<u16>>>::sub",
    "hash": "104410369085625360585844284267210451144"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::SubAssign<&num::wrapping::Wrapping<u16>>>::sub_assign",
    "hash": "142298998039733768726637499231669296738"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::SubAssign<&u16>>::sub_assign",
    "hash": "158919102291987800264857463715696425527"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitAnd<&num::wrapping::Wrapping<u16>>>::bitand",
    "hash": "1008773332233545468717323319289080492997"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<u16>>>::bitand_assign",
    "hash": "1155428342526603130216944858586918456538"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitAndAssign<&u16>>::bitand_assign",
    "hash": "940717614383505172918247934813854261964"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitOr<&num::wrapping::Wrapping<u16>>>::bitor",
    "hash": "106779861969421623112836436049849520859"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<u16>>>::bitor_assign",
    "hash": "150476204547168285814840989882031901730"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitOrAssign<&u16>>::bitor_assign",
    "hash": "127037804379397222476161305645632341881"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitXor<&num::wrapping::Wrapping<u16>>>::bitxor",
    "hash": "42658937718569257213539433830134582564"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<u16>>>::bitxor_assign",
    "hash": "75011582831788759612093092768482109404"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitXorAssign<&u16>>::bitxor_assign",
    "hash": "659155508918675928610666129026865690492"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::Shl<&usize>>::shl",
    "hash": "104766028973166800033688012416648024465"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "98733458643087300936164741556080059597"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::Shr<&usize>>::shr",
    "hash": "176820861388153824904687094030045706047"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "1331411171442516470117005976214899255083"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Add<&num::wrapping::Wrapping<u32>>>::add",
    "hash": "51567069301795844441227929991640010637"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::AddAssign<&num::wrapping::Wrapping<u32>>>::add_assign",
    "hash": "24925043105852210001970793985899351451"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::AddAssign<&u32>>::add_assign",
    "hash": "247000437776160312711185064173943967317"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Div<&num::wrapping::Wrapping<u32>>>::div",
    "hash": "124892693810058625554001884954644490315"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::DivAssign<&num::wrapping::Wrapping<u32>>>::div_assign",
    "hash": "1778145797387965410011379799414934437743"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::DivAssign<&u32>>::div_assign",
    "hash": "28941848856212267625315177851126923588"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Mul<&num::wrapping::Wrapping<u32>>>::mul",
    "hash": "21987868210490659169023285038573332254"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::MulAssign<&num::wrapping::Wrapping<u32>>>::mul_assign",
    "hash": "1275682075979110228218374214882671287937"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::MulAssign<&u32>>::mul_assign",
    "hash": "29298384487506560753451253734298128171"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Rem<&num::wrapping::Wrapping<u32>>>::rem",
    "hash": "1437219310206908313412030298406777940321"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::RemAssign<&num::wrapping::Wrapping<u32>>>::rem_assign",
    "hash": "148429038888173840254688160011960231645"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::RemAssign<&u32>>::rem_assign",
    "hash": "77696369611005496748671645781778942687"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Sub<&num::wrapping::Wrapping<u32>>>::sub",
    "hash": "122044440462392247885686298844029349624"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::SubAssign<&num::wrapping::Wrapping<u32>>>::sub_assign",
    "hash": "38746908878914641769144325090205321306"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::SubAssign<&u32>>::sub_assign",
    "hash": "1483985427218651615911777299285887681208"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitAnd<&num::wrapping::Wrapping<u32>>>::bitand",
    "hash": "794971412360123584513996500242095118930"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<u32>>>::bitand_assign",
    "hash": "1567524660986221294414089316281818857072"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitAndAssign<&u32>>::bitand_assign",
    "hash": "1731246895659425111411740137396601824911"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitOr<&num::wrapping::Wrapping<u32>>>::bitor",
    "hash": "120732169329801416125840384327019761274"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<u32>>>::bitor_assign",
    "hash": "1240259830151407424794055607303669187"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitOrAssign<&u32>>::bitor_assign",
    "hash": "1449780149786273317810680954017337519366"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitXor<&num::wrapping::Wrapping<u32>>>::bitxor",
    "hash": "17561745628004720719050390341688551615"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<u32>>>::bitxor_assign",
    "hash": "157952206666417939633808538037575114234"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitXorAssign<&u32>>::bitxor_assign",
    "hash": "740366304848764351215825183171011946254"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::Shl<&usize>>::shl",
    "hash": "40304351493757629558374835007778482456"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "1606258757848559160714965780085487074577"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::Shr<&usize>>::shr",
    "hash": "18362628521706187078626885726104399244"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "132910709864780056103186020438420864515"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Add<&num::wrapping::Wrapping<u64>>>::add",
    "hash": "1099279410378953693614943008928358218352"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::AddAssign<&num::wrapping::Wrapping<u64>>>::add_assign",
    "hash": "1561458028308403600718316160042144268254"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::AddAssign<&u64>>::add_assign",
    "hash": "1585632782843249935213853740417542577645"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Div<&num::wrapping::Wrapping<u64>>>::div",
    "hash": "48538283925328887328498389505249440182"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::DivAssign<&num::wrapping::Wrapping<u64>>>::div_assign",
    "hash": "75216075924933468297740656928437053266"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::DivAssign<&u64>>::div_assign",
    "hash": "77883620366797702458739063419358318281"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Mul<&num::wrapping::Wrapping<u64>>>::mul",
    "hash": "941879018867610627716082162119432297767"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::MulAssign<&num::wrapping::Wrapping<u64>>>::mul_assign",
    "hash": "1085881280176953994512050644273086507442"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::MulAssign<&u64>>::mul_assign",
    "hash": "540643624116877412614884949392180021993"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Rem<&num::wrapping::Wrapping<u64>>>::rem",
    "hash": "77726123816788286356170941577052195551"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::RemAssign<&num::wrapping::Wrapping<u64>>>::rem_assign",
    "hash": "3096510405209590181357528527293585036"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::RemAssign<&u64>>::rem_assign",
    "hash": "106668150968624163157655757271578642736"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Sub<&num::wrapping::Wrapping<u64>>>::sub",
    "hash": "95793347076182321549970893384752762641"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::SubAssign<&num::wrapping::Wrapping<u64>>>::sub_assign",
    "hash": "14783241113216291418656331085796655345"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::SubAssign<&u64>>::sub_assign",
    "hash": "152882487095486073195155192342889006427"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitAnd<&num::wrapping::Wrapping<u64>>>::bitand",
    "hash": "43120945942062415523141379080949878954"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<u64>>>::bitand_assign",
    "hash": "124329574752211507607410404647102097231"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitAndAssign<&u64>>::bitand_assign",
    "hash": "1244146704425020979813798847137706826114"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitOr<&num::wrapping::Wrapping<u64>>>::bitor",
    "hash": "1009547094895033363315380839675347121455"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<u64>>>::bitor_assign",
    "hash": "257373934460761038216542739462952466042"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitOrAssign<&u64>>::bitor_assign",
    "hash": "5390212268689966586317345829101937103"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitXor<&num::wrapping::Wrapping<u64>>>::bitxor",
    "hash": "56162191347322525325955416887561814576"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<u64>>>::bitxor_assign",
    "hash": "34997879259023964942765910389126622996"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitXorAssign<&u64>>::bitxor_assign",
    "hash": "6984462078573920282585790198044624211"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::Shl<&usize>>::shl",
    "hash": "76668882354357933743168447262634514260"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "15965590652816117362410911280051530347"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::Shr<&usize>>::shr",
    "hash": "1709940167230423524013605678871672090859"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "108352862047799557784932356720029261201"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Add<&num::wrapping::Wrapping<u8>>>::add",
    "hash": "2405132742638557396699826626326455663"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::AddAssign<&num::wrapping::Wrapping<u8>>>::add_assign",
    "hash": "15472688619520945200432763223322755495"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::AddAssign<&u8>>::add_assign",
    "hash": "171544651838391545197445244856570718641"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Div<&num::wrapping::Wrapping<u8>>>::div",
    "hash": "78900814153090069265465822152177468897"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::DivAssign<&num::wrapping::Wrapping<u8>>>::div_assign",
    "hash": "1663562010097092211818130991348307681046"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::DivAssign<&u8>>::div_assign",
    "hash": "1480114852148534133214758568227988294361"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Mul<&num::wrapping::Wrapping<u8>>>::mul",
    "hash": "15385429512466516683472358591386206844"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::MulAssign<&num::wrapping::Wrapping<u8>>>::mul_assign",
    "hash": "132395238925896644518818648046260588250"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::MulAssign<&u8>>::mul_assign",
    "hash": "183002660665295798783103001177778137627"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Rem<&num::wrapping::Wrapping<u8>>>::rem",
    "hash": "90185214884275013288642349593503938833"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::RemAssign<&num::wrapping::Wrapping<u8>>>::rem_assign",
    "hash": "151749210716655358929611061728505823453"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::RemAssign<&u8>>::rem_assign",
    "hash": "764005916553101643618076656189592672919"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Sub<&num::wrapping::Wrapping<u8>>>::sub",
    "hash": "71625556035800530313959825531238195916"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::SubAssign<&num::wrapping::Wrapping<u8>>>::sub_assign",
    "hash": "1751269800302327153813547881371923585333"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::SubAssign<&u8>>::sub_assign",
    "hash": "526592943509649812812472962660763721434"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitAnd<&num::wrapping::Wrapping<u8>>>::bitand",
    "hash": "94290869160107438117730041421212881389"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<u8>>>::bitand_assign",
    "hash": "16692366807928618535674872157852483121"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitAndAssign<&u8>>::bitand_assign",
    "hash": "166481671099348585349235648072520721954"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitOr<&num::wrapping::Wrapping<u8>>>::bitor",
    "hash": "511758944076478291217508899554450603026"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<u8>>>::bitor_assign",
    "hash": "27935828157554983527631587395919474874"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitOrAssign<&u8>>::bitor_assign",
    "hash": "84693211385337697902295608053287661299"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitXor<&num::wrapping::Wrapping<u8>>>::bitxor",
    "hash": "163923488932732699709775113041035402345"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<u8>>>::bitxor_assign",
    "hash": "3864714119964995904942518034228949528"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitXorAssign<&u8>>::bitxor_assign",
    "hash": "508460151576263061011925822818430646850"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::Shl<&usize>>::shl",
    "hash": "11433280577891713162423459838258433028"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "640660648247308001712131369923667512664"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::Shr<&usize>>::shr",
    "hash": "735542590884280744911271608077142486748"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "102756998242382868618713914158425948807"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Add<&num::wrapping::Wrapping<usize>>>::add",
    "hash": "1409778229557682746811676056853553175721"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::AddAssign<&num::wrapping::Wrapping<usize>>>::add_assign",
    "hash": "1774037662731273770214256584624051058066"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::AddAssign<&usize>>::add_assign",
    "hash": "599472404492618148910895833080423337071"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Div<&num::wrapping::Wrapping<usize>>>::div",
    "hash": "138441610880803586545324531616772011380"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::DivAssign<&num::wrapping::Wrapping<usize>>>::div_assign",
    "hash": "110496711968361053187448221514712610698"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::DivAssign<&usize>>::div_assign",
    "hash": "104756030614672049177806252904582128363"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Mul<&num::wrapping::Wrapping<usize>>>::mul",
    "hash": "120786039243920079446340589512140205319"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::MulAssign<&num::wrapping::Wrapping<usize>>>::mul_assign",
    "hash": "63592529510101909279405322307775928460"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::MulAssign<&usize>>::mul_assign",
    "hash": "913338449429555522811461400724523211173"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Rem<&num::wrapping::Wrapping<usize>>>::rem",
    "hash": "1420789437195910602212523209767848816174"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::RemAssign<&num::wrapping::Wrapping<usize>>>::rem_assign",
    "hash": "105378865688191840744004176837168697479"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::RemAssign<&usize>>::rem_assign",
    "hash": "1126826991181868849712750270180466455519"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Sub<&num::wrapping::Wrapping<usize>>>::sub",
    "hash": "81971114430650437989876224255713812749"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::SubAssign<&num::wrapping::Wrapping<usize>>>::sub_assign",
    "hash": "498269774872267560517853250198226521661"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::SubAssign<&usize>>::sub_assign",
    "hash": "1812987821055081400213062264262999321326"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitAnd<&num::wrapping::Wrapping<usize>>>::bitand",
    "hash": "14453801014358491812996303907330586052"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<usize>>>::bitand_assign",
    "hash": "1734765449581753755314339941301138310939"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitAndAssign<&usize>>::bitand_assign",
    "hash": "81747247369436232075725657307283302845"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitOr<&num::wrapping::Wrapping<usize>>>::bitor",
    "hash": "166244523787719758812127738752586039996"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<usize>>>::bitor_assign",
    "hash": "158799118426277343168686343555987761322"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitOrAssign<&usize>>::bitor_assign",
    "hash": "819654227215085640712524509977559594679"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitXor<&num::wrapping::Wrapping<usize>>>::bitxor",
    "hash": "47466553912218891315400164938565916893"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<usize>>>::bitxor_assign",
    "hash": "111643109900760095638481365771726706182"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitXorAssign<&usize>>::bitxor_assign",
    "hash": "575853635810399511814324143561819851089"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::Shl<&usize>>::shl",
    "hash": "150038920342440546001827284494815618152"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "19007275642733738376568207645212095863"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::Shr<&usize>>::shr",
    "hash": "548819523844074546910485726406458218588"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "125502087322903901715362933406765627459"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<str::CharEscapeDebugContinue as ops::function::Fn<(char,)>>::call",
    "hash": "995710555450428574512283713742447259246"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<str::CharEscapeDebugContinue as ops::function::FnMut<(char,)>>::call_mut",
    "hash": "53880438592155164729536355729021050531"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<str::CharEscapeDebugContinue as ops::function::FnOnce<(char,)>>::call_once",
    "hash": "1051569838462921140310207577583693926976"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<str::CharEscapeDefault as ops::function::Fn<(char,)>>::call",
    "hash": "93293578681474869635621079556888153104"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<str::CharEscapeDefault as ops::function::FnMut<(char,)>>::call_mut",
    "hash": "1489758627795338093111471403000302540247"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<str::CharEscapeDefault as ops::function::FnOnce<(char,)>>::call_once",
    "hash": "924842246670188248514684521993127387238"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<str::CharEscapeUnicode as ops::function::Fn<(char,)>>::call",
    "hash": "434969650318511359815551692416296863131"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<str::CharEscapeUnicode as ops::function::FnMut<(char,)>>::call_mut",
    "hash": "81827333229524361177160483892506152767"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<str::CharEscapeUnicode as ops::function::FnOnce<(char,)>>::call_once",
    "hash": "517682645211613206913719729253950243630"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<str::IsWhitespace as ops::function::Fn<(char,)>>::call",
    "hash": "456928144197643502311518038980030024077"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<str::IsWhitespace as ops::function::FnMut<(char,)>>::call_mut",
    "hash": "1215892648375486674112698399065598750260"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<str::IsWhitespace as ops::function::FnOnce<(char,)>>::call_once",
    "hash": "148177279589025896263808996396024884197"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::arith::Add<&u128>>::add",
    "hash": "437112021871332367217014185872963675583"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::arith::AddAssign<&u128>>::add_assign",
    "hash": "131956654836093671586308182497438886137"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::arith::Div<&u128>>::div",
    "hash": "171653021385854285863814973575203055694"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::arith::DivAssign<&u128>>::div_assign",
    "hash": "13139636306550889753983890253912379180"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::arith::Mul<&u128>>::mul",
    "hash": "1097371677605289296512463351741266887484"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::arith::MulAssign<&u128>>::mul_assign",
    "hash": "10460691339654999701376154066230029900"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::arith::Rem<&u128>>::rem",
    "hash": "1025868384962655318713943469385946858759"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::arith::RemAssign<&u128>>::rem_assign",
    "hash": "1245212142262414095313868095605243749567"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::arith::Sub<&u128>>::sub",
    "hash": "1298851035090416417110549042050303314047"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::arith::SubAssign<&u128>>::sub_assign",
    "hash": "26989915596117553708351636633518761084"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::BitAnd<&u128>>::bitand",
    "hash": "137173297230917895561329602659032991380"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::BitAndAssign<&u128>>::bitand_assign",
    "hash": "786706648786948340612083411565709412176"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::BitOr<&u128>>::bitor",
    "hash": "1583968743858198075816424701134769179459"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::BitOrAssign<&u128>>::bitor_assign",
    "hash": "14112814468342127942467255386109978681"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::BitXor<&u128>>::bitxor",
    "hash": "88133653546005366367265959107693737532"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::BitXorAssign<&u128>>::bitxor_assign",
    "hash": "1574151954307327177513926165457487547501"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&i128>>::shl",
    "hash": "885990443138254486915015513229760800390"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&i16>>::shl",
    "hash": "863349133448211128811244403459168702677"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&i32>>::shl",
    "hash": "134150636644735524092724382886025756789"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&i64>>::shl",
    "hash": "171529113986015938841559887153781270158"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&i8>>::shl",
    "hash": "1128251867454148344817084091851021973760"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&isize>>::shl",
    "hash": "652949066039887037714130289813707754966"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&u128>>::shl",
    "hash": "174931312826812392255691086662263620300"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&u16>>::shl",
    "hash": "3173287854568369848551971540717208390"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&u32>>::shl",
    "hash": "1442872331949988778616118407961837116629"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&u64>>::shl",
    "hash": "1812363138188149578315869549878346003981"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&u8>>::shl",
    "hash": "144492851472980402444834333751506404164"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&usize>>::shl",
    "hash": "49438772121738125217388176954926846531"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "816486659077030596116042121267564037209"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "157795283029632174326204965655416903385"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "117499094425084923569244480980540088364"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "914214819399372214217276923124413873793"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "38097228718438228934579120033161365073"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "8663970766231133685889669593222928458"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "61335145481718476314176699472403965804"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "1109711235882258887110310125002726350533"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "86686966871925980064229246180177952993"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "44971731331718760415055803519738478381"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "1367467315025282962612669822206691963793"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "1074215288596325099211803290254256869463"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&i128>>::shr",
    "hash": "87049604456679981233555018472834989193"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&i16>>::shr",
    "hash": "8620423392642894926199932596184181483"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&i32>>::shr",
    "hash": "935468619701427675014756106416911293391"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&i64>>::shr",
    "hash": "119605063994201902236949839123303568003"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&i8>>::shr",
    "hash": "1526752683453247052412556665739811180818"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&isize>>::shr",
    "hash": "128703234813053608317883837302178446121"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&u128>>::shr",
    "hash": "182341962689556444686216255012680313299"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&u16>>::shr",
    "hash": "104127435522098647082873940194910423619"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&u32>>::shr",
    "hash": "1624004375916515777512194208449942315550"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&u64>>::shr",
    "hash": "908217440491776327282906467769388849"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&u8>>::shr",
    "hash": "81613049909568861366835522280806449549"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&usize>>::shr",
    "hash": "11155851161161011433344775301052118667"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "1537016527201804859714458487103037024759"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "798220158154294057515979202434919475603"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "174870213120089012666496760114348939874"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "99445277215331236323342400404737042757"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "89682564014211242932516658023844730756"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "129023020468262783908950768770135835989"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "123084530483101626817193660564011544883"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "1395183517017801944914385241529589441306"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "33485199090982347511541439549293562812"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "6996598537826672372117071326838081007"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "1226281394218852045210099695686699945196"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "20620262169907784109880409789672072159"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::arith::Add<&u16>>::add",
    "hash": "108429781377940193215154079929628083933"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::arith::AddAssign<&u16>>::add_assign",
    "hash": "6928441550936178019115835112384458330"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::arith::Div<&u16>>::div",
    "hash": "204181865246471430413218601632229185098"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::arith::DivAssign<&u16>>::div_assign",
    "hash": "69431458999460679633847732137844368656"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::arith::Mul<&u16>>::mul",
    "hash": "5816109182859663205296192931125197674"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::arith::MulAssign<&u16>>::mul_assign",
    "hash": "16291733403440241791375101896755516548"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::arith::Rem<&u16>>::rem",
    "hash": "68378961173004570292452139456516716329"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::arith::RemAssign<&u16>>::rem_assign",
    "hash": "1947204944717401532224891337976523266"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::arith::Sub<&u16>>::sub",
    "hash": "980769449777536950010427110342173757750"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::arith::SubAssign<&u16>>::sub_assign",
    "hash": "1282722465017867681010286986737428003223"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::BitAnd<&u16>>::bitand",
    "hash": "767722159569593230110715440432620410962"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::BitAndAssign<&u16>>::bitand_assign",
    "hash": "51105525693651308812589771283529924183"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::BitOr<&u16>>::bitor",
    "hash": "1676443064345066321811280106140239663573"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::BitOrAssign<&u16>>::bitor_assign",
    "hash": "497984568844062190110299514068485059336"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::BitXor<&u16>>::bitxor",
    "hash": "321824902530672645215062963855770534722"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::BitXorAssign<&u16>>::bitxor_assign",
    "hash": "650491789782740430717232147391142192644"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&i128>>::shl",
    "hash": "7703786644142918736402803289102642134"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&i16>>::shl",
    "hash": "859591102461920400310669782358540020151"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&i32>>::shl",
    "hash": "16380643324989701560664176672391924294"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&i64>>::shl",
    "hash": "166971183318769176907139294924467665473"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&i8>>::shl",
    "hash": "978249124108109275613641821403992473559"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&isize>>::shl",
    "hash": "616840035937843878816964225186125657426"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&u128>>::shl",
    "hash": "106858444475239909039924975750214627029"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&u16>>::shl",
    "hash": "159535561872318407956889609113441496497"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&u32>>::shl",
    "hash": "104757516128289879661878587124046272627"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&u64>>::shl",
    "hash": "726032477613465577113487271044233166835"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&u8>>::shl",
    "hash": "70934824164964502426702928171190573551"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&usize>>::shl",
    "hash": "88967170656048229549729610353644506589"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "560705037011246158212340306071026778969"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "47366312008905417638983878499371048380"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "102650890469689711848452125233356534808"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "12022401505159213608338861174776748108"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "117917549497742105563013824615280696259"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "165801651716930118032675273253710759672"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "1740391881710236818013298696993891062672"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "450280626597283598713282041790781952960"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "495537169559978086712321793162178848647"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "1737522251360106597418032428919024074141"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "189061408045314444512678726947730745106"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "533346246068896479913526498648580485030"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&i128>>::shr",
    "hash": "184188740176355754546766211081032008472"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&i16>>::shr",
    "hash": "104978714174352531559380508806949270228"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&i32>>::shr",
    "hash": "92829595789859997813261142028959875962"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&i64>>::shr",
    "hash": "8049634690704801642492826472383326927"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&i8>>::shr",
    "hash": "1487501127730095623215062786440188734354"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&isize>>::shr",
    "hash": "730075436502480026416343455452484545849"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&u128>>::shr",
    "hash": "14898046603676871299679385376746271708"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&u16>>::shr",
    "hash": "1703777439336808166410784036587115650784"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&u32>>::shr",
    "hash": "1808764561608789958616768923629731616637"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&u64>>::shr",
    "hash": "83892235900252469010459823124112202357"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&u8>>::shr",
    "hash": "54675702019135355946939998972449113391"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&usize>>::shr",
    "hash": "20460387022426154987055888733434568167"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "1484376903850572498717807848135322697379"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "1179841259157854398512408322427122030720"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "567255828859016616915567789493075258589"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "108795703638509699544151104674758917013"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "63063597178523389679664165873705458351"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "168215287990850373784401324107977531202"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "59821060621298886214950426269410146244"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "17723464019948594547289996209153844072"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "163115203449125013029461889891422012193"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "1696844088931446882214943260510479080436"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "118686175936401947043784252336970680032"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "1145370785793806924311194365055421499569"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::arith::Add<&u32>>::add",
    "hash": "878046817043645378717808125345992677612"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::arith::AddAssign<&u32>>::add_assign",
    "hash": "1273103234751973698112971320705642706289"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::arith::Div<&u32>>::div",
    "hash": "1529060289669500186410646483370052692558"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::arith::DivAssign<&u32>>::div_assign",
    "hash": "1007531441639071614515557063879505119881"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::arith::Mul<&u32>>::mul",
    "hash": "34854298843734442825926405813188140095"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::arith::MulAssign<&u32>>::mul_assign",
    "hash": "1511628909712987623811323760725581277105"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::arith::Rem<&u32>>::rem",
    "hash": "793829256731749348416491976247555010231"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::arith::RemAssign<&u32>>::rem_assign",
    "hash": "181913387919365589787141757117820677155"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::arith::Sub<&u32>>::sub",
    "hash": "43537550310677691914959689060518680337"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::arith::SubAssign<&u32>>::sub_assign",
    "hash": "1373142158362202395410671397636711532054"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::BitAnd<&u32>>::bitand",
    "hash": "104857186632182944772442553788847659033"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::BitAndAssign<&u32>>::bitand_assign",
    "hash": "122389133921983791181774439018187043399"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::BitOr<&u32>>::bitor",
    "hash": "283924555238115522211343675181337067821"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::BitOrAssign<&u32>>::bitor_assign",
    "hash": "1360716763434540377310600429471145669033"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::BitXor<&u32>>::bitxor",
    "hash": "14726869702182266291735977969622614133"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::BitXorAssign<&u32>>::bitxor_assign",
    "hash": "674543254031986704110816924821700315633"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&i128>>::shl",
    "hash": "868118776050252008711386119973009344523"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&i16>>::shl",
    "hash": "180029282763579532388679729201685412174"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&i32>>::shl",
    "hash": "94313632400037019123972520478287998488"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&i64>>::shl",
    "hash": "91840997335001566845794673821270283934"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&i8>>::shl",
    "hash": "15760256600467111288729189517107154559"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&isize>>::shl",
    "hash": "6473717444166661645205861308593802694"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&u128>>::shl",
    "hash": "1187758524150483134218088312165988444227"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&u16>>::shl",
    "hash": "202395816668167962831248277581396521"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&u32>>::shl",
    "hash": "211890721822014019311232834905345965296"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&u64>>::shl",
    "hash": "1326366837998746884012898270529842746582"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&u8>>::shl",
    "hash": "102728497816833942104142410031450149603"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&usize>>::shl",
    "hash": "1580976358587929480613833179920016507742"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "837593396094682959512108379767514378201"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "61491731983950329310676894265801948995"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "945404260035518119216026365453424582158"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "49913892239680097258443668428499006328"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "258877102576282536610991735294572527200"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "227360084064275892212633215634979805664"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "35334390132110711073480814742820253777"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "27905291490706428502257211662844139193"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "88653553197834598737928977843760516741"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "86013350415525700115067012840360295191"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "82210025211924507995458759394196136869"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "649651069470691236016102303469015354727"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&i128>>::shr",
    "hash": "988177142805208221314568553844309595558"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&i16>>::shr",
    "hash": "36636816662155934219238817704878564823"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&i32>>::shr",
    "hash": "811455052143532458412507409948930566527"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&i64>>::shr",
    "hash": "64196124688723095823118867566514009389"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&i8>>::shr",
    "hash": "920455871639463100618076207065655683879"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&isize>>::shr",
    "hash": "155850926903536771219140290788138493167"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&u128>>::shr",
    "hash": "147546450949112665024892182880472408133"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&u16>>::shr",
    "hash": "176738799313917202317894671226644672347"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&u32>>::shr",
    "hash": "86576304868079642219518867369549485220"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&u64>>::shr",
    "hash": "1392411780882792536615078145236793351228"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&u8>>::shr",
    "hash": "608258118921455005210575338231677266492"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&usize>>::shr",
    "hash": "1443218206087522397616827010656100491571"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "20800565574044758218101736142453220894"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "101156690596641372464136077228434621437"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "2493521767227701959143980012858588402"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "104612665719191023610764224956188722668"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "297273689497749162312948393195700861860"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "1050394093128608313517959182436287591381"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "11068920896943063951736577106276111387"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "743264581794211711616545706064469306700"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "1807132717738638711614726621828957845756"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "129459390018125451137069251740193258533"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "961011242599288426114967137319198714301"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "24588557839131282066974871493078757711"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::arith::Add<&u64>>::add",
    "hash": "134539678732592052124705086393343749735"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::arith::AddAssign<&u64>>::add_assign",
    "hash": "58712962057144355625161757308072067873"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::arith::Div<&u64>>::div",
    "hash": "1209227468621513163012801083635821136747"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::arith::DivAssign<&u64>>::div_assign",
    "hash": "66025047854646243267385817793555646709"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::arith::Mul<&u64>>::mul",
    "hash": "83479321638721763692449690507194413846"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::arith::MulAssign<&u64>>::mul_assign",
    "hash": "1431265625403481109716656352456730286845"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::arith::Rem<&u64>>::rem",
    "hash": "172958062518190963586768832038459623228"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::arith::RemAssign<&u64>>::rem_assign",
    "hash": "120141962715614002417595603179453787613"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::arith::Sub<&u64>>::sub",
    "hash": "1277666987446344054214566501732171075611"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::arith::SubAssign<&u64>>::sub_assign",
    "hash": "1257133000582338172417805612927992911528"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::BitAnd<&u64>>::bitand",
    "hash": "6346087602326594397414578242643250420"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::BitAndAssign<&u64>>::bitand_assign",
    "hash": "1503952676880065760318186817304655051858"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::BitOr<&u64>>::bitor",
    "hash": "1811606181469027902910856902949463591034"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::BitOrAssign<&u64>>::bitor_assign",
    "hash": "40818159211691558275726427392084344077"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::BitXor<&u64>>::bitxor",
    "hash": "1035710993352624660311918769550435105295"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::BitXorAssign<&u64>>::bitxor_assign",
    "hash": "380206197024932941818410495771671840074"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&i128>>::shl",
    "hash": "152312476328010757328865205953003898830"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&i16>>::shl",
    "hash": "89197000295579675327913649294764398478"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&i32>>::shl",
    "hash": "149168709398976427161188422741372182505"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&i64>>::shl",
    "hash": "7366644644596129967674171436491890743"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&i8>>::shl",
    "hash": "159428242810209506956738010590775410727"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&isize>>::shl",
    "hash": "176042233533392469927589691904305345321"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&u128>>::shl",
    "hash": "14514630225904823565887235953367641114"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&u16>>::shl",
    "hash": "1662619460976053209510421061390127052039"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&u32>>::shl",
    "hash": "176090599575747477896584410332126005196"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&u64>>::shl",
    "hash": "117728323782251027524725766152971622168"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&u8>>::shl",
    "hash": "99136352417178070511748853077902304607"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&usize>>::shl",
    "hash": "11526601647257390598397248826181870241"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "83019024351820516207702662768134479342"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "1665725819587747087613302216358451721184"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "761890564720383690711734448123863462219"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "25500837421731226481144834715792342357"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "117776694572568462082964860327758552124"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "633829588001523350317552392837712774447"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "277671097034271078314920663689462381074"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "46305687093787415218308356288848150484"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "869515339911828617715459548278139810141"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "121737658333047076569538646530600403437"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "1530717789813777295012127784743211649239"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "182851128506927002416528605373444025842"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&i128>>::shr",
    "hash": "154110981026370630610841239340317486400"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&i16>>::shr",
    "hash": "11720776114217951535931998269612870693"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&i32>>::shr",
    "hash": "160621739598204035815001853904271316726"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&i64>>::shr",
    "hash": "118237725076302568202431678155309527491"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&i8>>::shr",
    "hash": "152431440468037815705964426596861188580"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&isize>>::shr",
    "hash": "145580168434373569798534813430553350250"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&u128>>::shr",
    "hash": "1686583730550496123912481557242834691014"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&u16>>::shr",
    "hash": "392748686748777756911615207935680233002"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&u32>>::shr",
    "hash": "16090518422946079812521542788779333871"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&u64>>::shr",
    "hash": "163992689563033982088618043558349096922"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&u8>>::shr",
    "hash": "137372205973408497644152672833892248109"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&usize>>::shr",
    "hash": "14781457212714720419589546199112714202"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "20699761960969522513490902377860508139"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "432537278147318043318207902547489802987"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "31993422895343505777183359522473608719"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "1456511206758177792013029621743890610423"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "1335634643809417089760048529618447945"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "1615996439249039487410878816530896407709"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "1723256215946150448317034616286303673280"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "4635872526064275049057733470588754440"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "169010079972992917418027463902298036577"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "422575461567732413316274305293110634228"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "22476264440137242076687493756962873476"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "6589798079078415442473689615690597966"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::arith::Add<&u8>>::add",
    "hash": "98328573110472543898671058995967036234"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::arith::AddAssign<&u8>>::add_assign",
    "hash": "1608333412196717223614425602372986452556"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::arith::Div<&u8>>::div",
    "hash": "13873929601884261929081189368137325329"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::arith::DivAssign<&u8>>::div_assign",
    "hash": "105880236617187995549982353027814280117"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::arith::Mul<&u8>>::mul",
    "hash": "1476277167238332479814496504122711235211"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::arith::MulAssign<&u8>>::mul_assign",
    "hash": "156700657519157413445034267699082219864"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::arith::Rem<&u8>>::rem",
    "hash": "120326992867704602303843801578938487712"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::arith::RemAssign<&u8>>::rem_assign",
    "hash": "549508696912775355913511941321326739437"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::arith::Sub<&u8>>::sub",
    "hash": "1152476691731523335117491478094499601798"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::arith::SubAssign<&u8>>::sub_assign",
    "hash": "409743780342455560617106776857591145541"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::BitAnd<&u8>>::bitand",
    "hash": "1748793706065922073115990197758463636263"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::BitAndAssign<&u8>>::bitand_assign",
    "hash": "3209030367679218227557095570811271094"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::BitOr<&u8>>::bitor",
    "hash": "42064129415613643406384991684813475527"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::BitOrAssign<&u8>>::bitor_assign",
    "hash": "8193543802013694733543958397954885494"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::BitXor<&u8>>::bitxor",
    "hash": "42309369360428296738902615723415658624"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::BitXorAssign<&u8>>::bitxor_assign",
    "hash": "31630403509453631423961940275789326173"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&i128>>::shl",
    "hash": "63213955949397182048222247447959614247"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&i16>>::shl",
    "hash": "43712563637202670879777974081613796379"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&i32>>::shl",
    "hash": "175065939307455564015323932597667392911"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&i64>>::shl",
    "hash": "26258900108581475954855823245480004618"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&i8>>::shl",
    "hash": "156485736663370090197080203176820386636"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&isize>>::shl",
    "hash": "1343933908018643470511989811184774759859"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&u128>>::shl",
    "hash": "103033522119145406815932824463103127619"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&u16>>::shl",
    "hash": "1123987701312751549210786509607145108749"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&u32>>::shl",
    "hash": "280432013923037987615979669373532288983"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&u64>>::shl",
    "hash": "1823270998605647210410054494277095352825"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&u8>>::shl",
    "hash": "148698765752243958215325436264479352509"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&usize>>::shl",
    "hash": "1657971415745374660514678652554180299585"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "26920476402376239642969677740827480660"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "142307823707975587401103105079325888247"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "172576880472478391006521427432425081022"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "45637653177962185351539621855410642512"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "1081326713194487378015973104505896104"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "1329789905700698356617683756223039400020"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "1355492644051781577816436565800105464080"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "257426944648337830416477269178221165628"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "1609393392404206318216774419116105703785"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "142907954704421534485980889894587807472"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "233298022309745724310608801946853319086"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "86575361056001513325355485158808515810"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&i128>>::shr",
    "hash": "59041548177243912144967734267737738026"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&i16>>::shr",
    "hash": "117281403935255571610731823152529359817"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&i32>>::shr",
    "hash": "1067278447111488836010407817145122666915"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&i64>>::shr",
    "hash": "108895638333705600659308012342485120806"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&i8>>::shr",
    "hash": "148419777388936071846317542261170072342"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&isize>>::shr",
    "hash": "1390249830340254713714360191229102643237"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&u128>>::shr",
    "hash": "56786668972997064772065630607424655121"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&u16>>::shr",
    "hash": "8918566045425744755224600621507242075"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&u32>>::shr",
    "hash": "29824546853178753904588838992557449099"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&u64>>::shr",
    "hash": "135144980168669314664381378016033014837"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&u8>>::shr",
    "hash": "121477740495020851712548791137866993904"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&usize>>::shr",
    "hash": "132904923077153593881997461737628357881"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "600426195651969265110903116723654631702"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "73549967626989510688872689766772925184"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "310594366007308258612289061332390864746"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "132842219509226845557556861016783530741"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "89478951336307607853511601472185561992"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "1128181294201604730811604459373119028090"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "835472095910007891817895781473901383283"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "1378021136985826632517303008425235335653"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "24297878532561396288609527107433527503"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "1323236387539651372816917957965430699790"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "64427641001877284021686238924932376983"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "6222242885449249968329117214669868276"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::arith::Add<&usize>>::add",
    "hash": "1614654634895657775916257780422624616223"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::arith::AddAssign<&usize>>::add_assign",
    "hash": "147158870004959936747464697283668994744"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::arith::Div<&usize>>::div",
    "hash": "69747676218484066165363542884754488182"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::arith::DivAssign<&usize>>::div_assign",
    "hash": "142681760788998473689708013103283115672"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::arith::Mul<&usize>>::mul",
    "hash": "108224038069129778875059752103422089085"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::arith::MulAssign<&usize>>::mul_assign",
    "hash": "101155082926836052551896339225881163716"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::arith::Rem<&usize>>::rem",
    "hash": "476829673127127077916073877576936714076"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::arith::RemAssign<&usize>>::rem_assign",
    "hash": "989704122349513567915844513531976983482"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::arith::Sub<&usize>>::sub",
    "hash": "319945555664539878017279673086659865715"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::arith::SubAssign<&usize>>::sub_assign",
    "hash": "94306108026677042988410716596634887840"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::BitAnd<&usize>>::bitand",
    "hash": "17435936355128296073444200068781648396"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::BitAndAssign<&usize>>::bitand_assign",
    "hash": "1301292624806143460413593428190372195285"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::BitOr<&usize>>::bitor",
    "hash": "82322853059895501705031650447886161973"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::BitOrAssign<&usize>>::bitor_assign",
    "hash": "184022690104605206822342192086553388485"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::BitXor<&usize>>::bitxor",
    "hash": "36149074340900968792621900469606846933"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::BitXorAssign<&usize>>::bitxor_assign",
    "hash": "79350393797954388413837311361481943097"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&i128>>::shl",
    "hash": "6080378966546193479153631062443333194"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&i16>>::shl",
    "hash": "7413129523035910281224693567749501780"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&i32>>::shl",
    "hash": "939444632222010614614677471821790286780"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&i64>>::shl",
    "hash": "12710701162409349282872629358445955550"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&i8>>::shl",
    "hash": "208596107452770364317013959155965592106"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&isize>>::shl",
    "hash": "1534259096947632768218351509312514329960"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&u128>>::shl",
    "hash": "80649154307622419886564886236550930455"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&u16>>::shl",
    "hash": "83178164713792866388601521223624648676"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&u32>>::shl",
    "hash": "143820901782473728769683967008569396029"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&u64>>::shl",
    "hash": "78073623432144556011899303110745344070"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&u8>>::shl",
    "hash": "171253201941073623695948570542644169052"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&usize>>::shl",
    "hash": "1822164382863374819416998809246245767139"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "16182769236733496805036238086158363030"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "18664063089056231447215191772119332139"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "1483297160714447686412139797758564129512"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "927009371531512756116588301740385362265"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "1370227298514463467010039187693134280432"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "124699002786138129514573571327942375866"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "88496025100864499848162293466950004803"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "1204559652711148633714148432236185971124"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "128799320683647422611192384961259278769"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "62332501374669349683497717234743059401"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "1482301998514267410014574983295622943199"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "42091708057230030911370280004314643563"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&i128>>::shr",
    "hash": "22854779699679463598517452214934714246"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&i16>>::shr",
    "hash": "732700922891620559416387312384839348559"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&i32>>::shr",
    "hash": "141580448588174724243362693285779383439"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&i64>>::shr",
    "hash": "406809492233466025610147152339057178576"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&i8>>::shr",
    "hash": "27104708226954890888594165208903876184"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&isize>>::shr",
    "hash": "98027387298128185035314291442929478975"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&u128>>::shr",
    "hash": "9791938409793031218396404526061322938"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&u16>>::shr",
    "hash": "137510412440746748041737635202782172378"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&u32>>::shr",
    "hash": "677108840940243545918018000659893267183"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&u64>>::shr",
    "hash": "165573824501490882866962632466250925568"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&u8>>::shr",
    "hash": "30234889235354321899681320840007118469"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&usize>>::shr",
    "hash": "179408480666129993586394316006132646255"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "81329413326208677294326270773106028438"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "130736039821025738083147483603749197481"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "170907381786583437452151185264654512905"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "1655304469369678577918044127918978871980"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "120392148007707889946716409728876176879"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "18404752592579528306475238760488928510"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "80754620455484657124150089382098854005"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "1262963103839776627017841136086618634513"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "1782368220017790697914518691907324994449"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "83031568376340571997698067540952010644"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "7865504992128505684051582602203364431"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "665125577036080795417467355620283829957"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<bool as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "250800211300164603812517143290931935490"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i128 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "96038966749090906749596126732450523525"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i128 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "80040651926103909678271999392285372990"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i16 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "1830217983329785560410244833622901427052"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i16 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "6989983334729211908927339249900663943"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i32 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "122302766217189543014900254878157438416"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i32 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "1063987999954300775215342309582526319529"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i64 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "173387786816898789623000030637272844593"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i64 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "136616187162751180573644041167231130554"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i8 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "513576104662679029714274679730481362425"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i8 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "60458008535657027788705666854141614114"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<isize as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "1206474107364746324514036244532711785001"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<isize as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "62613819432045952176759186974463354075"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u128 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "30434467613694789726530890838551602410"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u128 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "41389422597421656741395145042566161444"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u16 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "1032289468151012314118203924934304480766"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u16 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "1806494181001350783915205167250141868281"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u32 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "1333588820054761765511554855614177767265"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u32 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "14821326756404741505611264372285877509"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u64 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "15780086404796901452171114016829526503"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u64 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "1142238300830356026814631151773818865873"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u8 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "167165260706103225348828696425526634166"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u8 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "732735713645133618817345018103717632801"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<usize as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "176863413171952423588298210118276962435"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<usize as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "130330123525716393101034958525209554520"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "intrinsics::fallback::wide_mul_u128",
    "hash": "56064935532181582357217772644767711324"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "intrinsics::fallback::wide_mul_u128::from_low_high",
    "hash": "1215867595331634964412092261842216784704"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "intrinsics::fallback::wide_mul_u128::scalar_mul",
    "hash": "96480950455274538863936471544432656148"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "intrinsics::fallback::wide_mul_u128::to_low_high",
    "hash": "1424635015723676172711879731863681352571"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::Assume",
    "hash": "139116841123241296862329197121605946323"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::Call",
    "hash": "6078477730596990242113457321841194043"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::Goto",
    "hash": "1759747026585201915317755709751175452805"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::Return",
    "hash": "1170599627963948291011266800954281277174"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::ReturnTo",
    "hash": "1011495986108837620716835023935711399203"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::Unreachable",
    "hash": "66192141860655940445911401905070001291"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::UnwindCleanup",
    "hash": "1017943120358722484515226857180518966828"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::UnwindContinue",
    "hash": "716205042651839572811207433411047803327"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::UnwindResume",
    "hash": "434066018118664981110529406670455942351"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::UnwindTerminate",
    "hash": "1007748932934090353117462947671117947538"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::UnwindUnreachable",
    "hash": "17925609387187167828243374465831357219"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::AtomicOrdering as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "711056209482254658113082833997498389498"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::AtomicOrdering as cmp::PartialEq>::eq",
    "hash": "88877246034085362305537985067713117388"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::arr_mod::generated_struct as clone::Clone>::clone",
    "hash": "668434863308423807612947543209820319186"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::arr_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "145417971357762886007482460662303412209"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::bool_mod::generated_struct as clone::Clone>::clone",
    "hash": "1130182855573675769914523734239966029409"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::bool_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "2887600198566352773684432512560948637"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::char_mod::generated_struct as clone::Clone>::clone",
    "hash": "109712242799967761297613655658910135074"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::char_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "102381487177496324338476543520831045774"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::i128_mod::generated_struct as clone::Clone>::clone",
    "hash": "95924691271640231921433012408833616119"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::i128_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "167854312578663968009529066705777883165"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::i16_mod::generated_struct as clone::Clone>::clone",
    "hash": "126771781333547488368086322377509765640"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::i16_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "1689252594087785933915598483619334608152"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::i32_mod::generated_struct as clone::Clone>::clone",
    "hash": "55986416196107202667177120378888181856"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::i32_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "34665534152048460913367544338390960166"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::i64_mod::generated_struct as clone::Clone>::clone",
    "hash": "8041577304042185661418501751727040648"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::i64_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "9859181824640323755333096837796082576"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::i8_mod::generated_struct as clone::Clone>::clone",
    "hash": "957069709908682265117649890045899517332"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::i8_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "48027802749924940115726248583106801393"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::struct_A as clone::Clone>::clone",
    "hash": "1137666718250997373015979146969043840015"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::struct_A as cmp::PartialEq>::eq",
    "hash": "1554279941658177487310761975885713866112"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::struct_mod::generated_struct as clone::Clone>::clone",
    "hash": "1242200455388979343313558476846572027837"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::struct_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "1004825844807549103615688802214258372912"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::tuple_mod::generated_struct as clone::Clone>::clone",
    "hash": "1220998989066453544810325948197839204112"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::tuple_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "554385974591348046015105854354708489357"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u128_mod::generated_struct as clone::Clone>::clone",
    "hash": "1107942412453118282716260082566407623385"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u128_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "1526236189042748075114283679914995575222"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u16_mod::generated_struct as clone::Clone>::clone",
    "hash": "15477842866907110815631714505822464592"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u16_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "122261535514438133911763084164840138267"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u32_mod::generated_struct as clone::Clone>::clone",
    "hash": "98802623013543488718768907816755635006"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u32_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "6004524066957894349610382023112068453"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u64_mod::generated_struct as clone::Clone>::clone",
    "hash": "306348905796160350213674312474299428749"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u64_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "1305367119046602001816363039827513849713"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u8_mod::generated_struct as clone::Clone>::clone",
    "hash": "58344607455878823815951414012232932218"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u8_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "49286551530941805783318609903352435112"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u8_struct as clone::Clone>::clone",
    "hash": "594674818617818225913145583589805084172"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u8_struct as cmp::PartialEq>::eq",
    "hash": "95855262543484333061997486664200818696"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "cell::panic_already_borrowed::do_panic::compiletime",
    "hash": "149016491882703966614369493205944347039"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "cell::panic_already_borrowed::do_panic::runtime",
    "hash": "139968505624737792766132945556800200706"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "cell::panic_already_mutably_borrowed::do_panic::compiletime",
    "hash": "24519840219812011119266756937500078368"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "cell::panic_already_mutably_borrowed::do_panic::runtime",
    "hash": "232702440905830313613787224773500015183"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "char::methods::encode_utf16_raw::do_panic::compiletime",
    "hash": "88052731816800370845922057460954567729"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "char::methods::encode_utf16_raw::do_panic::runtime",
    "hash": "12750293789882226030400923003792970249"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "char::methods::encode_utf8_raw::do_panic::compiletime",
    "hash": "1638183979521812543813190801179967899671"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "char::methods::encode_utf8_raw::do_panic::runtime",
    "hash": "1440090119059276225817676096245272798728"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "f128::<impl f128>::clamp::do_panic::compiletime",
    "hash": "159963367604859094706177739418435620816"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "f128::<impl f128>::clamp::do_panic::runtime",
    "hash": "102156103697541756033171737562118538978"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "f16::<impl f16>::clamp::do_panic::compiletime",
    "hash": "219487126421145596418015354223038147254"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "f16::<impl f16>::clamp::do_panic::runtime",
    "hash": "175744618598899473055120791429071607954"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "f32::<impl f32>::clamp::do_panic::compiletime",
    "hash": "198150020248112727011407715180527090277"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "f32::<impl f32>::clamp::do_panic::runtime",
    "hash": "108851414878074856411148561109245845557"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "f64::<impl f64>::clamp::do_panic::compiletime",
    "hash": "1204216716995483789011413885380631460095"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "f64::<impl f64>::clamp::do_panic::runtime",
    "hash": "811941444721154896515461266076216954987"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::assume",
    "hash": "150801711286849130431483622466962590964"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::cold_path",
    "hash": "907759440697598486516002160639518786286"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::const_allocate",
    "hash": "1643928417563595727114252839317269764770"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::contract_checks",
    "hash": "202041077652800040812890563446226571566"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::likely",
    "hash": "159665749354558523559870046369576019821"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::maximumf128",
    "hash": "59203540119877078856937496276701616291"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::maximumf16",
    "hash": "1839012001462943493312789979357486918333"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::maximumf32",
    "hash": "975617838670588919414885362085125181836"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::maximumf64",
    "hash": "1761474634303920217017290991538678528378"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::minimumf128",
    "hash": "13429142554620148681304087284986032831"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::minimumf16",
    "hash": "1526820967428337727416708302353840979734"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::minimumf32",
    "hash": "754999970016676017213814673682659647165"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::minimumf64",
    "hash": "984223037173483986910484498604904703708"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::ub_checks",
    "hash": "757546346109244535514310268435567268562"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::unlikely",
    "hash": "690438059002452523915046149102377829082"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_2ways_arr_to_struct",
    "hash": "46447222348762114274187716764229282004",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_2ways_arr_to_tuple",
    "hash": "819098571030596365612518703417731031348",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_2ways_struct_to_arr",
    "hash": "174172504662833262614727178437904304760",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_2ways_struct_to_tuple",
    "hash": "1843189434621796025215362011874036485582",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_2ways_tuple_to_arr",
    "hash": "130126523792183705785040619884409947003",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_2ways_tuple_to_struct",
    "hash": "72425870914086803915160096157496735864",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "170706195224233827572599677761077790523",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "115036054646249812861796938366953075899",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "17894750973009018848376945260455868403",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "16998342207840898541207327654545112483",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "124007371799660250603213124857999083471",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "138010035496309689272977736123005170706",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_2ways_arr_to_struct",
    "hash": "454661988050721499416136718805110620904",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_2ways_arr_to_tuple",
    "hash": "106143343643335092132863396516736678021",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_2ways_struct_to_arr",
    "hash": "115973229728224918498642435162087375930",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_2ways_struct_to_tuple",
    "hash": "514701490863117272916077976338416545887",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_2ways_tuple_to_arr",
    "hash": "118631764120986163439913924981612890170",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_2ways_tuple_to_struct",
    "hash": "856221532004638585216494625618442263239",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "18081809484662637473226047090199678649",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "2336688561327942481633082236452589999",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "1197652775851820773112312271146567962161",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "90823745213349673719233644831499393620",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "106689872365539325905929666208727692868",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "73461527720797844983834604896663015959",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_2ways_arr_to_struct",
    "hash": "169501045058960824034511798075329179615",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_2ways_arr_to_tuple",
    "hash": "1658483616874977343451004813354159874",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_2ways_struct_to_arr",
    "hash": "73266755906604088769517329102824186004",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_2ways_struct_to_tuple",
    "hash": "33436219485918712789927984925220317968",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_2ways_tuple_to_arr",
    "hash": "1283017077646587321711879511469343650010",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_2ways_tuple_to_struct",
    "hash": "56935805093041633551476308749379521984",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "225997474419720807717970994592778727001",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "147300047602713462197843927442742401896",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "1383510944920668765012148392222540930150",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "899409167663175869012323934587312364783",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "690642521798548385814313425516853093751",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "97399232158320421697797049946107087115",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_transmute_ptr_address",
    "hash": "10942884678996697100742691061580441778",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_transmute_ref_address",
    "hash": "1654176694811095559814433563160779213928",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_transmute_slice_metadata",
    "hash": "859460922673644782717314303323357946366",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_transmute_unchecked_ptr_address",
    "hash": "1534633453104245667017378574265394529272",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_transmute_unchecked_ref_address",
    "hash": "24071408906366636596310768311751825019",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_transmute_unchecked_slice_metadata",
    "hash": "73861309891823345479708586943910194438",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_typed_swap_char",
    "hash": "99087040340237640747573342868110898392",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_typed_swap_non_zero",
    "hash": "190550658472437092416599792195527642478",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_typed_swap_u8",
    "hash": "970010432663472765715405305156996711872",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_2ways_arr_to_struct",
    "hash": "1803312362610158216414040485277419868627",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_2ways_arr_to_tuple",
    "hash": "1549026955028214226814042888803071462795",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_2ways_struct_to_arr",
    "hash": "1298564890417601771312068963593721702999",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_2ways_struct_to_tuple",
    "hash": "101038883448794706771104300622436612463",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_2ways_tuple_to_arr",
    "hash": "123448179800053972275159046770901322162",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_2ways_tuple_to_struct",
    "hash": "46001530302947994035869959385680264112",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "111806770903480447575955445085249153852",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "137096329086792499481119382084972326773",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "144423664847378937113649503719869710959",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "116881299018670619042592052659110773796",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "117744843995599279406678957330878460305",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "66277116059893608438412173179432684372",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_2ways_arr_to_struct",
    "hash": "1102078376357040049313761646219334077283",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_2ways_arr_to_tuple",
    "hash": "122883335689336854304209917338904828522",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_2ways_struct_to_arr",
    "hash": "71467043469606022499012824182563767117",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_2ways_struct_to_tuple",
    "hash": "20875399631206029637542264011622357378",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_2ways_tuple_to_arr",
    "hash": "73393444306018727853195027974557677192",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_2ways_tuple_to_struct",
    "hash": "179584755967858386524466783837553557194",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "112375975822483173317353568746695977462",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "170847564371027037836250262148393426349",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "79830540128202501316994398833352410793",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "938261663502993594516248673769925924243",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "47908888165023011703250483182556438026",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "135458506578568212948300961269919966044",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_2ways_arr_to_struct",
    "hash": "161531105592250183229093705318092993152",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_2ways_arr_to_tuple",
    "hash": "23812970532596133163495972505551752305",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_2ways_struct_to_arr",
    "hash": "46574472254891381365814292921411789102",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_2ways_struct_to_tuple",
    "hash": "1062924061361990335596529619163234962",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_2ways_tuple_to_arr",
    "hash": "41980801347240923410896656065530757839",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_2ways_tuple_to_struct",
    "hash": "58025101875407826923233242959673430116",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "2438079834620969517247280612675433111",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "594646976408876449214709936897583897495",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "1584254250136510990411047485501275921466",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "81595358034999648095483814415472822951",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "121241427953686195434385159848408745406",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "134983885436075949312653395664928969228",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_2ways_arr_to_struct",
    "hash": "638281003729232704113799129195592344349",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_2ways_arr_to_tuple",
    "hash": "57594426017405986668979158846583976749",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_2ways_struct_to_arr",
    "hash": "31024286613188645368375642095015253026",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_2ways_struct_to_tuple",
    "hash": "128941404272987868453324520843252730154",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_2ways_tuple_to_arr",
    "hash": "105536689182801289766878055479491310676",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_2ways_tuple_to_struct",
    "hash": "93966688273016502146218561921044102401",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "809663695706075228518226869720360200531",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "25722258471827773714584247661200326062",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "84966102348247661754062419681235377561",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "159687118142543268172308132570768863123",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "47840552903895937018211766007560559296",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "294538348224081457112819008680711911",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_2ways_arr_to_struct",
    "hash": "181404025920720304445228090539112430557",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_2ways_arr_to_tuple",
    "hash": "1255407853802375458018251948925956218709",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_2ways_struct_to_arr",
    "hash": "26331403519442813595707662379206376042",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_2ways_struct_to_tuple",
    "hash": "136419798882944607966313388129250762685",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_2ways_tuple_to_arr",
    "hash": "353173675341401862377752918722646145",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_2ways_tuple_to_struct",
    "hash": "1614664556281629212813847732235276803409",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "112071721240654436072065408223693308979",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "1742567546439949598111589577731271301250",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "169699323710705009477195264663143262459",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "153258115437652456623707814458957857841",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "1485076860021396200218102965255255712035",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "90561279548178300215865028940148150901",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_fail_f32_to_char",
    "hash": "117888634618107653169285091535067997652",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_fail_i32_to_char",
    "hash": "906928633820285284115451265543592476538",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_fail_i8_to_bool",
    "hash": "103351020095445532827623710399606916321",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_fail_tuple_to_array",
    "hash": "11484696332915311101434853559703703172",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_fail_tuple_to_struct",
    "hash": "21058825480069205752090256137198678447",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_fail_tuple_to_tuple",
    "hash": "875339502314828799914749054712012058870",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_fail_u32_to_char",
    "hash": "1658551408259713674016544485868013939383",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_fail_u8_to_bool",
    "hash": "708073636594610449310725440373060367981",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_bool_to_i8",
    "hash": "12075485336201253419692735109903496120",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_bool_to_u8",
    "hash": "9484830916799611742463060836324411575",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_char_to_f32",
    "hash": "2433915144602193836923801184274785847",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_char_to_i32",
    "hash": "991953099117193378713075842137741614359",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_char_to_u32",
    "hash": "13485689618782484197425388000930346514",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_f32_to_char",
    "hash": "54745843615750538958419512909318202592",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_f32_to_i32",
    "hash": "1168782887460991199718096664534879486157",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_f32_to_u32",
    "hash": "946604788067296605110981180043288636675",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_f64_to_i64",
    "hash": "75753025837061513541419920864805314481",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_f64_to_u64",
    "hash": "377217855089213854812226147906617621461",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i128_to_u128",
    "hash": "988990810077135512018115330772148874253",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i16_to_u16",
    "hash": "42510263206727149901943168901994116937",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i32_to_char",
    "hash": "830866213162024305017700630398871895524",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i32_to_f32",
    "hash": "155566086465034992962232889010213975434",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i32_to_u32",
    "hash": "130778410883370313601088472790045763166",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i64_to_f64",
    "hash": "683727320225700557813639410955627975588",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i64_to_u64",
    "hash": "107237130132153372769225754218930316561",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i8_to_bool",
    "hash": "1218772705083019210212461874006905679080",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i8_to_u8",
    "hash": "1359279884243369717812081074938713810318",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_tuple_to_array",
    "hash": "20697048382364912536581279652478393463",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_tuple_to_struct",
    "hash": "17490054164566858609851240816277802357",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_tuple_to_tuple",
    "hash": "1131931936549693775310913588231353411047",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u128_to_i128",
    "hash": "1461260413641825203614548543702007763750",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u16_to_i16",
    "hash": "742467522569302902316033925997148071489",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u32_to_char",
    "hash": "75919042755330836585070470158030692212",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u32_to_f32",
    "hash": "1195582530850636471412050079303307101867",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u32_to_i32",
    "hash": "1243893104645823087310507920335039638126",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u64_to_f64",
    "hash": "161450271877470610259761285943569642651",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u64_to_i64",
    "hash": "1799261862631666800612269882863883937060",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u8_to_bool",
    "hash": "107111144219079811934938410639282157201",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u8_to_i8",
    "hash": "34055782383635767255972967863404290600",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_2ways_arr_to_struct",
    "hash": "111845093939607815033113330996687570883",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_2ways_arr_to_tuple",
    "hash": "133144353129126800479638453995675596393",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_2ways_struct_to_arr",
    "hash": "10414198037499466886199340832376267375",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_2ways_struct_to_tuple",
    "hash": "1366947018805137074618321406168143814756",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_2ways_tuple_to_arr",
    "hash": "25097594252465907982822858874574386025",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_2ways_tuple_to_struct",
    "hash": "171707437508023796712801668987742621918",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "109109644827150192588774207165388525208",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "155720242362210785875677135027727941380",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "343629069550078693015526225260243172248",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "1010987699697296920111277283818080175731",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "436821025391477573213129086899267084962",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "166300307959168914301785081444396994632",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::supported_status",
    "hash": "1100372222744605741114100551764421082829"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_bool_to_i8",
    "hash": "718693290755984347915817259354372572970",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_bool_to_u8",
    "hash": "117478692292381962093367761708667137960",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_char_to_f32",
    "hash": "86262948273561778817010907273920077826",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_char_to_i32",
    "hash": "172618627627382128817069667280413394930",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_char_to_u32",
    "hash": "97928361116020777059709368920225071313",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_f32_to_char",
    "hash": "14801386883649144278911374832851845004",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_f32_to_i32",
    "hash": "1657218611146245293810143174217947676222",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_f32_to_u32",
    "hash": "117888463512687822563263046959363924844",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_f64_to_i64",
    "hash": "100702857582161228446875462757900951586",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_f64_to_u64",
    "hash": "420208657478342306810661831398677425463",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i128_to_u128",
    "hash": "851942130402637700216607288828128933329",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i16_to_u16",
    "hash": "512824805686904040816535463583737259286",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i32_to_char",
    "hash": "136952182183268743901290299633162980075",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i32_to_f32",
    "hash": "110091839533188056969841020777256575347",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i32_to_u32",
    "hash": "1682639039354570496110686140651388474261",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i64_to_f64",
    "hash": "100252754864062283641678816788495875339",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i64_to_u64",
    "hash": "1141017954758555998612331121956279552679",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i8_to_bool",
    "hash": "176415916689907350113864993983125813592",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i8_to_u8",
    "hash": "1742501482843348794416371568643305898488",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u128_to_i128",
    "hash": "150182457730587320255948926618629345348",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u16_to_i16",
    "hash": "1148698518551909416416180093034220240487",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u32_to_char",
    "hash": "790750140959505749015595634770981351963",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u32_to_f32",
    "hash": "309586228215030546112369219853538383260",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u32_to_i32",
    "hash": "594378643378787766414905857051214179689",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u64_to_f64",
    "hash": "82277223832836006872361007542153332794",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u64_to_i64",
    "hash": "452547995701100327513124099204718357949",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u8_to_bool",
    "hash": "1158267317395461768410329999379507386957",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u8_to_i8",
    "hash": "479814048118519494912281810062907857",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_bool_to_i8",
    "hash": "11234618880930064633646342298037425085",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_bool_to_u8",
    "hash": "1151746900485341890412511450959747769515",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_char_to_f32",
    "hash": "74413808896093930146210741360432358303",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_char_to_i32",
    "hash": "165211992052284507793996534848024913545",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_char_to_u32",
    "hash": "152680232040284635206643345362854364441",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_f32_to_char",
    "hash": "1637280738744031384217265673106924283048",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_f32_to_i32",
    "hash": "66326402245818598228875735565326862867",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_f32_to_u32",
    "hash": "6518019669236009344770085453887345390",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_f64_to_i64",
    "hash": "757238448406993541612119069004275039848",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_f64_to_u64",
    "hash": "267755553333520330615776550178515301173",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i128_to_u128",
    "hash": "485889702816845220213074124002675723561",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i16_to_u16",
    "hash": "994909378141069830611924277578520940949",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i32_to_char",
    "hash": "222747330198175049518412060612571452742",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i32_to_f32",
    "hash": "1777198837032772752415231450211702205278",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i32_to_u32",
    "hash": "129764071429617620937925788615377757039",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i64_to_f64",
    "hash": "137999621351913788916120143498266512688",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i64_to_u64",
    "hash": "1714448638036708512715932605290314352455",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i8_to_bool",
    "hash": "12994186492334583711373947723307221004",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i8_to_u8",
    "hash": "12938587634448358667295939898034180164",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u128_to_i128",
    "hash": "162388346848145571838147814058966461041",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u16_to_i16",
    "hash": "46380537833725279708414726586909329409",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u32_to_char",
    "hash": "1762656362716730234810149661675010168300",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u32_to_f32",
    "hash": "60176602238215934085352152353923760192",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u32_to_i32",
    "hash": "177520457808445606847652680238138296818",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u64_to_f64",
    "hash": "1048592084179678951313367921230564370417",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u64_to_i64",
    "hash": "1034656679836398552112060688626749343507",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u8_to_bool",
    "hash": "105726862583087538751816481187692544035",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u8_to_i8",
    "hash": "172884615521094841187896972061313722613",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_bool_to_i8",
    "hash": "481589559063876481211306728576271090069",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_bool_to_u8",
    "hash": "1184965038288395784814888264322036388578",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_char_to_f32",
    "hash": "52460779602735488872510638810270835115",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_char_to_i32",
    "hash": "229486037460898264486494671292452355",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_char_to_u32",
    "hash": "1425187995580063519210765280856771082598",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_f32_to_char",
    "hash": "536089479205392108151484881960878535",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_f32_to_i32",
    "hash": "1688886869746163293411768184254305862422",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_f32_to_u32",
    "hash": "472529676620762709011528786996811450379",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_f64_to_i64",
    "hash": "14195598881026685206188916942843068678",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_f64_to_u64",
    "hash": "121641822530538977074209003585715951457",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i128_to_u128",
    "hash": "375931946145524692416350034297215244452",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i16_to_u16",
    "hash": "1106474878493827849415658481064891132180",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i32_to_char",
    "hash": "147795608688418681726078995478641171610",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i32_to_f32",
    "hash": "47429229922379397329780166598634376099",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i32_to_u32",
    "hash": "1477833059357539851313951660800848340071",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i64_to_f64",
    "hash": "1817668722102552620812364772446402790925",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i64_to_u64",
    "hash": "633809814117505894910299385095868473010",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i8_to_bool",
    "hash": "104663810641068135077575729081344209952",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i8_to_u8",
    "hash": "567257716275800969513698326500261810696",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u128_to_i128",
    "hash": "12062606281515543091753842709521741276",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u16_to_i16",
    "hash": "123660911511559722508034929489434741707",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u32_to_char",
    "hash": "123775852278191233416940685975533694821",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u32_to_f32",
    "hash": "79469315224361352978190774855499503347",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u32_to_i32",
    "hash": "84635908967573641467527311434066762394",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u64_to_f64",
    "hash": "802511089344905960612426861018222657722",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u64_to_i64",
    "hash": "76402475924937604234045940242800013340",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u8_to_bool",
    "hash": "152647190142807722692305853971685188703",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u8_to_i8",
    "hash": "10554253401020006055962818074048672089",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_zero_size",
    "hash": "484507416527538729312714644315538965810",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_2ways_arr_to_struct",
    "hash": "53475726675331584149199360481997737603",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_2ways_arr_to_tuple",
    "hash": "734593477532422110114483586839073157066",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_2ways_struct_to_arr",
    "hash": "268187955278498487310398543663841022541",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_2ways_struct_to_tuple",
    "hash": "261157673773188755636695304561150133",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_2ways_tuple_to_arr",
    "hash": "12458741435295891953114315717776023856",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_2ways_tuple_to_struct",
    "hash": "169137317491539972312217432394274369057",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "137855870536442606561169018359094878527",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "1236538943472088218318177293296282267960",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "115557290903372158164931150779480697088",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "152007339834631369853842467613446493472",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "1275024374571138609410931929685171545481",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "15716371738351067359033108947701760911",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_2ways_arr_to_struct",
    "hash": "168899072737158827072896069828950422951",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_2ways_arr_to_tuple",
    "hash": "53222677986937345076644123818842500280",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_2ways_struct_to_arr",
    "hash": "72562819334599715179918218359688694913",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_2ways_struct_to_tuple",
    "hash": "1100187933760399226213040812892608629851",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_2ways_tuple_to_arr",
    "hash": "123652942458352413496640406355714133002",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_2ways_tuple_to_struct",
    "hash": "153910184614461246810838351127185681327",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "32127231862549891824445782731838452032",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "6559657525378550607731227520169462167",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "115212431747952193335090107202822918648",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "455884105392622609517708660248303361813",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "72190144067358466199192714082056831522",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "17714158506236030819698740305427136704",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_2ways_arr_to_struct",
    "hash": "656205906058391897112919433414564083513",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_2ways_arr_to_tuple",
    "hash": "223889023864698205711677554409048891961",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_2ways_struct_to_arr",
    "hash": "1645920918945263180012710889776809761615",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_2ways_struct_to_tuple",
    "hash": "40082902075985569452431119905976113511",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_2ways_tuple_to_arr",
    "hash": "134594113101679702055039915400836324624",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_2ways_tuple_to_struct",
    "hash": "93568163100798012532621069530368137692",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "59217256022115344276797227904501332416",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "90901043357793540719497925325671710572",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "120458147830766595605645239268864099496",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "98978646803801418203010530377748030400",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "1271572701768903503315546032469537884735",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "96975144623661457813573669724544031415",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_2ways_arr_to_struct",
    "hash": "32332013155843081018999368000173693807",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_2ways_arr_to_tuple",
    "hash": "20972088621114050087900247405653622100",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_2ways_struct_to_arr",
    "hash": "10219142596680217873845183000297659358",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_2ways_struct_to_tuple",
    "hash": "1685339222753471205414751716041467115756",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_2ways_tuple_to_arr",
    "hash": "6667298523342917104033811686547297802",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_2ways_tuple_to_struct",
    "hash": "82354847659043694025742519073904386834",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "150802962811397969666524804383757166311",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "15539346005716556504832348816332630095",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "9330044668497187890599191563397780083",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "71008511842853691489176188893830628713",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "3554679583703367982115860510374928928",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "380556212629490726911236982720239418732",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_2ways_arr_to_struct",
    "hash": "1361991218846693003016923110387844867128",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_2ways_arr_to_tuple",
    "hash": "48102026614662970037766343633427325626",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_2ways_struct_to_arr",
    "hash": "530510663060922111617202261984784553482",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_2ways_struct_to_tuple",
    "hash": "161454072579243846675868145518188115799",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_2ways_tuple_to_arr",
    "hash": "159091122712658146555303991666435328867",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_2ways_tuple_to_struct",
    "hash": "159088605611825071467344635549226707558",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "718680891089084443816369704317478144215",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "1528063795423248193916778325112354743565",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "77476190358769003548803030592695308288",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "125975800464386816388727229705929028003",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "159188286323700631917353179999076086579",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "67749744799836565116816349208756199360",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_2ways_arr_to_struct",
    "hash": "1623704808783187586117855325764838316338",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_2ways_arr_to_tuple",
    "hash": "772868204692296553814246394782733690918",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_2ways_struct_to_arr",
    "hash": "74382108651710657628381406629521653511",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_2ways_struct_to_tuple",
    "hash": "32671419444748264788849495831073364097",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_2ways_tuple_to_arr",
    "hash": "36488505939711536246085378168410727108",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_2ways_tuple_to_struct",
    "hash": "53006118879221173215898318848988928466",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "74685184618623209541366998748529376105",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "111309205190625266453616613510434226803",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "698302227839108452018036752828738618070",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "1874540091083044820784990205851055860",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "1601799851768569981514708394077657967730",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "489938515707128226623958812138801551",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "num::from_ascii_radix_panic::do_panic::compiletime",
    "hash": "74535031650896051214723818354113156377"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "num::from_ascii_radix_panic::do_panic::runtime",
    "hash": "1540536262925467222212675246631117950853"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "slice::<impl [T]>::copy_from_slice::len_mismatch_fail::do_panic::compiletime",
    "hash": "179544472223032317616057845771026677656"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "slice::<impl [T]>::copy_from_slice::len_mismatch_fail::do_panic::runtime",
    "hash": "43608154471091294776214273775174967548"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "slice::index::slice_index_fail::do_panic::compiletime",
    "hash": "572342295307501594510847624094986331249"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "slice::index::slice_index_fail::do_panic::runtime",
    "hash": "1440090119059276225817676096245272798728"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "ub_checks::check_language_ub::compiletime",
    "hash": "1541363921555960948418190727205931026341"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "ub_checks::check_language_ub::runtime",
    "hash": "23815256893174302637797703719499456373"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<I> as iter::adapters::step_by::StepByImpl<I>>::spec_size_hint::first_size",
    "hash": "62286244296064334663190037313067156494"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<I> as iter::adapters::step_by::StepByImpl<I>>::spec_size_hint::other_size",
    "hash": "284863414593542695517394618973036226172"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u16>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<u16>>>::spec_next_back",
    "hash": "1437546102495456400112923537045137278358"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u16>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<u16>>>::spec_nth_back",
    "hash": "643345203562356928412882940442072418445"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u16>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u16>>>::spec_next",
    "hash": "87798882702360712538092956752811348956"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u16>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u16>>>::spec_nth",
    "hash": "64208647243860053031097183209296544108"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u16>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u16>>>::spec_size_hint",
    "hash": "158301573143810970113344600865488026234"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u32>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<u32>>>::spec_next_back",
    "hash": "90456138571888307211130366223652161242"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u32>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<u32>>>::spec_nth_back",
    "hash": "1123425568399867060613336774662337523254"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u32>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u32>>>::spec_next",
    "hash": "522606069989804718612634582141025004921"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u32>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u32>>>::spec_nth",
    "hash": "116554401655178621611518527983324674081"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u32>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u32>>>::spec_size_hint",
    "hash": "1745453724709238680517191219809178490890"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u64>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u64>>>::spec_next",
    "hash": "16318338400607137624101022571842952"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u64>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u64>>>::spec_nth",
    "hash": "33278394850797881005322493430647364447"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u64>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u64>>>::spec_size_hint",
    "hash": "9309498195766837577194283210562229959"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u8>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<u8>>>::spec_next_back",
    "hash": "31992152674570070249470577279589129744"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u8>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<u8>>>::spec_nth_back",
    "hash": "1360089990866839182210110358477333279357"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u8>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u8>>>::spec_next",
    "hash": "6514498025757295811736078266057059705"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u8>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u8>>>::spec_nth",
    "hash": "160605116150370931999359069562242631061"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u8>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u8>>>::spec_size_hint",
    "hash": "9255805255804584193411116438326773862"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<usize>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<usize>>>::spec_next_back",
    "hash": "690642499111150908817515126236491340300"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<usize>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<usize>>>::spec_nth_back",
    "hash": "495206956860265326413804780019807128642"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<usize>> as iter::adapters::step_by::StepByImpl<ops::range::Range<usize>>>::spec_next",
    "hash": "18157611811437228713953496245292498768"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<usize>> as iter::adapters::step_by::StepByImpl<ops::range::Range<usize>>>::spec_nth",
    "hash": "182618059729930855471845759998570288872"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<usize>> as iter::adapters::step_by::StepByImpl<ops::range::Range<usize>>>::spec_size_hint",
    "hash": "1144218567684167729616089602923919486424"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<ops::range::Range<u16> as iter::adapters::step_by::SpecRangeSetup<ops::range::Range<u16>>>::setup",
    "hash": "1197054376205287416086482589025906711"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<ops::range::Range<u32> as iter::adapters::step_by::SpecRangeSetup<ops::range::Range<u32>>>::setup",
    "hash": "1436884551322669932518033666456366140224"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<ops::range::Range<u64> as iter::adapters::step_by::SpecRangeSetup<ops::range::Range<u64>>>::setup",
    "hash": "1052928638817897151114530521064780319088"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<ops::range::Range<u8> as iter::adapters::step_by::SpecRangeSetup<ops::range::Range<u8>>>::setup",
    "hash": "51738629911164330999079333543746191939"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<ops::range::Range<usize> as iter::adapters::step_by::SpecRangeSetup<ops::range::Range<usize>>>::setup",
    "hash": "174977304686490885309680207331416602670"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<ascii::ascii_char::AsciiChar as iter::range::Step>::backward_checked",
    "hash": "11591934435428550477478592925010886500"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<ascii::ascii_char::AsciiChar as iter::range::Step>::backward_unchecked",
    "hash": "6738496757163010772437960260304922226"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<ascii::ascii_char::AsciiChar as iter::range::Step>::forward_checked",
    "hash": "141565874404172411108229313060146098871"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<ascii::ascii_char::AsciiChar as iter::range::Step>::forward_unchecked",
    "hash": "1823634619481828272716066546811320637514"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<ascii::ascii_char::AsciiChar as iter::range::Step>::steps_between",
    "hash": "171867204063098476911645982607944067247"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<char as iter::range::Step>::backward_checked",
    "hash": "1035985182933031894913500157142649707944"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<char as iter::range::Step>::backward_unchecked",
    "hash": "892987672415399538613720536500712958402"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<char as iter::range::Step>::forward_checked",
    "hash": "35769536384835782011169615419401450186"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<char as iter::range::Step>::forward_unchecked",
    "hash": "598232701486116500811215552012380574598"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<char as iter::range::Step>::steps_between",
    "hash": "17542033173126621586535829358682728021"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i128 as iter::range::Step>::backward",
    "hash": "127025045047468658121991907656712424924"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i128 as iter::range::Step>::backward_checked",
    "hash": "40340301411500215009732404988289136500"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i128 as iter::range::Step>::backward_unchecked",
    "hash": "265165038436647666312701080296590805973"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i128 as iter::range::Step>::forward",
    "hash": "929322359568744194415265841579515242692"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i128 as iter::range::Step>::forward_checked",
    "hash": "1622314850072382205913579916653639643338"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i128 as iter::range::Step>::forward_unchecked",
    "hash": "759245764043262648410686924413528512139"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i128 as iter::range::Step>::steps_between",
    "hash": "15074500791077894910441351311633282231"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i16 as iter::range::Step>::backward",
    "hash": "147241661984487037981589210808862777352"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i16 as iter::range::Step>::backward_checked",
    "hash": "34992400355946056594574984562607297159"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i16 as iter::range::Step>::backward_unchecked",
    "hash": "58278348499386705458029872856029872704"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i16 as iter::range::Step>::forward",
    "hash": "1410732204159503618012485142208472038407"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i16 as iter::range::Step>::forward_checked",
    "hash": "57790075124673644887067353092789764877"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i16 as iter::range::Step>::forward_unchecked",
    "hash": "420172931858864950017831652032332350737"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i16 as iter::range::Step>::steps_between",
    "hash": "16360818672354409646662304218499760982"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i32 as iter::range::Step>::backward",
    "hash": "163974569936251510011095709459390837774"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i32 as iter::range::Step>::backward_checked",
    "hash": "862415019474010433715238726251183752140"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i32 as iter::range::Step>::backward_unchecked",
    "hash": "17921305975768345272186582824467060830"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i32 as iter::range::Step>::forward",
    "hash": "53612570408882049421670845586246074355"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i32 as iter::range::Step>::forward_checked",
    "hash": "1418655627088257424114175228704742393738"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i32 as iter::range::Step>::forward_unchecked",
    "hash": "11379550892793236520788235735264526562"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i32 as iter::range::Step>::steps_between",
    "hash": "53848662560175372252565612237077276103"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i64 as iter::range::Step>::backward",
    "hash": "74427324667949528749356978010605541437"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i64 as iter::range::Step>::backward_checked",
    "hash": "169276147651125007851688472351927751205"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i64 as iter::range::Step>::backward_unchecked",
    "hash": "141329371735985665156186181686457887171"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i64 as iter::range::Step>::forward",
    "hash": "1435160139585946674715964302201812921101"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i64 as iter::range::Step>::forward_checked",
    "hash": "16839621427272720813650198076051661309"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i64 as iter::range::Step>::forward_unchecked",
    "hash": "61574850284777890612038301770065531128"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i64 as iter::range::Step>::steps_between",
    "hash": "5171133278255969142681288900392826461"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i8 as iter::range::Step>::backward",
    "hash": "1139572684709690504010351489750709390670"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i8 as iter::range::Step>::backward_checked",
    "hash": "121279798684608492086060723757132997131"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i8 as iter::range::Step>::backward_unchecked",
    "hash": "347955904467356179910588766510046970244"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i8 as iter::range::Step>::forward",
    "hash": "513056026947078744411348197686675411863"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i8 as iter::range::Step>::forward_checked",
    "hash": "55484122507451979089020628677780204903"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i8 as iter::range::Step>::forward_unchecked",
    "hash": "128575035949047255796743087371747434760"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i8 as iter::range::Step>::steps_between",
    "hash": "73095618622761001827154070392852355599"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<isize as iter::range::Step>::backward",
    "hash": "48893374359285410057599937455095617333"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<isize as iter::range::Step>::backward_checked",
    "hash": "1514839861132718951612075120644658924213"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<isize as iter::range::Step>::backward_unchecked",
    "hash": "10388210361610306181833591845649340716"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<isize as iter::range::Step>::forward",
    "hash": "14652561996792327366044328613384275130"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<isize as iter::range::Step>::forward_checked",
    "hash": "970568725511739692714967168254113668811"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<isize as iter::range::Step>::forward_unchecked",
    "hash": "117174891638827746514155684919202355553"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<isize as iter::range::Step>::steps_between",
    "hash": "174896565003671558778765793938358571403"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<net::ip_addr::Ipv4Addr as iter::range::Step>::backward_checked",
    "hash": "1714421210226497268910043401311381418732"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<net::ip_addr::Ipv4Addr as iter::range::Step>::backward_unchecked",
    "hash": "56393935763710041312857833616799030336"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<net::ip_addr::Ipv4Addr as iter::range::Step>::forward_checked",
    "hash": "857719585796978059310422258367306193050"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<net::ip_addr::Ipv4Addr as iter::range::Step>::forward_unchecked",
    "hash": "51071179248424752193175929906175052096"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<net::ip_addr::Ipv4Addr as iter::range::Step>::steps_between",
    "hash": "95965289550896666247090333332191801839"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<net::ip_addr::Ipv6Addr as iter::range::Step>::backward_checked",
    "hash": "1184523672637229090414050385394460464284"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<net::ip_addr::Ipv6Addr as iter::range::Step>::backward_unchecked",
    "hash": "90376817630433260654765715068082941096"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<net::ip_addr::Ipv6Addr as iter::range::Step>::forward_checked",
    "hash": "137538235004888423546633757786488323406"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<net::ip_addr::Ipv6Addr as iter::range::Step>::forward_unchecked",
    "hash": "768797161084182702917591498529488101742"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<net::ip_addr::Ipv6Addr as iter::range::Step>::steps_between",
    "hash": "1588454980149873649316534393234247452734"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u128 as iter::range::Step>::backward",
    "hash": "373969223046674721416312599808641126128"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u128 as iter::range::Step>::backward_checked",
    "hash": "35133953067301564212033629291671051756"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u128 as iter::range::Step>::backward_unchecked",
    "hash": "153948065740809419517983978931244623991"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u128 as iter::range::Step>::forward",
    "hash": "56579073557433017398795019798241045398"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u128 as iter::range::Step>::forward_checked",
    "hash": "1808445241038236578112877506201572959118"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u128 as iter::range::Step>::forward_unchecked",
    "hash": "658631698249967390513837245594340024396"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u128 as iter::range::Step>::steps_between",
    "hash": "67039421311994838194588098024219901463"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u16 as iter::range::Step>::backward",
    "hash": "54223047868251784429730874733587646963"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u16 as iter::range::Step>::backward_checked",
    "hash": "181902054518842033893356734597700839925"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u16 as iter::range::Step>::backward_unchecked",
    "hash": "135708374233471222968062189993235851942"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u16 as iter::range::Step>::forward",
    "hash": "927749182580986491711163941090749662730"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u16 as iter::range::Step>::forward_checked",
    "hash": "858378918864018979011528582446472009555"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u16 as iter::range::Step>::forward_unchecked",
    "hash": "112879075453367768775430643101451260130"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u16 as iter::range::Step>::steps_between",
    "hash": "24731638943756635255783977765570373732"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u32 as iter::range::Step>::backward",
    "hash": "135847529026605050258496811574308954329"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u32 as iter::range::Step>::backward_checked",
    "hash": "144273709291570196033903891053009926399"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u32 as iter::range::Step>::backward_unchecked",
    "hash": "162088079316784086110803406670189509488"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u32 as iter::range::Step>::forward",
    "hash": "1122339885338625991912051065085043919346"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u32 as iter::range::Step>::forward_checked",
    "hash": "90018595583814666328084970460273610714"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u32 as iter::range::Step>::forward_unchecked",
    "hash": "54563185260094445637068703793584972940"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u32 as iter::range::Step>::steps_between",
    "hash": "894283018808594391611609287380905026642"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u64 as iter::range::Step>::backward",
    "hash": "1383559565305003603915341398131374631890"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u64 as iter::range::Step>::backward_checked",
    "hash": "154978430733427413515470209383578027605"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u64 as iter::range::Step>::backward_unchecked",
    "hash": "150614806646475870693670555566469349440"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u64 as iter::range::Step>::forward",
    "hash": "174136848096330947471574945494241644071"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u64 as iter::range::Step>::forward_checked",
    "hash": "124595225634265215336628910657664453272"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u64 as iter::range::Step>::forward_unchecked",
    "hash": "126042012585354367488539662941729422557"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u64 as iter::range::Step>::steps_between",
    "hash": "1869392806298544895849880444382624092"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u8 as iter::range::Step>::backward",
    "hash": "67740252928468842227487051234801768511"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u8 as iter::range::Step>::backward_checked",
    "hash": "1059998832983759812315861144745783764574"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u8 as iter::range::Step>::backward_unchecked",
    "hash": "600828941026544328212264732016883065298"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u8 as iter::range::Step>::forward",
    "hash": "180671933668588386784413574972463431784"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u8 as iter::range::Step>::forward_checked",
    "hash": "801641795931838962110766744664194071688"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u8 as iter::range::Step>::forward_unchecked",
    "hash": "126112882146901822916660561028284919096"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u8 as iter::range::Step>::steps_between",
    "hash": "1358246712086198366614107958808171399286"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<usize as iter::range::Step>::backward",
    "hash": "1147070222895608690516569016456327167573"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<usize as iter::range::Step>::backward_checked",
    "hash": "1672779043443074656918097020858337451875"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<usize as iter::range::Step>::backward_unchecked",
    "hash": "1716245685334389838114001101327602301072"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<usize as iter::range::Step>::forward",
    "hash": "29687111168024389805270789092790716654"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<usize as iter::range::Step>::forward_checked",
    "hash": "499982707735902782116723032664210750636"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<usize as iter::range::Step>::forward_unchecked",
    "hash": "197691674288659248112836541981769480536"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<usize as iter::range::Step>::steps_between",
    "hash": "177965079280133880087474300800680994427"
  },
  {
    "crate": "core",
    "file": "core/src/iter/traits/collect.rs",
    "func": "<() as iter::traits::collect::Extend<()>>::extend_one",
    "hash": "1120625557459031317916703552649357621493"
  },
  {
    "crate": "core",
    "file": "core/src/marker.rs",
    "func": "<marker::PhantomPinned as clone::Clone>::clone",
    "hash": "825667327041390782617747015861779504959"
  },
  {
    "crate": "core",
    "file": "core/src/marker.rs",
    "func": "<marker::PhantomPinned as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "831869974603347859414716922117860800231"
  },
  {
    "crate": "core",
    "file": "core/src/marker.rs",
    "func": "<marker::PhantomPinned as cmp::Ord>::cmp",
    "hash": "126049039803743376066865254267291754990"
  },
  {
    "crate": "core",
    "file": "core/src/marker.rs",
    "func": "<marker::PhantomPinned as cmp::PartialEq>::eq",
    "hash": "174411396243082614912337350529316792857"
  },
  {
    "crate": "core",
    "file": "core/src/marker.rs",
    "func": "<marker::PhantomPinned as cmp::PartialOrd>::partial_cmp",
    "hash": "830703818444105436118252870303164065030"
  },
  {
    "crate": "core",
    "file": "core/src/marker.rs",
    "func": "<marker::PhantomPinned as default::Default>::default",
    "hash": "1600509304913695688217697405739095284668"
  },
  {
    "crate": "core",
    "file": "core/src/marker/variance.rs",
    "func": "<marker::variance::PhantomContravariantLifetime<'_> as default::Default>::default",
    "hash": "200093235691051171311857133310441964385"
  },
  {
    "crate": "core",
    "file": "core/src/marker/variance.rs",
    "func": "<marker::variance::PhantomCovariantLifetime<'_> as default::Default>::default",
    "hash": "1585636264149941122215739800273610451179"
  },
  {
    "crate": "core",
    "file": "core/src/marker/variance.rs",
    "func": "<marker::variance::PhantomInvariantLifetime<'_> as default::Default>::default",
    "hash": "148627860536482951858651344035260966131"
  },
  {
    "crate": "core",
    "file": "core/src/marker/variance.rs",
    "func": "marker::variance::PhantomContravariantLifetime::<'_>::new",
    "hash": "325099813201210676814303942567768414682"
  },
  {
    "crate": "core",
    "file": "core/src/marker/variance.rs",
    "func": "marker::variance::PhantomCovariantLifetime::<'_>::new",
    "hash": "166995861130904311335873509826353853958"
  },
  {
    "crate": "core",
    "file": "core/src/marker/variance.rs",
    "func": "marker::variance::PhantomInvariantLifetime::<'_>::new",
    "hash": "226486674780133469212919495806579546593"
  },
  {
    "crate": "core",
    "file": "core/src/mem/mod.rs",
    "func": "mem::verify::check_swap_adt_no_drop",
    "hash": "1701233190866469105013126841152712516775",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/mem/mod.rs",
    "func": "mem::verify::check_swap_primitive",
    "hash": "54805668529831740365019543856684108664",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/mem/transmutability.rs",
    "func": "<mem::transmutability::Assume as clone::Clone>::clone",
    "hash": "6113386739589260587615432633775330905"
  },
  {
    "crate": "core",
    "file": "core/src/mem/transmutability.rs",
    "func": "<mem::transmutability::Assume as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1286419259412180144315209012837167429522"
  },
  {
    "crate": "core",
    "file": "core/src/mem/transmutability.rs",
    "func": "<mem::transmutability::Assume as cmp::PartialEq>::eq",
    "hash": "1017422462877208356713854341404052895459"
  },
  {
    "crate": "core",
    "file": "core/src/mem/transmutability.rs",
    "func": "<mem::transmutability::Assume as ops::arith::Add>::add",
    "hash": "232771302356690057611311769829264534757"
  },
  {
    "crate": "core",
    "file": "core/src/mem/transmutability.rs",
    "func": "<mem::transmutability::Assume as ops::arith::Sub>::sub",
    "hash": "635741436447222796014484736395444526961"
  },
  {
    "crate": "core",
    "file": "core/src/mem/transmutability.rs",
    "func": "mem::transmutability::Assume::and",
    "hash": "1084455007279128514714263400197774751518"
  },
  {
    "crate": "core",
    "file": "core/src/mem/transmutability.rs",
    "func": "mem::transmutability::Assume::but_not",
    "hash": "1696062762999842893816101781539844044659"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<&net::ip_addr::Ipv4Addr as ops::bit::BitAnd<net::ip_addr::Ipv4Addr>>::bitand",
    "hash": "1499027706463113029914722318264888564518"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<&net::ip_addr::Ipv4Addr as ops::bit::BitAnd>::bitand",
    "hash": "19038539976714877621938063870403800822"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<&net::ip_addr::Ipv4Addr as ops::bit::BitOr<net::ip_addr::Ipv4Addr>>::bitor",
    "hash": "1450143984580719902416880929753416596256"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<&net::ip_addr::Ipv4Addr as ops::bit::BitOr>::bitor",
    "hash": "97915705229990448319830217132682394099"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<&net::ip_addr::Ipv4Addr as ops::bit::Not>::not",
    "hash": "1076770814037108337516709103481467091829"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<&net::ip_addr::Ipv6Addr as ops::bit::BitAnd<net::ip_addr::Ipv6Addr>>::bitand",
    "hash": "947026038782299596713283875371031526550"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<&net::ip_addr::Ipv6Addr as ops::bit::BitAnd>::bitand",
    "hash": "131012454452551441867174702414933009726"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<&net::ip_addr::Ipv6Addr as ops::bit::BitOr<net::ip_addr::Ipv6Addr>>::bitor",
    "hash": "79509005810274679277715193973954622529"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<&net::ip_addr::Ipv6Addr as ops::bit::BitOr>::bitor",
    "hash": "38264661869465706988268920408984779502"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<&net::ip_addr::Ipv6Addr as ops::bit::Not>::not",
    "hash": "76153270744949521483249765683685975831"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<<net::ip_addr::Ipv6Addr as fmt::Display>::fmt::Span as clone::Clone>::clone",
    "hash": "43471275599068202915603092652712170767"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<<net::ip_addr::Ipv6Addr as fmt::Display>::fmt::Span as default::Default>::default",
    "hash": "5166604374501805499379909553192072199"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as clone::Clone>::clone",
    "hash": "1264060357870657360614311409253839986891"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1288518373394506866613409312397158608102"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as cmp::Ord>::cmp",
    "hash": "1821459743097811654414912263139414198287"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as cmp::PartialEq<net::ip_addr::Ipv4Addr>>::eq",
    "hash": "70479896803653984325842814174243248158"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as cmp::PartialEq<net::ip_addr::Ipv6Addr>>::eq",
    "hash": "20893141095634284172087981679506930314"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as cmp::PartialEq>::eq",
    "hash": "1457563282582880031316726086703283705974"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as cmp::PartialOrd<net::ip_addr::Ipv4Addr>>::partial_cmp",
    "hash": "75843686374402514111872769203495205619"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as cmp::PartialOrd<net::ip_addr::Ipv6Addr>>::partial_cmp",
    "hash": "45394305027529566274360544768501408620"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as cmp::PartialOrd>::partial_cmp",
    "hash": "172613604611145234303486296806800127699"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as convert::From<[u16; 8]>>::from",
    "hash": "827941686427796246116892382859620269250"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as convert::From<[u8; 16]>>::from",
    "hash": "1802821787855136755113668362828090022142"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as convert::From<[u8; 4]>>::from",
    "hash": "170210693590717514915838547958882393841"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as convert::From<net::ip_addr::Ipv4Addr>>::from",
    "hash": "1364782457274969512810337006941660859937"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as convert::From<net::ip_addr::Ipv6Addr>>::from",
    "hash": "68073068911272744215152262124905904980"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as clone::Clone>::clone",
    "hash": "921409553528843095212392378217611236487"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "438248999008166340012331970616792148675"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as cmp::Ord>::cmp",
    "hash": "5072067421634535515172598013316489284"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as cmp::PartialEq<net::ip_addr::IpAddr>>::eq",
    "hash": "1572779705144993790016396127973471967713"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as cmp::PartialEq>::eq",
    "hash": "335926086649163344211724987064729739868"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as cmp::PartialOrd<net::ip_addr::IpAddr>>::partial_cmp",
    "hash": "87771466797572457261243928491736958096"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as cmp::PartialOrd>::partial_cmp",
    "hash": "446113247573873126415740106879866073552"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as convert::From<[u8; 4]>>::from",
    "hash": "590872620568502661513453452280775232682"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as convert::From<u32>>::from",
    "hash": "819493089297064938016513361432769989121"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as ops::bit::BitAnd<&net::ip_addr::Ipv4Addr>>::bitand",
    "hash": "125135056325573265692579555174253599366"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as ops::bit::BitAnd>::bitand",
    "hash": "467724484819212620012193702746008078689"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as ops::bit::BitAndAssign<&net::ip_addr::Ipv4Addr>>::bitand_assign",
    "hash": "164960261373697601339858017165226280450"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "53348732915243955366474502245850694427"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as ops::bit::BitOr<&net::ip_addr::Ipv4Addr>>::bitor",
    "hash": "208817120089508431310227264987737265858"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as ops::bit::BitOr>::bitor",
    "hash": "7957386348102956150639334897645457546"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as ops::bit::BitOrAssign<&net::ip_addr::Ipv4Addr>>::bitor_assign",
    "hash": "58349043381394603534762643127118709642"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "68305790234567403593518267939076346699"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as ops::bit::Not>::not",
    "hash": "115979366230571205841273096360743512900"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as clone::Clone>::clone",
    "hash": "70641865147263933991186943641804389872"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "68690352043314482819199385780598020614"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as cmp::Ord>::cmp",
    "hash": "161089323293654319279693932082193614750"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as cmp::PartialEq<net::ip_addr::IpAddr>>::eq",
    "hash": "11259879155801106824452719417641411155"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as cmp::PartialEq>::eq",
    "hash": "155000671637313718397576088623777978878"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as cmp::PartialOrd<net::ip_addr::IpAddr>>::partial_cmp",
    "hash": "79237780964439141062680559922083174625"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as cmp::PartialOrd>::partial_cmp",
    "hash": "118592060801310874745954604879826683426"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as convert::From<[u16; 8]>>::from",
    "hash": "52659721176063136444976216438982467789"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as convert::From<[u8; 16]>>::from",
    "hash": "106806037778717533315162590574739237997"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as convert::From<u128>>::from",
    "hash": "446549927992785632214702725147253299992"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as ops::bit::BitAnd<&net::ip_addr::Ipv6Addr>>::bitand",
    "hash": "19787599367985276271280958099214046333"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as ops::bit::BitAnd>::bitand",
    "hash": "170800379728392804222586662629180231922"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as ops::bit::BitAndAssign<&net::ip_addr::Ipv6Addr>>::bitand_assign",
    "hash": "113569054666517166911489198123534796411"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "7071427928082939459235444216712354480"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as ops::bit::BitOr<&net::ip_addr::Ipv6Addr>>::bitor",
    "hash": "1378935421168953185713976362142403064143"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as ops::bit::BitOr>::bitor",
    "hash": "1527116647105089561615470345125122722"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as ops::bit::BitOrAssign<&net::ip_addr::Ipv6Addr>>::bitor_assign",
    "hash": "1217135473270964254314286450239611177252"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "1423955562833255093613083828574392478228"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as ops::bit::Not>::not",
    "hash": "1122736451574327556517542562811819781081"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6MulticastScope as clone::Clone>::clone",
    "hash": "92394463914089531449468390566136204436"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6MulticastScope as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "35809579958767686439726390059935628492"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6MulticastScope as cmp::PartialEq>::eq",
    "hash": "183878618757968736835492036060161220830"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::<impl convert::From<net::ip_addr::Ipv4Addr> for u32>::from",
    "hash": "154410827129023534384606213604432916142"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::<impl convert::From<net::ip_addr::Ipv6Addr> for u128>::from",
    "hash": "11918565179787033529380477659077736244"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::IpAddr::as_octets",
    "hash": "1495495502822479886359201545694468405"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::IpAddr::is_benchmarking",
    "hash": "103091067269383944287413322641825596339"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::IpAddr::is_documentation",
    "hash": "1043252270172435688515888449387091903358"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::IpAddr::is_global",
    "hash": "803593755196743665375659334020069952"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::IpAddr::is_ipv4",
    "hash": "34072154202520050659010384716436252275"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::IpAddr::is_ipv6",
    "hash": "1647072498908601860616152277765007431928"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::IpAddr::is_loopback",
    "hash": "87003685672507811353650499191501676758"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::IpAddr::is_multicast",
    "hash": "177520365651903006932228887956593579699"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::IpAddr::is_unspecified",
    "hash": "100852238268127242163961185302467117286"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::IpAddr::to_canonical",
    "hash": "4953067943861957827401423747658147059"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::as_octets",
    "hash": "101223278979454058814661964633516097013"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::from_bits",
    "hash": "160218883609318377924839484432105079191"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::from_octets",
    "hash": "13074558314382086100766543927783076739"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_benchmarking",
    "hash": "1154112256791800715810884634918423760489"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_broadcast",
    "hash": "11734767576315802969192769591336772100"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_documentation",
    "hash": "114579728239549930234356732496816117126"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_global",
    "hash": "26931637434507241266535635828348219896"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_link_local",
    "hash": "213253987694335189314156504989406609016"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_loopback",
    "hash": "321058546026469120416686063572945871223"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_multicast",
    "hash": "907088996340716512213527345379247401613"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_private",
    "hash": "6620292540561497585213147191522101109"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_reserved",
    "hash": "184364742973566946598603841074612046071"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_shared",
    "hash": "31755862083688557983057264915524589934"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_unspecified",
    "hash": "1093911771415242982111668641320404231627"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::new",
    "hash": "6502083445142584246779010121987916385"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::octets",
    "hash": "594101468346705865516588037143272085631"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::to_bits",
    "hash": "385428015272582543011533835034068398851"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::to_ipv6_compatible",
    "hash": "1137454815818594248212153291962011273751"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::to_ipv6_mapped",
    "hash": "46152593324762142206711102552937996774"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::as_octets",
    "hash": "1382459460223033583013039461048493254282"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::from_bits",
    "hash": "44671935859862014112052602354464624042"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::from_octets",
    "hash": "180480111936671725525131652993218366240"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::from_segments",
    "hash": "12653169952189533051975416832629408768"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_benchmarking",
    "hash": "71485464955757723349168350990850250079"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_documentation",
    "hash": "30583316078051923995726323231562313249"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_global",
    "hash": "1721810387259073816113051504928270532296"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_ipv4_mapped",
    "hash": "294798910239450833716403439649022836095"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_loopback",
    "hash": "688427827909672063714887393169037332609"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_multicast",
    "hash": "169751332979736357098920603379609587187"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_unicast",
    "hash": "1595975943419745506016204106774476408353"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_unicast_global",
    "hash": "1713204026962333675511798766356951105546"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_unicast_link_local",
    "hash": "21002638303442328386071955244967967136"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_unique_local",
    "hash": "13046716679217929852848613793495566837"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_unspecified",
    "hash": "524666411685949085912673618908274418032"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::multicast_scope",
    "hash": "1769211107812174454710977214755271476895"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::new",
    "hash": "997899876043328433310692488077796677794"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::octets",
    "hash": "62038573511047791971320547253979391011"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::segments",
    "hash": "164523583382738045955691269085542372050"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::to_bits",
    "hash": "490105980771608093917828471098541191602"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::to_canonical",
    "hash": "105730132000642611302988186046236357533"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::to_ipv4",
    "hash": "95059144468040572849335363323917689366"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::to_ipv4_mapped",
    "hash": "71246380578644339536635791968521120722"
  },
  {
    "crate": "core",
    "file": "core/src/net/parser.rs",
    "func": "<net::parser::AddrKind as clone::Clone>::clone",
    "hash": "57338033242676239491212106943760500661"
  },
  {
    "crate": "core",
    "file": "core/src/net/parser.rs",
    "func": "<net::parser::AddrKind as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "51594275855947751775142425134597913907"
  },
  {
    "crate": "core",
    "file": "core/src/net/parser.rs",
    "func": "<net::parser::AddrKind as cmp::PartialEq>::eq",
    "hash": "108990140259355343172568090755494475769"
  },
  {
    "crate": "core",
    "file": "core/src/net/parser.rs",
    "func": "<net::parser::AddrParseError as clone::Clone>::clone",
    "hash": "690813232397562813113920840619976175903"
  },
  {
    "crate": "core",
    "file": "core/src/net/parser.rs",
    "func": "<net::parser::AddrParseError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "9049099429058470621088274378690438309"
  },
  {
    "crate": "core",
    "file": "core/src/net/parser.rs",
    "func": "<net::parser::AddrParseError as cmp::PartialEq>::eq",
    "hash": "130017362708044870112137214267689148259"
  },
  {
    "crate": "core",
    "file": "core/src/net/parser.rs",
    "func": "<u16 as net::parser::ReadNumberHelper>::checked_add",
    "hash": "271688748479108952313971146831867720159"
  },
  {
    "crate": "core",
    "file": "core/src/net/parser.rs",
    "func": "<u16 as net::parser::ReadNumberHelper>::checked_mul",
    "hash": "1612714670289235666313734386127780252050"
  },
  {
    "crate": "core",
    "file": "core/src/net/parser.rs",
    "func": "<u32 as net::parser::ReadNumberHelper>::checked_add",
    "hash": "128479786214172725117749776254752173113"
  },
  {
    "crate": "core",
    "file": "core/src/net/parser.rs",
    "func": "<u32 as net::parser::ReadNumberHelper>::checked_mul",
    "hash": "5931119592907220321800466041979225266"
  },
  {
    "crate": "core",
    "file": "core/src/net/parser.rs",
    "func": "<u8 as net::parser::ReadNumberHelper>::checked_add",
    "hash": "1325489574249794929212173048963879403754"
  },
  {
    "crate": "core",
    "file": "core/src/net/parser.rs",
    "func": "<u8 as net::parser::ReadNumberHelper>::checked_mul",
    "hash": "12093970305481739497729476366423288934"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddr as clone::Clone>::clone",
    "hash": "881571011535632767913619940880887849852"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddr as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "154690688717505045959622994226496609969"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddr as cmp::Ord>::cmp",
    "hash": "114959654029202174197411494140737992344"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddr as cmp::PartialEq>::eq",
    "hash": "1598314630380856789115672586518068129772"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddr as cmp::PartialOrd>::partial_cmp",
    "hash": "30027648864626633262469356940041393217"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddr as convert::From<net::socket_addr::SocketAddrV4>>::from",
    "hash": "875366945930901465012893057476305314447"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddr as convert::From<net::socket_addr::SocketAddrV6>>::from",
    "hash": "72683622554543568413747473558961338978"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddrV4 as clone::Clone>::clone",
    "hash": "89143128249529267221365318318967522453"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddrV4 as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "16434557604526258270935765766050497281"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddrV4 as cmp::Ord>::cmp",
    "hash": "176101681564078052391377394909374020333"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddrV4 as cmp::PartialEq>::eq",
    "hash": "1397759549931663747813915423406976584140"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddrV4 as cmp::PartialOrd>::partial_cmp",
    "hash": "4834433346569496402184941970290104105"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddrV6 as clone::Clone>::clone",
    "hash": "183312637659780255541231484230627336028"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddrV6 as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "376654811610081405710951660308378656615"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddrV6 as cmp::Ord>::cmp",
    "hash": "32419605969138177384245259853743534658"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddrV6 as cmp::PartialEq>::eq",
    "hash": "1626301176650439842515552588979456722752"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddrV6 as cmp::PartialOrd>::partial_cmp",
    "hash": "64803735825457191616254620648724630478"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddr::ip",
    "hash": "1018061110745715494518367550576783268367"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddr::is_ipv4",
    "hash": "1708910507140939535513526005614921409339"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddr::is_ipv6",
    "hash": "58551937312814808791470176540531718370"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddr::new",
    "hash": "143820041307921704907427054283161380966"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddr::port",
    "hash": "821056380986737062313722891210613829489"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddr::set_ip",
    "hash": "674094990990729284615905934285441113489"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddr::set_port",
    "hash": "1533972840162688744217732469413820183265"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV4::ip",
    "hash": "1624000160582606817992326574978127176"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV4::new",
    "hash": "346801434708832420411564731853873358189"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV4::port",
    "hash": "1661274048381503306651132033638689155"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV4::set_ip",
    "hash": "120687218285710837277016605598984744489"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV4::set_port",
    "hash": "119592868352706283101965858666230448128"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV6::flowinfo",
    "hash": "271726665598233068216672816377939096504"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV6::ip",
    "hash": "13923939275776602743576250441745041133"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV6::new",
    "hash": "956390136576012052516294645937270315205"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV6::port",
    "hash": "518917683179470932317479461022108880549"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV6::scope_id",
    "hash": "26383702632836770192870777257194244442"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV6::set_flowinfo",
    "hash": "1496512249137928513715459396660567295848"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV6::set_ip",
    "hash": "1017782510994436574815932785748847997117"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV6::set_port",
    "hash": "158701287728992250414215863642183640212"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV6::set_scope_id",
    "hash": "56593444992042073581463295166616692561"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "<num::bignum::Big32x40 as clone::Clone>::clone",
    "hash": "68448351923864966201202342370076058931"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "<num::bignum::Big32x40 as cmp::Ord>::cmp",
    "hash": "10386963668473708943314539409463881254"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "<num::bignum::Big32x40 as cmp::PartialEq>::eq",
    "hash": "55342957751527949678708416814213480497"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "<num::bignum::Big32x40 as cmp::PartialOrd>::partial_cmp",
    "hash": "133393822584876987312560004154415010597"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "<num::bignum::tests::Big8x3 as clone::Clone>::clone",
    "hash": "22768490750388970221446139959291849771"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "<num::bignum::tests::Big8x3 as cmp::Ord>::cmp",
    "hash": "1351877100240206870010030274797049816573"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "<num::bignum::tests::Big8x3 as cmp::PartialEq>::eq",
    "hash": "9545080481036209117556321656899553418"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "<num::bignum::tests::Big8x3 as cmp::PartialOrd>::partial_cmp",
    "hash": "1431604679019824448516839592542665491499"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "<u16 as num::bignum::FullOps>::full_div_rem",
    "hash": "24394899481369512671357527845702976105"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "<u16 as num::bignum::FullOps>::full_mul_add",
    "hash": "1603543728729183321616410501201294266403"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "<u32 as num::bignum::FullOps>::full_div_rem",
    "hash": "421349501390734416011533386675405511079"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "<u32 as num::bignum::FullOps>::full_mul_add",
    "hash": "537616630704522200217231635580372837379"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "<u8 as num::bignum::FullOps>::full_div_rem",
    "hash": "168075370270112550468914736667046711117"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "<u8 as num::bignum::FullOps>::full_mul_add",
    "hash": "131773311852764655024953585027788742507"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::add",
    "hash": "526695952665403541415146226917937758681"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::add_small",
    "hash": "1473055657981635465616970519006119663797"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::bit_length",
    "hash": "73665474428766218968179044271101842831"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::digits",
    "hash": "37603565549380547663010922813292180486"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::div_rem",
    "hash": "155102020313625952118107787795199654288"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::div_rem_small",
    "hash": "19642173125179448368198359711273832004"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::from_small",
    "hash": "688273509255497241811981814166475898820"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::from_u64",
    "hash": "65012448208712145921130822083503603265"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::get_bit",
    "hash": "325062202126984603410165208796385002580"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::is_zero",
    "hash": "50570487358708501353670014615683276272"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::mul_pow2",
    "hash": "94868366598863958682084249434769214492"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::mul_pow5",
    "hash": "6212946376205031896547416843638440530"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::mul_small",
    "hash": "84727681625128769336927957610199140699"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::sub",
    "hash": "160169563437319466545195405606557090583"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::add",
    "hash": "1575726066243520813910718574767019147099"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::add_small",
    "hash": "129744128877062677058089787617276365506"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::bit_length",
    "hash": "128499391442625567796500223577452250810"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::digits",
    "hash": "60569613728270320793044561087839331643"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::div_rem",
    "hash": "152905977586920966918023074322381441392"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::div_rem_small",
    "hash": "62648928120119627205612216455447145105"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::from_small",
    "hash": "95923251219851982587733870047772138958"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::from_u64",
    "hash": "109015202747875864486895855169507729787"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::get_bit",
    "hash": "35754342945009099314998714575357595157"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::is_zero",
    "hash": "1045159305356581005515270279136403597759"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::mul_pow2",
    "hash": "72777386567164898985288520725329169602"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::mul_pow5",
    "hash": "1212922455571466973714978780415647711023"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::mul_small",
    "hash": "100189417284658394441720419430034203735"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::sub",
    "hash": "142073653539694569462151392694017875004"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/common.rs",
    "func": "<num::dec2flt::common::BiasedFp as clone::Clone>::clone",
    "hash": "99441173741908537221041840997597706871"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/common.rs",
    "func": "<num::dec2flt::common::BiasedFp as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "159308443299976036093318276350800879542"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/common.rs",
    "func": "<num::dec2flt::common::BiasedFp as cmp::PartialEq>::eq",
    "hash": "145429786339401763763301312996132754216"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/common.rs",
    "func": "<num::dec2flt::common::BiasedFp as default::Default>::default",
    "hash": "945785180716183794615500752505374170007"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/common.rs",
    "func": "num::dec2flt::common::BiasedFp::zero_pow2",
    "hash": "124079140710334239353528493759477592936"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/common.rs",
    "func": "num::dec2flt::common::is_8digits",
    "hash": "88252250907650560939196119888560718211"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal.rs",
    "func": "<num::dec2flt::decimal::Decimal as clone::Clone>::clone",
    "hash": "102162506459467257013338494265345655001"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal.rs",
    "func": "<num::dec2flt::decimal::Decimal as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1450693652236591138131492669646915817"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal.rs",
    "func": "<num::dec2flt::decimal::Decimal as cmp::PartialEq>::eq",
    "hash": "110999280021339733258284588787542720220"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal.rs",
    "func": "<num::dec2flt::decimal::Decimal as default::Default>::default",
    "hash": "42222447178915793548542765777097211393"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "<num::dec2flt::decimal_seq::DecimalSeq as clone::Clone>::clone",
    "hash": "777711447013849913009532213041181260"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "<num::dec2flt::decimal_seq::DecimalSeq as cmp::PartialEq>::eq",
    "hash": "45179767777851486332294915690955240334"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "<num::dec2flt::decimal_seq::DecimalSeq as default::Default>::default",
    "hash": "87456189090776109958790862427017379305"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "num::dec2flt::decimal_seq::DecimalSeq::left_shift",
    "hash": "10800568352916146074320774062133065907"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "num::dec2flt::decimal_seq::DecimalSeq::right_shift",
    "hash": "164159831218017143116413442747617297155"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "num::dec2flt::decimal_seq::DecimalSeq::round",
    "hash": "68693502246263887036667281395882392680"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "num::dec2flt::decimal_seq::DecimalSeq::trim",
    "hash": "98081951202171471581631183904010496484"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "num::dec2flt::decimal_seq::DecimalSeq::try_add_digit",
    "hash": "285895325995770899616926537188131263408"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "num::dec2flt::decimal_seq::number_of_digits_decimal_left_shift",
    "hash": "1846545829696834769605064138401055051"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f16 as num::dec2flt::float::RawFloat>::classify",
    "hash": "1346210993873871991211666290987960334823"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f16 as num::dec2flt::float::RawFloat>::from_u64",
    "hash": "14534063376101289658844515537532987720"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f16 as num::dec2flt::float::RawFloat>::from_u64_bits",
    "hash": "66193859863570600747554959599874745142"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f16 as num::dec2flt::float::RawFloat>::pow10_fast_path",
    "hash": "1331180765608372746618038457355727292914"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f16 as num::dec2flt::float::RawFloat>::to_bits",
    "hash": "1330230614802694744615177276662987673529"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f32 as num::dec2flt::float::RawFloat>::classify",
    "hash": "707171467712266834113402276266494278110"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f32 as num::dec2flt::float::RawFloat>::from_u64",
    "hash": "48413878820509011811281704779891899714"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f32 as num::dec2flt::float::RawFloat>::from_u64_bits",
    "hash": "131737611100280153115121608445336918708"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f32 as num::dec2flt::float::RawFloat>::pow10_fast_path",
    "hash": "1477297535109009433116068469030518062631"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f32 as num::dec2flt::float::RawFloat>::to_bits",
    "hash": "643749885405830349618174171670233457290"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f64 as num::dec2flt::float::RawFloat>::classify",
    "hash": "110136787095800963745070749484865738"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f64 as num::dec2flt::float::RawFloat>::from_u64",
    "hash": "115412798294293315119430927104186225573"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f64 as num::dec2flt::float::RawFloat>::from_u64_bits",
    "hash": "139488482713517022392802644189683338670"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f64 as num::dec2flt::float::RawFloat>::pow10_fast_path",
    "hash": "282518903960912928514427315635719199053"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f64 as num::dec2flt::float::RawFloat>::to_bits",
    "hash": "320659744895839940711142382562474182804"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<u16 as num::dec2flt::float::CastInto<i16>>::cast",
    "hash": "127687323327805648567195218735907442787"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<u32 as num::dec2flt::float::CastInto<i16>>::cast",
    "hash": "149559975351884185919646369653297958751"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<u64 as num::dec2flt::float::CastInto<i16>>::cast",
    "hash": "948784241142142375515727762281903710886"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "num::dec2flt::float::pow2_to_pow10",
    "hash": "1374583963071674867516068621844801164227"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/lemire.rs",
    "func": "num::dec2flt::lemire::compute_product_approx",
    "hash": "180006797174524108429317093518249945109"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/lemire.rs",
    "func": "num::dec2flt::lemire::full_multiplication",
    "hash": "629145951687599873418257489910998052999"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/lemire.rs",
    "func": "num::dec2flt::lemire::power",
    "hash": "1024354688966582426015120434003974569759"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/mod.rs",
    "func": "<num::dec2flt::FloatErrorKind as clone::Clone>::clone",
    "hash": "948620242474440880814597029645470490692"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/mod.rs",
    "func": "<num::dec2flt::FloatErrorKind as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1332257997316420780915894390392057489961"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/mod.rs",
    "func": "<num::dec2flt::FloatErrorKind as cmp::PartialEq>::eq",
    "hash": "1377143002006642229517171085059045089805"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/mod.rs",
    "func": "<num::dec2flt::ParseFloatError as clone::Clone>::clone",
    "hash": "128621596444477492361384010490164262983"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/mod.rs",
    "func": "<num::dec2flt::ParseFloatError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "9504615767016588195683765292003259967"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/mod.rs",
    "func": "<num::dec2flt::ParseFloatError as cmp::PartialEq>::eq",
    "hash": "1782673906597863114816792713400322968088"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/mod.rs",
    "func": "num::dec2flt::pfe_empty",
    "hash": "163583058705921443356149816263196482859"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/mod.rs",
    "func": "num::dec2flt::pfe_invalid",
    "hash": "1727044216435048357413768906990211119788"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/parse.rs",
    "func": "num::dec2flt::parse::parse_8digits",
    "hash": "990200575453030846214845264112969693650"
  },
  {
    "crate": "core",
    "file": "core/src/num/diy_float.rs",
    "func": "<num::diy_float::Fp as clone::Clone>::clone",
    "hash": "11123308985278480483617437397512463001"
  },
  {
    "crate": "core",
    "file": "core/src/num/diy_float.rs",
    "func": "num::diy_float::Fp::mul",
    "hash": "82738468433725569906556887959980256636"
  },
  {
    "crate": "core",
    "file": "core/src/num/diy_float.rs",
    "func": "num::diy_float::Fp::normalize",
    "hash": "1783941771470757698916723482700552641872"
  },
  {
    "crate": "core",
    "file": "core/src/num/diy_float.rs",
    "func": "num::diy_float::Fp::normalize_to",
    "hash": "135432740864849340939288962713045644720"
  },
  {
    "crate": "core",
    "file": "core/src/num/error.rs",
    "func": "<num::error::IntErrorKind as clone::Clone>::clone",
    "hash": "1236789399677122116714508316988697139166"
  },
  {
    "crate": "core",
    "file": "core/src/num/error.rs",
    "func": "<num::error::IntErrorKind as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1419445016049295524118374810393943854299"
  },
  {
    "crate": "core",
    "file": "core/src/num/error.rs",
    "func": "<num::error::IntErrorKind as cmp::PartialEq>::eq",
    "hash": "1800354311251897773810617165975736784271"
  },
  {
    "crate": "core",
    "file": "core/src/num/error.rs",
    "func": "<num::error::ParseIntError as clone::Clone>::clone",
    "hash": "2643485135499013354917072026224088561"
  },
  {
    "crate": "core",
    "file": "core/src/num/error.rs",
    "func": "<num::error::ParseIntError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "959073878858029247611239324486018914214"
  },
  {
    "crate": "core",
    "file": "core/src/num/error.rs",
    "func": "<num::error::ParseIntError as cmp::PartialEq>::eq",
    "hash": "47322104149450984505262916341339848557"
  },
  {
    "crate": "core",
    "file": "core/src/num/error.rs",
    "func": "<num::error::TryFromIntError as clone::Clone>::clone",
    "hash": "916036849199497178314263223508599207575"
  },
  {
    "crate": "core",
    "file": "core/src/num/error.rs",
    "func": "<num::error::TryFromIntError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1270288674622507163115620625259273602427"
  },
  {
    "crate": "core",
    "file": "core/src/num/error.rs",
    "func": "<num::error::TryFromIntError as cmp::PartialEq>::eq",
    "hash": "112852414032303894246681102116085991357"
  },
  {
    "crate": "core",
    "file": "core/src/num/error.rs",
    "func": "num::error::ParseIntError::kind",
    "hash": "82038347365787383711313580505188759587"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::abs",
    "hash": "1633869985145731555711738745641244921442"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::algebraic_add",
    "hash": "107412085628933887705341889824882063588"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::algebraic_div",
    "hash": "28573718556958702876367388132345536459"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::algebraic_mul",
    "hash": "1743008224195980377918385042921460347963"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::algebraic_rem",
    "hash": "759896221967461959418353569912238842391"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::algebraic_sub",
    "hash": "2035428624977107881303811008018160018"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::ceil",
    "hash": "890892326526035954217739887613926105526"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::clamp",
    "hash": "895748347853454169411923700037276971514"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::classify",
    "hash": "329598873808563524728391998075018970"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::copysign",
    "hash": "27577874283823845322841179150241966344"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::div_euclid",
    "hash": "1719105811906915258215891585661751001995"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::floor",
    "hash": "164343511295033781638628160971858826102"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::fract",
    "hash": "22372380824071182601499837245090610339"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::from_be_bytes",
    "hash": "621749352911934823518050975903995443036"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::from_bits",
    "hash": "1234048470098097220414204578628110841792"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::from_le_bytes",
    "hash": "131250060831816348142410022314351452863"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::from_ne_bytes",
    "hash": "66568426126905614375418868655585176102"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::is_finite",
    "hash": "16202382198934990966542523486449605989"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::is_infinite",
    "hash": "236758410783238469613851478046733879048"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::is_nan",
    "hash": "252887400125453305612667949128372271249"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::is_normal",
    "hash": "27269214563205269914051069830866987834"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::is_sign_negative",
    "hash": "783290788233458409213943446188194581582"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::is_sign_positive",
    "hash": "260250833418102634914982796035296776119"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::is_subnormal",
    "hash": "164684107263458641366801424444170751216"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::max",
    "hash": "173647465369519523937213106820125207492"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::maximum",
    "hash": "1094509065320253984734759796539912530"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::midpoint",
    "hash": "1053267476323652799917073259753530224005"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::min",
    "hash": "8725491321584156676421639741486441029"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::minimum",
    "hash": "171091201390141979079517575818744438541"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::mul_add",
    "hash": "110584017521883767474642803331835729246"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::next_down",
    "hash": "58468660979199056379891044349254630413"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::next_up",
    "hash": "1110697423436517853715911287716452833507"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::powi",
    "hash": "1328475710985588959412647222202311337096"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::recip",
    "hash": "53673775587403904852748555491265792057"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::rem_euclid",
    "hash": "27287646097975060608818861969660199324"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::round",
    "hash": "40309882590468259442140807086508547844"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::round_ties_even",
    "hash": "1773072776909027464110196152472753402342"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::signum",
    "hash": "368383134810218413412034408711171454153"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::sqrt",
    "hash": "7007884518632528311742548136128264728"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::to_be_bytes",
    "hash": "12857304858426081487408079443486773151"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::to_bits",
    "hash": "1974282168039380848894594196462410349"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::to_degrees",
    "hash": "44821039925773188649166761235255922029"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::to_le_bytes",
    "hash": "1272252125522854795214600820428778462969"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::to_ne_bytes",
    "hash": "116538939617145019406917577847128377204"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::to_radians",
    "hash": "90034539424117725455242591575792972227"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::total_cmp",
    "hash": "979604039652460967811070772091740033195"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::trunc",
    "hash": "54260058544797284938142620574691468031"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::abs",
    "hash": "73925086737508027584524650242921435444"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::algebraic_add",
    "hash": "1059660548574338426313416220588653512942"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::algebraic_div",
    "hash": "104186358263751208487129328069002154041"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::algebraic_mul",
    "hash": "56428216161089160957710962075375122303"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::algebraic_rem",
    "hash": "1508010742080831854416493819258616290167"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::algebraic_sub",
    "hash": "770641304955567270711466230620836663502"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::cbrt",
    "hash": "1767604426030851285418192446979788597691"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::ceil",
    "hash": "1082734517466005126418251485421086386161"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::clamp",
    "hash": "591086760861661884778562139803563220"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::classify",
    "hash": "821624783380660323912636252934479695499"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::copysign",
    "hash": "37680520250890434433114734277362237189"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::div_euclid",
    "hash": "171436479127279122138558003880116972264"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::floor",
    "hash": "921339864627596099859018162835429613"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::fract",
    "hash": "173290611482697946331997386164575909520"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::from_be_bytes",
    "hash": "177405985718070432782177629401943529605"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::from_bits",
    "hash": "80331169847412004098471689422468576411"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::from_le_bytes",
    "hash": "705403272510820700112672503958873156479"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::from_ne_bytes",
    "hash": "34994840484434697462069612411996654482"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::is_finite",
    "hash": "556060979483318749516000448749604067779"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::is_infinite",
    "hash": "98825812488495831817080296609037965467"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::is_nan",
    "hash": "181659118885593681133963112753434433326"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::is_normal",
    "hash": "154926313383668412766224911126506720924"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::is_sign_negative",
    "hash": "41314493314170273698848119374772252082"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::is_sign_positive",
    "hash": "86698344806947611722293919790928706286"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::is_subnormal",
    "hash": "109519248899684371789777581971098695341"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::max",
    "hash": "152711517664294811573978637764540359704"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::maximum",
    "hash": "183020508902589499482473813196087557516"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::midpoint",
    "hash": "169219455588132966417319892430623559685"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::min",
    "hash": "118589128990215951012823730733088797622"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::minimum",
    "hash": "11805647257725004543720445031762484219"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::mul_add",
    "hash": "95134245530129762546123037105692663858"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::next_down",
    "hash": "43480900025104149959117673580742885429"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::next_up",
    "hash": "1768830170805391089315880766164808379489"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::powi",
    "hash": "21262879318647260149068258229086577412"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::recip",
    "hash": "505388474969557991817888203243110134258"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::rem_euclid",
    "hash": "142407567263000014181597748260039194145"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::round",
    "hash": "138083676265772780101124621173759773073"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::round_ties_even",
    "hash": "1584401323964197142214394972853170238527"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::signum",
    "hash": "9670103822153451985703418164222835874"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::sqrt",
    "hash": "895562704183033706610562039504268832954"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::to_be_bytes",
    "hash": "461742786068630410814256298968531983627"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::to_bits",
    "hash": "331178422282659479317337493575173626152"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::to_degrees",
    "hash": "115624753997309890619016079197436323869"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::to_le_bytes",
    "hash": "89004884350958059792003410213118212292"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::to_ne_bytes",
    "hash": "155610858174148691461360709792878499785"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::to_radians",
    "hash": "320485797259104107915664424096873052193"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::total_cmp",
    "hash": "775765639444551220212167711497732890430"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::trunc",
    "hash": "161445155628503363538073693770598233224"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::abs",
    "hash": "7140594435781266806154578540850139692"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::algebraic_add",
    "hash": "104484803692756604101945356077582772503"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::algebraic_div",
    "hash": "125480685363005409174722380280464863701"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::algebraic_mul",
    "hash": "100871955394263534038098351889361213390"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::algebraic_rem",
    "hash": "19284626247009428058378358838134224477"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::algebraic_sub",
    "hash": "158572850392779277579946471697515664200"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::clamp",
    "hash": "23222082336928293212652909434863723882"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::classify",
    "hash": "182543060698366627214161300569806267932"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::copysign",
    "hash": "91660879335401236928730477644746477916"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::from_be_bytes",
    "hash": "139506033015292334421750617545658685770"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::from_bits",
    "hash": "141416729681063873945734553097119310337"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::from_le_bytes",
    "hash": "167595485182435581579526163108895207996"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::from_ne_bytes",
    "hash": "267924592081802283016750673831308596057"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::is_finite",
    "hash": "1531303938923838765511396625477318073187"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::is_infinite",
    "hash": "10636394365405002924847654351707122379"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::is_nan",
    "hash": "110174298608622596992026438568283617550"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::is_normal",
    "hash": "636232236247176065514514387436694411421"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::is_sign_negative",
    "hash": "169025222698088550701130642783988507306"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::is_sign_positive",
    "hash": "894614440018548037910752981073189373335"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::is_subnormal",
    "hash": "1642289273768535047010633412175950183516"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::max",
    "hash": "112128120424148035529215705998019957629"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::maximum",
    "hash": "117322212830400902639622612582340000610"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::midpoint",
    "hash": "205085219078663623013179679713939177738"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::min",
    "hash": "451372623761066015216066333506654496517"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::minimum",
    "hash": "991700303329753118510903083951194519463"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::next_down",
    "hash": "1681177393123097029617095282565980636829"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::next_up",
    "hash": "1269843125073022512133378576492267679"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::recip",
    "hash": "9562761177431460092250536071346692966"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::signum",
    "hash": "753087530211395207011740606835076684171"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::to_be_bytes",
    "hash": "168466365304528002637939210919761146243"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::to_bits",
    "hash": "1280257502160233765816408910554470634604"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::to_degrees",
    "hash": "151006507372923852413151963839623381065"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::to_le_bytes",
    "hash": "2939362112464726975345020577343104054"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::to_ne_bytes",
    "hash": "939788308899918377013721817725640606329"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::to_radians",
    "hash": "1352230568229456361013168241878730473120"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::total_cmp",
    "hash": "1157832635988226544312579101964623411278"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::math::abs_sub",
    "hash": "147824754210793306612224136684974876748"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::math::cbrt",
    "hash": "170363654074632269934448994608027670063"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::math::ceil",
    "hash": "1035767718139092257414645907844215592290"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::math::div_euclid",
    "hash": "15032386568545210375665912564520042984"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::math::floor",
    "hash": "14985070720090950399587691230438474661"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::math::fract",
    "hash": "117479480859851369524283266066306097031"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::math::mul_add",
    "hash": "960306414198010095314924900814123492338"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::math::powi",
    "hash": "46627752418478057373695395924105075743"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::math::rem_euclid",
    "hash": "145956509312742314166437771491205134633"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::math::round",
    "hash": "45394002683714670213397947575551564242"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::math::round_ties_even",
    "hash": "1465525211766878933612973348735864383249"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::math::sqrt",
    "hash": "82419710605507816349607127734973454039"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::math::trunc",
    "hash": "157990166986652145461875664503021779858"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::abs",
    "hash": "75082519682538823603969732638410705888"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::algebraic_add",
    "hash": "47082923326302672515497974211937028597"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::algebraic_div",
    "hash": "139521875923279349413234625166864569959"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::algebraic_mul",
    "hash": "952762552281015986717966951154928030709"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::algebraic_rem",
    "hash": "1567984623655507089211711396593762706912"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::algebraic_sub",
    "hash": "154125230642450902129272785221891063816"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::clamp",
    "hash": "164898111927915040065104134380069749081"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::classify",
    "hash": "532879368499335525210375989760065508477"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::copysign",
    "hash": "67963974527742159972610443212593302814"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::from_be_bytes",
    "hash": "182927823333054161868326715445811831074"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::from_bits",
    "hash": "36822172541893058416553893184635977627"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::from_le_bytes",
    "hash": "1424980517819813741118163030671726330652"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::from_ne_bytes",
    "hash": "390649723411336836810361362838735129408"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_finite",
    "hash": "149211871492080108598327183981824852066"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_infinite",
    "hash": "13512674014400935391489011822204974697"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_nan",
    "hash": "175257293156396574608708563526179465699"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_negative",
    "hash": "529594375125482352315806705650284901742"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_normal",
    "hash": "63337192395889833306503793195305820843"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_positive",
    "hash": "29567607453735018075330329502295835592"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_sign_negative",
    "hash": "1176328137589943253415190693832930071313"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_sign_positive",
    "hash": "1415830620938680807913361960636901152453"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_subnormal",
    "hash": "514807974022540665012576078828228459690"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::max",
    "hash": "1486452097717518669017337634165412670198"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::maximum",
    "hash": "31889712987353550436659287233283443158"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::midpoint",
    "hash": "44916348346235519728247615375472188892"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::min",
    "hash": "170653147750905819614417588574687809349"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::minimum",
    "hash": "115193647832598641363289192430637705311"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::next_down",
    "hash": "93571390650135106673454717496126328595"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::next_up",
    "hash": "17338784576413134460872323108501169018"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::recip",
    "hash": "177187307026383803322078806229263804059"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::signum",
    "hash": "12902274231737729234848811482265804611"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::to_be_bytes",
    "hash": "1394873190700974154017290800778813531622"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::to_bits",
    "hash": "1033976944350554769714411313899354111723"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::to_degrees",
    "hash": "117990293606584255616668156579751747098"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::to_le_bytes",
    "hash": "1082481770857356091816557168386897252675"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::to_ne_bytes",
    "hash": "10877679324883511935789589772655683159"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::to_radians",
    "hash": "120051509684505029710993609700207727524"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::total_cmp",
    "hash": "935865976961147776913102301421189848381"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::math::abs_sub",
    "hash": "1573678775023933523510183021361825689101"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::math::cbrt",
    "hash": "613407158268551309717617956002968467861"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::math::ceil",
    "hash": "75362501417091822857757966117749144879"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::math::div_euclid",
    "hash": "106009916394163281565225401153986068652"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::math::floor",
    "hash": "1055257727812382730413914730601118869130"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::math::fract",
    "hash": "427075525536988273571091771379324603"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::math::mul_add",
    "hash": "1513434431476876897315370193006938937554"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::math::powi",
    "hash": "92363467501872478308143776290411715104"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::math::rem_euclid",
    "hash": "48695589473683170276468272086639820085"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::math::round",
    "hash": "1298351934288336602512194140932754017728"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::math::round_ties_even",
    "hash": "738941912072810946410876002326639549374"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::math::sqrt",
    "hash": "28577739389794658844894865097729461657"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::math::trunc",
    "hash": "101824234212718020125078204067537076967"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/decoder.rs",
    "func": "<f16 as num::flt2dec::decoder::DecodableFloat>::min_pos_norm_value",
    "hash": "1411683336468757870511743711763464370685"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/decoder.rs",
    "func": "<f32 as num::flt2dec::decoder::DecodableFloat>::min_pos_norm_value",
    "hash": "70639346671593076312505980927961085607"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/decoder.rs",
    "func": "<f64 as num::flt2dec::decoder::DecodableFloat>::min_pos_norm_value",
    "hash": "88995097835845057026643214485317588839"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/decoder.rs",
    "func": "<num::flt2dec::decoder::Decoded as clone::Clone>::clone",
    "hash": "22196668788775880228807280919910066572"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/decoder.rs",
    "func": "<num::flt2dec::decoder::Decoded as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1074522564591392152312797296692926083796"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/decoder.rs",
    "func": "<num::flt2dec::decoder::Decoded as cmp::PartialEq>::eq",
    "hash": "1341518285277626009016216285057754013763"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/decoder.rs",
    "func": "<num::flt2dec::decoder::FullDecoded as clone::Clone>::clone",
    "hash": "129259328319905844708261732164549998067"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/decoder.rs",
    "func": "<num::flt2dec::decoder::FullDecoded as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1290576628407439649515681688098285308163"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/decoder.rs",
    "func": "<num::flt2dec::decoder::FullDecoded as cmp::PartialEq>::eq",
    "hash": "114346909286564325269344255709905061981"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/estimator.rs",
    "func": "num::flt2dec::estimator::estimate_scaling_factor",
    "hash": "18412234700728954820413769003552270788"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/mod.rs",
    "func": "<num::flt2dec::Sign as clone::Clone>::clone",
    "hash": "120947378612395994628504307865777242178"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/mod.rs",
    "func": "<num::flt2dec::Sign as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "60285171457992118441354160639911148336"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/mod.rs",
    "func": "<num::flt2dec::Sign as cmp::PartialEq>::eq",
    "hash": "1581502818683518884716301355999483565432"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/mod.rs",
    "func": "num::flt2dec::determine_sign",
    "hash": "839674987001693291411818474957253198623"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/mod.rs",
    "func": "num::flt2dec::estimate_max_buf_len",
    "hash": "9342887985634485973479008237345816446"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/strategy/dragon.rs",
    "func": "num::flt2dec::strategy::dragon::div_2pow10",
    "hash": "11987500245221978925130825485703381444"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/strategy/dragon.rs",
    "func": "num::flt2dec::strategy::dragon::div_rem_upto_16",
    "hash": "146300380175413189484723798839298066926"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/strategy/dragon.rs",
    "func": "num::flt2dec::strategy::dragon::mul_pow10",
    "hash": "146208653155344170589165544538494519037"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/strategy/grisu.rs",
    "func": "num::flt2dec::strategy::grisu::cached_power",
    "hash": "1181644125006497251615243195645141756784"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/strategy/grisu.rs",
    "func": "num::flt2dec::strategy::grisu::max_pow10_no_more_than",
    "hash": "955476229197528600214265971075818548582"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::i128",
    "hash": "59386087132677451236210312458518974912"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::i16",
    "hash": "1545343046737874902312403020346146721035"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::i32",
    "hash": "114685722929929873749560514147797532667"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::i64",
    "hash": "1717567921191196525514731974872231517300"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::i8",
    "hash": "131359992944760294391978023220681961417"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::less_than_5",
    "hash": "177450053108937244256024058949791559633"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::panic_for_nonpositive_argument",
    "hash": "50186211171463953727684864518369695334"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::u128",
    "hash": "1268824783546043517015463399488275120996"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::u16",
    "hash": "39865264399044161166492979154730285341"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::u32",
    "hash": "66990443953145658003996624341340406115"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::u64",
    "hash": "113105628410323550903289764020827107190"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::u8",
    "hash": "823628517717737326511579186628630831978"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::usize",
    "hash": "7890666119737191484082000720043292310"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::abs",
    "hash": "44581595167970222481908991142067113230"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::abs_diff",
    "hash": "1841644932498824961916451195260169589723"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::borrowing_sub",
    "hash": "108894887739979962463832803988912290247"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::carrying_add",
    "hash": "962593281299234203918154155400573298074"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::carrying_mul",
    "hash": "102853299012327435133222189565244312465"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::carrying_mul_add",
    "hash": "118504031261500197229902889982818663166"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::cast_unsigned",
    "hash": "1723714366475635956817861053312768697843"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_abs",
    "hash": "132425696543840755235290953471464767241"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_add",
    "hash": "123346567948082928028145273696865774104"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_add_unsigned",
    "hash": "1017425461139327914313471140606864098591"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_div",
    "hash": "160165188126162936418419919961110642868"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_div_euclid",
    "hash": "170739468843051374858775566883406285757"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_exact_div",
    "hash": "1685041166996144770815614225138736395471"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_ilog",
    "hash": "1813816752596965740712816990670813693623"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_ilog10",
    "hash": "42223592716224247315593940861006980150"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_ilog2",
    "hash": "81633912678425650514867478092819312842"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_isqrt",
    "hash": "1402252787396292770217307498472630390390"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_mul",
    "hash": "103218833834986948561175907479252340183"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_neg",
    "hash": "1674572469138630938511920020996067669056"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_next_multiple_of",
    "hash": "72144374448545602576664637019127951946"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_pow",
    "hash": "105910032645132341619096684662128046994"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_rem",
    "hash": "326804465043059473818025513488543098480"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_rem_euclid",
    "hash": "1642322222074697694917592623311784356252"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_shl",
    "hash": "140407200108859659518032613107199699880"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_shr",
    "hash": "94429040593373671094212573856044850116"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_sub",
    "hash": "722616033942171094312439811972838360649"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_sub_unsigned",
    "hash": "1438546707056161931011165908656596425351"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::count_ones",
    "hash": "1706366299991342975910390308629963399175"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::count_zeros",
    "hash": "36382174099063963537016821150823824687"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::div_ceil",
    "hash": "162612421080152624613758614812307215362"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::div_euclid",
    "hash": "10396663347578353562469823958567109808"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::div_floor",
    "hash": "37210083459523249863037701068192875310"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::exact_div",
    "hash": "1600815645120346215612678961394938864533"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::from_be",
    "hash": "1258526697238274039413987535580114117522"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::from_be_bytes",
    "hash": "91663329927995136073967218820877088510"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::from_le",
    "hash": "84347473756962037768397456323383041285"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::from_le_bytes",
    "hash": "127049646319982769137523410262803558431"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::from_ne_bytes",
    "hash": "9970161931334929949742567559813029302"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::highest_one",
    "hash": "16894639450432563899613323516691643155"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::ilog",
    "hash": "161753020025815647786675858266748719643"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::ilog10",
    "hash": "1573831558945575593515278379219802957424"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::ilog2",
    "hash": "64388641515355598011807007392845140764"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::is_negative",
    "hash": "327690336180303834912943979104464464301"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::is_positive",
    "hash": "157321179957013240238240575815978479694"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::isolate_highest_one",
    "hash": "133868821150848865633344718047037940818"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::isolate_lowest_one",
    "hash": "160583020935765000717290078528270601258"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::isqrt",
    "hash": "75454635959233443385389031023867530200"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::leading_ones",
    "hash": "59039630986232880298532936542923993811"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::leading_zeros",
    "hash": "140310886682372804359091597401405443465"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::lowest_one",
    "hash": "481533906038854753717049611421538845119"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::max_value",
    "hash": "76076931370366352773512790411771708"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::min_value",
    "hash": "24621067806910520788227321751648403880"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::next_multiple_of",
    "hash": "1085399997009274525312070760948973480800"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_abs",
    "hash": "870632956831603870213284084472731382756"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_add",
    "hash": "86233255533714058716667195615301150041"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_add_unsigned",
    "hash": "837170200675596958114861738165587313093"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_div",
    "hash": "76990566026115276985356084586527920317"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_div_euclid",
    "hash": "730013384943754665113470757791978190157"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_mul",
    "hash": "732891197381241704910453640067104821342"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_neg",
    "hash": "1712976803973111756211865883933830192921"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_pow",
    "hash": "198572801461868175814961359268179593846"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_rem",
    "hash": "261500425882949828412477186864441722830"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_rem_euclid",
    "hash": "135668966508794327248156246443104551329"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_shl",
    "hash": "148741711605037317464809577727559531175"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_shr",
    "hash": "128731500861467765529165163145350438170"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_sub",
    "hash": "40669399748189340402384008182351693788"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_sub_unsigned",
    "hash": "1191983413460857738714257596532447807388"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::pow",
    "hash": "97504603957827264802571543804397598003"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::rem_euclid",
    "hash": "880467739160961881213112218389744869737"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::reverse_bits",
    "hash": "170019329078581372886072293425182003284"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::rotate_left",
    "hash": "1047436062271434596310508834670325429352"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::rotate_right",
    "hash": "17489412295105274131502555744210967321"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_abs",
    "hash": "637759516552557241317033009322858227515"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_add",
    "hash": "712980802890920056811353040232991037186"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_add_unsigned",
    "hash": "8179965561188280309707600314807939209"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_div",
    "hash": "3244060872122860474529109205631636126"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_mul",
    "hash": "144269512082355408799106104922913093588"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_neg",
    "hash": "996538060622119241912259807516372749263"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_pow",
    "hash": "317172634456495696515231990760802918932"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_sub",
    "hash": "33481922965085264819562231295800480923"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_sub_unsigned",
    "hash": "1442825036203007431314063159295519518723"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::signum",
    "hash": "179898433920345269909894887644007218609"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_abs",
    "hash": "944263736720889263815253815384482748722"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_add",
    "hash": "13692119892606392248572192565507815733"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_add_unsigned",
    "hash": "622931461368032126718179952449176863890"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_div",
    "hash": "1445874928693942179613110770824781204100"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_div_euclid",
    "hash": "62893579793773160938906397220904207642"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_mul",
    "hash": "145706270547757343274497605788825970777"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_neg",
    "hash": "70862547522832567321040465008231743804"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_pow",
    "hash": "121292188661685696145686109354288458460"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_rem",
    "hash": "1397221347496426544715117220050180465"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_rem_euclid",
    "hash": "5454719083576222838436974300799108810"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_shl",
    "hash": "3816841637408122788729906537184101940"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_shr",
    "hash": "51274069245415010613776903996246351427"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_sub",
    "hash": "32322189636216200885598874661244373771"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_sub_unsigned",
    "hash": "1064307704140403391511975562778917817478"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::swap_bytes",
    "hash": "172528149156479718112523758328506886414"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::to_be",
    "hash": "46374958179590061546031356700917729528"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::to_be_bytes",
    "hash": "23216495703285198605862574473581790730"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::to_le",
    "hash": "52651324284626520613660635209082991507"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::to_le_bytes",
    "hash": "1750096592013236286811618803704251232061"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::to_ne_bytes",
    "hash": "69459984359164916744316896029091511959"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::trailing_ones",
    "hash": "1251839641777401631511506509453242229183"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::trailing_zeros",
    "hash": "821060612598784260315939462886882881372"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unbounded_shl",
    "hash": "1423219303509730118614571406123921220153"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unbounded_shr",
    "hash": "1835220325659992485711722799154281513346"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unchecked_add",
    "hash": "495332347689896727011805868068893738567"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unchecked_exact_div",
    "hash": "1583465367484291226910246832899891990527"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unchecked_mul",
    "hash": "85439973265229594709660975186257596229"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unchecked_neg",
    "hash": "93921612986508851773422487018953788825"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unchecked_shl",
    "hash": "238322919125801162212663226268283526324"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unchecked_shr",
    "hash": "1479056908703027135617803180227191744696"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unchecked_sub",
    "hash": "8836697918423937348863169555033124103"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unsigned_abs",
    "hash": "916083811178017372218400960434522154502"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::widening_mul",
    "hash": "1006337865822288893916525908461245002324"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_abs",
    "hash": "123873779917350563132072606162119563120"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_add",
    "hash": "641411012108725622115623215742881895301"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_add_unsigned",
    "hash": "919029820234031164712697803297442629320"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_div",
    "hash": "861145902822608007614459478327313448981"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_div_euclid",
    "hash": "94195169879032307827168235113471333325"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_mul",
    "hash": "121069372103128672924498947075053812274"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_neg",
    "hash": "1541497419327028690010926773332562248180"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_pow",
    "hash": "122536773056960688726474069228562114271"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_rem",
    "hash": "1750539399485463506118252446359333507617"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_rem_euclid",
    "hash": "689514267998135559815660867563095013733"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_shl",
    "hash": "1459451430095429570311438014987163540808"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_shr",
    "hash": "294347171383796430110320598109298937420"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_sub",
    "hash": "168859648725517061372948320196746619603"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_sub_unsigned",
    "hash": "59785576635257609939405213494528334651"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::abs",
    "hash": "1018326772241226151715581706625089687185"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::abs_diff",
    "hash": "414513722074561893316358288887081418901"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::borrowing_sub",
    "hash": "19973304705238389535594936932707693254"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::carrying_add",
    "hash": "52815708752247939699327656763968350196"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::carrying_mul",
    "hash": "9505493677559035809813033878500191871"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::carrying_mul_add",
    "hash": "115005618074658480495064059813950994117"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::cast_unsigned",
    "hash": "12797262796783969052574084169618843506"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_abs",
    "hash": "109862505872229745542012754227756769679"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_add",
    "hash": "67648270839073213961814117516265230796"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_add_unsigned",
    "hash": "939988627222815348610072207872801640645"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_div",
    "hash": "110408332410698658225021371566099011525"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_div_euclid",
    "hash": "151710971601663955694176778167268814704"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_exact_div",
    "hash": "1649846900980670178415745063842008714250"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_ilog",
    "hash": "33685525606544796586627717871152559225"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_ilog10",
    "hash": "593647896426719884612325515036028313901"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_ilog2",
    "hash": "52633658013657764613836208130104610506"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_isqrt",
    "hash": "1247104210324678290311800166844142447325"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_mul",
    "hash": "63742692640907996446322238301922467640"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_neg",
    "hash": "77888249557028632587327475314454416885"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_next_multiple_of",
    "hash": "1570739623259431705110039588705806654583"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_pow",
    "hash": "116273907346774542261120519416566382250"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_rem",
    "hash": "1760696773495132768816531032760381774690"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_rem_euclid",
    "hash": "11282272283840609327213782600560334442"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_shl",
    "hash": "1669987377229063358110001003690905381776"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_shr",
    "hash": "129688847945320600929457972422706506459"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_sub",
    "hash": "353547858435901886015074194093312292310"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_sub_unsigned",
    "hash": "72789969664599253715254591845686294365"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::count_ones",
    "hash": "11389265280654792526802745471568721752"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::count_zeros",
    "hash": "159352406649214819016384378808284102416"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::div_ceil",
    "hash": "95718373034266609755572417047371273574"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::div_euclid",
    "hash": "96629385206299096658220642731459318238"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::div_floor",
    "hash": "155056897674953258426857715881641286953"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::exact_div",
    "hash": "692790678937850719112304986310569019843"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::from_be",
    "hash": "9712474968969864219758077489403065633"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::from_be_bytes",
    "hash": "675320695417403599716173724271002783820"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::from_le",
    "hash": "400641117777420395810587314440091712574"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::from_le_bytes",
    "hash": "808304739782449731817098592717252290743"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::from_ne_bytes",
    "hash": "367566463002535154911982565432592973854"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::highest_one",
    "hash": "141144915801277494813563709709061170320"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::ilog",
    "hash": "7592242808402230512736691228642496859"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::ilog10",
    "hash": "99510560738140850814909525069145790757"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::ilog2",
    "hash": "995364051257303145510606107669351165835"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::is_negative",
    "hash": "171867833786315836965264056151364957631"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::is_positive",
    "hash": "199320574675376753514097775382989212748"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::isolate_highest_one",
    "hash": "167987343910962956766481242923792580663"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::isolate_lowest_one",
    "hash": "30368947113726079838005269371919463940"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::isqrt",
    "hash": "118495506423117630051455359695053381420"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::leading_ones",
    "hash": "157515010923686119932478011700235208335"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::leading_zeros",
    "hash": "177319485088267563464695938538193740919"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::lowest_one",
    "hash": "84086978512854202169916121270919495358"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::max_value",
    "hash": "2811435366555984046279240534329644290"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::min_value",
    "hash": "742331793782895051418051431118022477211"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::next_multiple_of",
    "hash": "163546580430945995589045324061815841425"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_abs",
    "hash": "166838863199597424181895246331767274866"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_add",
    "hash": "127147875176570694426843860994559719329"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_add_unsigned",
    "hash": "132344839462293324010486868444679329160"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_div",
    "hash": "113585058779443507431522869415675447418"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_div_euclid",
    "hash": "52337204968838101947588184926598495812"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_mul",
    "hash": "85028357743683754439218410785045655724"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_neg",
    "hash": "351807782746538083114712533750946400193"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_pow",
    "hash": "226243606337540505417418042649070533666"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_rem",
    "hash": "636811779352346366413359331532934598389"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_rem_euclid",
    "hash": "75676376600787464483400692992155763228"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_shl",
    "hash": "1763916380138240100717503449618933642369"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_shr",
    "hash": "180927913651789363025630524532088671001"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_sub",
    "hash": "546311695008674392714584741631367224629"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_sub_unsigned",
    "hash": "220014225026401362912038338426543791113"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::pow",
    "hash": "1215739451374407106310440716482988979936"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::rem_euclid",
    "hash": "385025506775921953312479381928385369453"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::reverse_bits",
    "hash": "764309752004130771412291317462674156465"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::rotate_left",
    "hash": "9302730308531966794651447016724708005"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::rotate_right",
    "hash": "99778400656495019721339343721099906341"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_abs",
    "hash": "1159132184658606319912011020089532536092"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_add",
    "hash": "127279835719535707387981449754417768696"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_add_unsigned",
    "hash": "150414890664365866777135393023182077830"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_div",
    "hash": "1716828755158074130010511397413305385850"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_mul",
    "hash": "868910587354694416210376696874541038883"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_neg",
    "hash": "1740613206953550872613266662142383321243"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_pow",
    "hash": "181133455708261488501693453771282308521"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_sub",
    "hash": "1102206041450916855216895862465129322292"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_sub_unsigned",
    "hash": "323112003442915476013938496402106986981"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::signum",
    "hash": "54601103024927446318372955456381255143"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_abs",
    "hash": "10390970483311510745951487748042284862"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_add",
    "hash": "1712701166147872558811372610363307133419"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_add_unsigned",
    "hash": "158058052945987468679248669465441516506"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_div",
    "hash": "134493786209926213594912255112933053895"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_div_euclid",
    "hash": "711371905192713834812306360814117964199"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_mul",
    "hash": "1752998793460381557816151707849389207238"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_neg",
    "hash": "21486064570169464019588932033932546326"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_pow",
    "hash": "108856485766192431221986532944962653923"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_rem",
    "hash": "1275280333322359391515929274185072383445"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_rem_euclid",
    "hash": "129234478854595673874217487449359295573"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_shl",
    "hash": "61365767956090134115840917465201962945"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_shr",
    "hash": "15255070689666592581280046826569206144"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_sub",
    "hash": "1282256926875232354412487316329445356647"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_sub_unsigned",
    "hash": "38154563587083221681997955756923846714"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::swap_bytes",
    "hash": "70322093808512587977407989566084912518"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::to_be",
    "hash": "71474907476993452864978705515931922418"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::to_be_bytes",
    "hash": "22780975740452810254068746308893268745"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::to_le",
    "hash": "1813191640221969358410513672057890378558"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::to_le_bytes",
    "hash": "299532297313895559316160137410523602913"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::to_ne_bytes",
    "hash": "4134772645858591566431365305927081753"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::trailing_ones",
    "hash": "128048450426674096246628912368040775349"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::trailing_zeros",
    "hash": "44103274574880362914391812693229015006"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unbounded_shl",
    "hash": "6909207729833862618653029519535813915"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unbounded_shr",
    "hash": "33761423123322724489896515777353666258"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unchecked_add",
    "hash": "61500747910508866131444771903504926186"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unchecked_exact_div",
    "hash": "1118670074783417518713384506097226117518"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unchecked_mul",
    "hash": "27055168657122131585449832448927324554"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unchecked_neg",
    "hash": "15867803796215262767526616346496127687"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unchecked_shl",
    "hash": "1491091135355906650418181348394650286462"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unchecked_shr",
    "hash": "111574872827053050638756393300493997222"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unchecked_sub",
    "hash": "551859988481821050815065918897179102904"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unsigned_abs",
    "hash": "1802081507504341195914791944263423874353"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::widening_mul",
    "hash": "105691943767170808906504600073141855469"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_abs",
    "hash": "58116248878765485486515209668426539248"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_add",
    "hash": "2805694975735368585281071902122046080"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_add_unsigned",
    "hash": "17722395726279595316097959604206213789"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_div",
    "hash": "90041001247396981018193744468309355244"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_div_euclid",
    "hash": "713194707964043305213964149347394394747"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_mul",
    "hash": "130612483268520814641049374455422225419"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_neg",
    "hash": "1257481730046331751717672236640275087076"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_pow",
    "hash": "126921244798041480385794569024495355421"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_rem",
    "hash": "50483112013389646497268258334254804564"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_rem_euclid",
    "hash": "129853245614714773704366751145781005554"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_shl",
    "hash": "1699209984291052178414441268602245154308"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_shr",
    "hash": "221690055369200322116215894344516635304"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_sub",
    "hash": "218024861246653503511166065243375683297"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_sub_unsigned",
    "hash": "78195388378411147474185602490392890395"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::abs",
    "hash": "60274398156224580893098929132655418061"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::abs_diff",
    "hash": "1501586962460290734110274597845471223848"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::borrowing_sub",
    "hash": "135622363588877589012865972795783886453"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::carrying_add",
    "hash": "1635184136803636815215495152122013744780"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::carrying_mul",
    "hash": "114183724559331311003163427924976335921"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::carrying_mul_add",
    "hash": "74206459359722566710760611710956201372"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::cast_unsigned",
    "hash": "842945457718532767310390302815227684892"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_abs",
    "hash": "76984767388543023753933332980278642373"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_add",
    "hash": "420265849543682736711725097224062878358"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_add_unsigned",
    "hash": "9392280614353715607152516572926657539"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_div",
    "hash": "1007700278997629633712917328891866419304"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_div_euclid",
    "hash": "176500492260993515666332211677546060272"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_exact_div",
    "hash": "1561770836730846653817508408135102642713"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_ilog",
    "hash": "183980903275944390963765873410419157820"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_ilog10",
    "hash": "19420667503933183351238905317040541530"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_ilog2",
    "hash": "49342090940108555429607461975431591726"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_isqrt",
    "hash": "10396141358047516877558450477558659379"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_mul",
    "hash": "53115028674887720202589374340554959674"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_neg",
    "hash": "1112431796900636743018417023051061753431"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_next_multiple_of",
    "hash": "61252354400154695232927633949744177782"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_pow",
    "hash": "1647306163716197478713725437863268950238"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_rem",
    "hash": "8889808143983627034411067474777422204"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_rem_euclid",
    "hash": "9461675676033210232228740542364787147"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_shl",
    "hash": "182194134635811344217463933070019498522"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_shr",
    "hash": "1175015339275273867715626545543642424494"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_sub",
    "hash": "368553342032211417010947030560891815418"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_sub_unsigned",
    "hash": "167506013969709133215985238307305011571"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::count_ones",
    "hash": "66925657381409030611183622691310137565"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::count_zeros",
    "hash": "23047620228031322316608520171854489932"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::div_ceil",
    "hash": "89745520112291049282887283637561928695"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::div_euclid",
    "hash": "173069247183794881127554409868192318543"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::div_floor",
    "hash": "18294123979198548080484924463890044637"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::exact_div",
    "hash": "720420426826576084211014675117046219197"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::from_be",
    "hash": "1381532552759048478517603118444915724244"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::from_be_bytes",
    "hash": "1304054406328259110013514510801452461305"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::from_le",
    "hash": "1552189726655701405613465635190747616190"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::from_le_bytes",
    "hash": "30187145565602101576305327327296035612"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::from_ne_bytes",
    "hash": "447253099606970317814601502606871520402"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::highest_one",
    "hash": "942412593303674704217483958329791980838"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::ilog",
    "hash": "259325972358558708717933653420174259108"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::ilog10",
    "hash": "153734173401259415026951434032063243160"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::ilog2",
    "hash": "1555139682947985035213351236727577639463"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::is_negative",
    "hash": "8008291109396943507329710476362008262"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::is_positive",
    "hash": "68319950086825801069741458482416239374"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::isolate_highest_one",
    "hash": "1362145569241842675914245431860543426091"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::isolate_lowest_one",
    "hash": "15910860234239776568888459028034976010"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::isqrt",
    "hash": "16356790438225422104664275515568925619"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::leading_ones",
    "hash": "183590472767272405895487914923795154444"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::leading_zeros",
    "hash": "96249164416033996505841651455966298528"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::lowest_one",
    "hash": "884918767144288146313198027390484240100"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::max_value",
    "hash": "1306737211379450804916925188184718785488"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::min_value",
    "hash": "41437321733918067225948258361198722990"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::next_multiple_of",
    "hash": "610322916168513124314243887585259006953"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_abs",
    "hash": "457126701906234450411638361558565995447"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_add",
    "hash": "125315198990322946237831519187949713059"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_add_unsigned",
    "hash": "144646953433912106392920922579358464355"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_div",
    "hash": "943497413416075809415671608608567285161"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_div_euclid",
    "hash": "180999929299818421036671350218236191648"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_mul",
    "hash": "39336162230624853078360332827493214488"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_neg",
    "hash": "1603825449640848442012015903761385007869"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_pow",
    "hash": "156370858575600244906905393724316309951"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_rem",
    "hash": "26325406366515236245952062717907000318"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_rem_euclid",
    "hash": "1641364935224171846113944193641020992464"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_shl",
    "hash": "201268207881661536218124048217538287919"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_shr",
    "hash": "112411258832608142523531669373146767188"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_sub",
    "hash": "582831261399335896417025241230107259349"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_sub_unsigned",
    "hash": "1362716004788834533612055497531296583446"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::pow",
    "hash": "35485693168269487027779444760838111749"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::rem_euclid",
    "hash": "1438550697848149567616901408955456917924"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::reverse_bits",
    "hash": "850704189209372740413236974956812899266"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::rotate_left",
    "hash": "104081890261173845535662464476287584859"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::rotate_right",
    "hash": "115951947373350800577707600045004931856"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_abs",
    "hash": "137636087328982337536102218710951382428"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_add",
    "hash": "1214756679022405261115606718485665185928"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_add_unsigned",
    "hash": "68054608988410895335911338821975189660"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_div",
    "hash": "1253736486825330479714184139315411513671"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_mul",
    "hash": "465282867075926974618036923383153671647"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_neg",
    "hash": "9018325699852082708370017426927078848"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_pow",
    "hash": "155079689148921732647182372834005460763"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_sub",
    "hash": "1793029038829338093413216373984508865377"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_sub_unsigned",
    "hash": "71663663228714726718952680721519644454"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::signum",
    "hash": "150521885029583097163189043586837617444"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_abs",
    "hash": "118609235461075305495786448595447464459"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_add",
    "hash": "1091794537874801141310228839549212266946"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_add_unsigned",
    "hash": "471816737584945346815517122911041939080"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_div",
    "hash": "1557335764866006176713716803319831591301"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_div_euclid",
    "hash": "40459094288589416675055757069542013"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_mul",
    "hash": "59176736426179774168095408553504352609"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_neg",
    "hash": "118523444753201614127150286711903805501"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_pow",
    "hash": "6118268067704119195256447567483485319"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_rem",
    "hash": "1745675576994099143816454709252280378853"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_rem_euclid",
    "hash": "133782560296860737053525533203596555093"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_shl",
    "hash": "1162668570663822219615925362088786176184"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_shr",
    "hash": "1184437195676310284115714600735594944080"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_sub",
    "hash": "111789039033204248008365124355369361683"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_sub_unsigned",
    "hash": "674133109471667897812562611003386112554"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::swap_bytes",
    "hash": "144194799909097354292338698417556057944"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::to_be",
    "hash": "148516047580876367346178861492691938034"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::to_be_bytes",
    "hash": "70798903961061292206642278454056205028"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::to_le",
    "hash": "1441421005095947488716319494320674547439"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::to_le_bytes",
    "hash": "105389161710592382635613417644083419691"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::to_ne_bytes",
    "hash": "1820811809048973874512458512213675994919"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::trailing_ones",
    "hash": "121562664920449892788954322360724371494"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::trailing_zeros",
    "hash": "142231565221087139171360437662160098024"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unbounded_shl",
    "hash": "115241850358187658299488990805448436027"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unbounded_shr",
    "hash": "1592208579221095815213873614956786453041"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unchecked_add",
    "hash": "663217852799816149111912177052445355052"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unchecked_exact_div",
    "hash": "175923330080631940381084397932859566412"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unchecked_mul",
    "hash": "68467260795312100568425705532463304305"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unchecked_neg",
    "hash": "89440186823795510585147403653927770391"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unchecked_shl",
    "hash": "72994734779040355318923887386608255076"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unchecked_shr",
    "hash": "1677459649535607211516537717030923496972"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unchecked_sub",
    "hash": "15336799337092022727149239551100004364"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unsigned_abs",
    "hash": "1779930121841587658214575191639056450824"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::widening_mul",
    "hash": "57110109042627771185668241642401748"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_abs",
    "hash": "95570105866199473915567648222150313725"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_add",
    "hash": "1524663227741314603716726831435671012428"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_add_unsigned",
    "hash": "107983517497326446617597927781018175982"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_div",
    "hash": "35797057464255042609014376066407713863"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_div_euclid",
    "hash": "798540737940809915514222237540557833658"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_mul",
    "hash": "89427284305015732615993878670716393365"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_neg",
    "hash": "39100849906922337893753536185439686958"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_pow",
    "hash": "1182257957333606713515243289761593958232"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_rem",
    "hash": "169683009870994009608751962716085810908"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_rem_euclid",
    "hash": "770637131895950729111297800499327995762"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_shl",
    "hash": "262268359050039535716058539063633290047"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_shr",
    "hash": "139869513879375403502174267726392386380"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_sub",
    "hash": "58536661934954047465355250963376346028"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_sub_unsigned",
    "hash": "1657525811235697898413217623360833366697"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::abs",
    "hash": "1168546315079728137812452755665719020166"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::abs_diff",
    "hash": "23806323758063682659202376309705136123"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::borrowing_sub",
    "hash": "173959267280813729541431226161321600387"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::carrying_add",
    "hash": "915547431170596651718043056961367994022"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::carrying_mul",
    "hash": "618123546909531795112392165241970548269"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::carrying_mul_add",
    "hash": "261000981783382583117085664358776478945"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::cast_unsigned",
    "hash": "97830275843093246574584959288023045940"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_abs",
    "hash": "891124845709714456310173401329385912100"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_add",
    "hash": "342439794539662854718392260025955433621"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_add_unsigned",
    "hash": "3210609251836272258510598608066212811"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_div",
    "hash": "96677205784294893844412845174652030791"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_div_euclid",
    "hash": "79032019299644226798896835480589597680"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_exact_div",
    "hash": "477910084236345270412803208186377220331"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_ilog",
    "hash": "1082561501656453670814748958801929441956"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_ilog10",
    "hash": "337149721634390880015516949659728940985"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_ilog2",
    "hash": "83379638442882711312595388264299549748"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_isqrt",
    "hash": "84142041305002668771844539262287698251"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_mul",
    "hash": "36470183717881683726058620981198806558"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_neg",
    "hash": "56902684921546502791571014787763442650"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_next_multiple_of",
    "hash": "181636650275035558085081240993454265795"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_pow",
    "hash": "1006960794898093988816820117554011916134"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_rem",
    "hash": "429637945994189218812433323112888267299"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_rem_euclid",
    "hash": "44739446995670272421517465267977319902"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_shl",
    "hash": "127999026335581818527616842364439049481"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_shr",
    "hash": "65538848707247543879072566064025099532"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_sub",
    "hash": "831119601660073943814764298338484655293"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_sub_unsigned",
    "hash": "1440453990215342474717733499104359214531"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::count_ones",
    "hash": "104838163173514196514840877562832743092"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::count_zeros",
    "hash": "18786460998067397746385950272400346253"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::div_ceil",
    "hash": "172701922881105035318316361473825103060"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::div_euclid",
    "hash": "1840384887039603447516667531740070096503"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::div_floor",
    "hash": "152925412541592747255103915044831117143"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::exact_div",
    "hash": "6953103239736120438336541282409663775"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::from_be",
    "hash": "64480152039181088412764284360593545746"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::from_be_bytes",
    "hash": "56239995312820751511814568484040151471"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::from_le",
    "hash": "677932828976008607516690634313586457339"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::from_le_bytes",
    "hash": "337917837672428062614822751817540600778"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::from_ne_bytes",
    "hash": "172500235013348146953255092058263342191"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::highest_one",
    "hash": "182345957047078033414697550365695181992"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::ilog",
    "hash": "137811173289960088793980847013378695024"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::ilog10",
    "hash": "1755443518123017150910042775681741527936"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::ilog2",
    "hash": "99508118567132397019895001611518957378"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::is_negative",
    "hash": "66067183921389519361363560199082431970"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::is_positive",
    "hash": "150176380709168958396261631960561007240"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::isolate_highest_one",
    "hash": "1777226643714710330611726607724979291752"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::isolate_lowest_one",
    "hash": "1114119907815364209312943762501877437018"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::isqrt",
    "hash": "1617102079207211441816784880252394602395"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::leading_ones",
    "hash": "158082762550817476926700879217924627222"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::leading_zeros",
    "hash": "1254840251898207358118309973107018227921"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::lowest_one",
    "hash": "78938504959087295322280475427344314550"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::max_value",
    "hash": "27472038660418548802956410022577142395"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::min_value",
    "hash": "164808256299843672787180747294382957995"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::next_multiple_of",
    "hash": "1265785587768414333716556951050443544915"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_abs",
    "hash": "134312094960490997563135113764104475180"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_add",
    "hash": "179925613750743477810855977642644873188"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_add_unsigned",
    "hash": "130652728770404411483230711229268669714"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_div",
    "hash": "599713113591089389717192066918480014943"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_div_euclid",
    "hash": "32094658812849631313332812183547458246"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_mul",
    "hash": "1267885751705503668210224928138978546495"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_neg",
    "hash": "210924391645631698010442191458394017806"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_pow",
    "hash": "1664532857282438761011515140801327963297"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_rem",
    "hash": "101497465867380379012727676456273920845"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_rem_euclid",
    "hash": "723108777684688624015005425172876988211"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_shl",
    "hash": "14729674727882472242142762700096030389"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_shr",
    "hash": "6037299221502153737273938157352216752"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_sub",
    "hash": "32468871589867367782031289506797963900"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_sub_unsigned",
    "hash": "1213902023365772749417158614131383779995"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::pow",
    "hash": "95260126326984700561283461819658705720"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::rem_euclid",
    "hash": "163498874122981251163364488138423903483"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::reverse_bits",
    "hash": "1074540363368369132817547641176622458452"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::rotate_left",
    "hash": "154075031404132735842940932479392797493"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::rotate_right",
    "hash": "96509986296539692555920889124444151964"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_abs",
    "hash": "63015966850606650564043654130113080036"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_add",
    "hash": "983188075457836222415744164605052795388"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_add_unsigned",
    "hash": "142577706940032277817334509521051050610"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_div",
    "hash": "1412927291204733030812798887986046195511"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_mul",
    "hash": "13398142566613850746857382529603771816"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_neg",
    "hash": "1276456601669488113215905478510210180629"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_pow",
    "hash": "45731085943216297177967489503139729084"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_sub",
    "hash": "762370596274962382017278461568533011216"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_sub_unsigned",
    "hash": "146292775262188417193950201903661226245"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::signum",
    "hash": "1735887410662566588512686154253077633247"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_abs",
    "hash": "68287475515007416316760536634935610089"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_add",
    "hash": "1625839299695123525318296538202549187166"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_add_unsigned",
    "hash": "8400978748694033463965310627851141573"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_div",
    "hash": "118945311728523744948138718135457590137"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_div_euclid",
    "hash": "93123757640790397178767435248220443800"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_mul",
    "hash": "74880665705758590214269456425176268291"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_neg",
    "hash": "108006884911089974823865457966537458569"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_pow",
    "hash": "650273774405192267517249661166429262367"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_rem",
    "hash": "1452854215140149569210949747529463040"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_rem_euclid",
    "hash": "17958555164408531774686977922396346718"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_shl",
    "hash": "38416101884559419262864200638654579978"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_shr",
    "hash": "79523191094198278955244055781259128031"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_sub",
    "hash": "57547440790973487235945837665468992461"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_sub_unsigned",
    "hash": "165449336168411086313138360927202335046"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::swap_bytes",
    "hash": "1356647500812129867316148269553664363076"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::to_be",
    "hash": "105461160135939545112745063785233911789"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::to_be_bytes",
    "hash": "105318723014886106764607921420324326331"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::to_le",
    "hash": "117853077688424284305384558958594434369"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::to_le_bytes",
    "hash": "35791298041990889342901742416297171165"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::to_ne_bytes",
    "hash": "216818154625147487014070155765709967397"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::trailing_ones",
    "hash": "70886186722263897285207944424062854371"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::trailing_zeros",
    "hash": "178585025067877360911438844628173939232"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unbounded_shl",
    "hash": "592228281072817077718339013020237000874"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unbounded_shr",
    "hash": "64207651737242270438628592420322773321"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unchecked_add",
    "hash": "95856638434221720318429362612597976330"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unchecked_exact_div",
    "hash": "32514945881242336267166118986848381988"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unchecked_mul",
    "hash": "1247724487721080381112306920556543736998"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unchecked_neg",
    "hash": "296693798598591662811851064877336439371"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unchecked_shl",
    "hash": "234700365440563143814848091571410638628"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unchecked_shr",
    "hash": "945502678995620796515955378675933925794"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unchecked_sub",
    "hash": "45011022022473771718683213754832778641"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unsigned_abs",
    "hash": "14409162050791146113382776773582502624"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::widening_mul",
    "hash": "47644429380225843012453775292736429281"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_abs",
    "hash": "171780577018179296006572003474160706335"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_add",
    "hash": "1332740965838102301317895857069155093590"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_add_unsigned",
    "hash": "340067623067724385204992554330403316"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_div",
    "hash": "21377909578219601992908466936273017680"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_div_euclid",
    "hash": "993786416533928795712833365640269378322"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_mul",
    "hash": "190500976669274768115983731472823143897"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_neg",
    "hash": "98636229198479113642670439163837882616"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_pow",
    "hash": "1347905444819713794816631876869043568745"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_rem",
    "hash": "441975497859266322310606841050314135658"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_rem_euclid",
    "hash": "735694569570036883216898521891947055913"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_shl",
    "hash": "705874997350791215116828629383663692604"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_shr",
    "hash": "184536603119115258913008331932209491102"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_sub",
    "hash": "1221758964833982842911356229922778206043"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_sub_unsigned",
    "hash": "41030564187390399002821925799317659209"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::abs",
    "hash": "726888765053592835216881411718257379467"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::abs_diff",
    "hash": "96425122825915882513303849128726805442"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::borrowing_sub",
    "hash": "1699182420151562530211877374561439327416"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::carrying_add",
    "hash": "111401904328287855648750318273502929136"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::carrying_mul",
    "hash": "1348105273198824564810169999349356139941"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::carrying_mul_add",
    "hash": "150552425247285372539149141102498985340"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::cast_unsigned",
    "hash": "78180345947126287236067127111952367633"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_abs",
    "hash": "165883874985017479699238662156025450475"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_add",
    "hash": "84243243785890927704710758172217459734"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_add_unsigned",
    "hash": "7882676656666750917919679757831787270"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_div",
    "hash": "508289236977979224214799340470155141685"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_div_euclid",
    "hash": "120207353415454034314812909890343537148"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_exact_div",
    "hash": "141987679416866810878058101741157603507"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_ilog",
    "hash": "1205925564890094608215092851242694085784"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_ilog10",
    "hash": "22264585176674569107384945393318116014"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_ilog2",
    "hash": "118885183791259590203806758235880509424"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_isqrt",
    "hash": "87454333803844574666747640544003481537"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_mul",
    "hash": "44262376140100425933506744116369827787"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_neg",
    "hash": "168071718322669993549068566008832998629"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_next_multiple_of",
    "hash": "1657448757241564632117725737771645787968"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_pow",
    "hash": "13266055659814927852601796671301987719"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_rem",
    "hash": "89177036802466051959107277492073232164"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_rem_euclid",
    "hash": "784610444902947373815013249674502963593"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_shl",
    "hash": "13071937354071766536223250546785846199"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_shr",
    "hash": "1469367017686192595216529487904932439456"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_sub",
    "hash": "79556048875716778781320630243288561173"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_sub_unsigned",
    "hash": "161893048016516750664191588934517241908"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::count_ones",
    "hash": "54868208527376408411075478822696806906"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::count_zeros",
    "hash": "492186435767486496911683770015976994545"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::div_ceil",
    "hash": "154274587614180464541090074288324986054"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::div_euclid",
    "hash": "65929440427457621917484422852684525955"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::div_floor",
    "hash": "774599226117204925114512559446424258908"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::exact_div",
    "hash": "44601341081268336133520985108925403536"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::from_be",
    "hash": "535374120013042220111629191749686129772"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::from_be_bytes",
    "hash": "1752336036534593332213997103868624738157"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::from_le",
    "hash": "67031067945399234486554795756814377107"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::from_le_bytes",
    "hash": "102807598435990657232389943492204082357"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::from_ne_bytes",
    "hash": "1189183348767159826918419801039065929745"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::highest_one",
    "hash": "180914858280897457578651687514898099974"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::ilog",
    "hash": "120016566745504443147768919822537594746"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::ilog10",
    "hash": "144626853962175319069896577302700008273"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::ilog2",
    "hash": "1275121828999742415410124982243183201193"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::is_negative",
    "hash": "177756887871480916782524245596575352890"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::is_positive",
    "hash": "200895756997095598310631372976716333049"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::isolate_highest_one",
    "hash": "175341723038453510108638044280454533239"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::isolate_lowest_one",
    "hash": "66290057254562520904898851951576215400"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::isqrt",
    "hash": "28065756009789383856699990125941004380"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::leading_ones",
    "hash": "161569082093800974311198583924855830488"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::leading_zeros",
    "hash": "291801375404146705216849966983209450678"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::lowest_one",
    "hash": "25467309021436034808022966050782169562"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::max_value",
    "hash": "133128849997269282612375637506287226296"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::min_value",
    "hash": "130055473184965741003278163892238109417"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::next_multiple_of",
    "hash": "1542825525750512233015566596953490564964"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_abs",
    "hash": "1630239852139930839615565054072480328829"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_add",
    "hash": "340487010335153860714811211191783087298"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_add_unsigned",
    "hash": "169233858146984911071130189116654069083"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_div",
    "hash": "72119997422671986761256715947967026101"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_div_euclid",
    "hash": "1538256989218265060216969809354777235146"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_mul",
    "hash": "1451912348526603571714406117960481632076"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_neg",
    "hash": "1108769850720793114512225989111678400739"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_pow",
    "hash": "1507880724801906589716848152299826513073"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_rem",
    "hash": "106154654111692354354292339385851050461"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_rem_euclid",
    "hash": "31298016851254391877732851518552205061"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_shl",
    "hash": "82701543930540294839458238805731939407"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_shr",
    "hash": "23393243961343435695574868797763641489"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_sub",
    "hash": "52452613589391938826118379123106907078"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_sub_unsigned",
    "hash": "785724864740687975211094772773456763066"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::pow",
    "hash": "15789190623634061409745891273973163759"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::rem_euclid",
    "hash": "174437176900650623452547867146383603769"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::reverse_bits",
    "hash": "156351182812466134255344144036168836488"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::rotate_left",
    "hash": "284318028852235183117600380194380941795"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::rotate_right",
    "hash": "644397101492229168717438101346549469417"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_abs",
    "hash": "77653484300790766545971514429262752125"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_add",
    "hash": "108521804742738718591687418809735456430"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_add_unsigned",
    "hash": "871069432027362847016784678251626837106"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_div",
    "hash": "98858414715911809771265742968060279218"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_mul",
    "hash": "131475249118108696713536645108031629664"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_neg",
    "hash": "1064567903170349551111874741038074678153"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_pow",
    "hash": "13289615375033241864664779251679924256"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_sub",
    "hash": "1363523859438195693515208308201827553530"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_sub_unsigned",
    "hash": "5075655818784461718280695440711763326"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::signum",
    "hash": "98177699730815593392664932280418542539"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_abs",
    "hash": "85627891411182283374453754855783700112"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_add",
    "hash": "101181706557319714099967831708278450740"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_add_unsigned",
    "hash": "1833708961243857709914376638950774783503"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_div",
    "hash": "1583235353531678209318192409027280938012"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_div_euclid",
    "hash": "1181792761539083865711195404334508375387"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_mul",
    "hash": "1022969481106105342916838542815578216221"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_neg",
    "hash": "1798906062926936438918315070964917610160"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_pow",
    "hash": "1551714995824853538012240965091988828009"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_rem",
    "hash": "33399690711351064539226671058120893836"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_rem_euclid",
    "hash": "70700753564608665429047801654785907925"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_shl",
    "hash": "14253517173652479187246478584690383769"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_shr",
    "hash": "1158735993689132626017618725814603473650"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_sub",
    "hash": "9155587551662279381666475089864913333"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_sub_unsigned",
    "hash": "306232667691401266212462325362532148536"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::swap_bytes",
    "hash": "1314717970355824142113541046851855218268"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::to_be",
    "hash": "27040815712572364529690203860101623325"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::to_be_bytes",
    "hash": "157328412546170574676947594591171468162"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::to_le",
    "hash": "1128556634979778891612808685277955262173"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::to_le_bytes",
    "hash": "52439823956910260263083527160511247109"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::to_ne_bytes",
    "hash": "839851753672105167610292725191038089694"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::trailing_ones",
    "hash": "82302615892654681374415981005025993189"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::trailing_zeros",
    "hash": "5517432205982540699462349147770764473"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unbounded_shl",
    "hash": "48016073979192599413124114437430128811"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unbounded_shr",
    "hash": "1095740007105795641710754985137327769140"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unchecked_add",
    "hash": "122510649139502725118125720438385889775"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unchecked_exact_div",
    "hash": "1739905514916798056217430207045441617072"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unchecked_mul",
    "hash": "100349052726520500817623891446085196116"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unchecked_neg",
    "hash": "1688183271778791251816377435832171811505"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unchecked_shl",
    "hash": "377954688168552895015965332577994598137"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unchecked_shr",
    "hash": "160192709997315436505289371154786883952"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unchecked_sub",
    "hash": "1251549576010427356414468667680234452638"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unsigned_abs",
    "hash": "7794776626257483156600988294934826334"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::widening_mul",
    "hash": "107622442784537285974502075247857255440"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_abs",
    "hash": "183285321469867990666688367477379740302"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_add",
    "hash": "220960558720028253667446970713564357"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_add_unsigned",
    "hash": "1209309022408462878513362347556898307678"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_div",
    "hash": "564471680865657731712472205905932760790"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_div_euclid",
    "hash": "1607243170238763166617514564600094093377"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_mul",
    "hash": "170013138063717003812823225508210397666"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_neg",
    "hash": "32496885145216769714047512334120598635"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_pow",
    "hash": "1401034393893179914430978865623304032"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_rem",
    "hash": "26508863385977014385830437249100425609"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_rem_euclid",
    "hash": "658262912269132054911120710051450889432"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_shl",
    "hash": "585271550637979017810576078703289928584"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_shr",
    "hash": "989024297200360181017469658140367906212"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_sub",
    "hash": "350499220729506986810890015006778885965"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_sub_unsigned",
    "hash": "29101573629532129086016783648857343752"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::abs",
    "hash": "14628096320454133132908901128234098732"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::abs_diff",
    "hash": "236160084003908305015229500485824987494"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::borrowing_sub",
    "hash": "1736097195892297240417725630701161615043"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::carrying_add",
    "hash": "1817827549608862481715998132921186587676"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::carrying_mul",
    "hash": "59633363135955579313620930111518338590"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::carrying_mul_add",
    "hash": "1341696905232134487811633687129946595468"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::cast_unsigned",
    "hash": "106265283795658462026488830776251453832"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_abs",
    "hash": "964191786350773949310458099467460285798"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_add",
    "hash": "1281400159360395170310762968713378296576"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_add_unsigned",
    "hash": "169164955756073404513265045097469856744"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_div",
    "hash": "378454061586202428617147464925042185544"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_div_euclid",
    "hash": "757648861399332068715084521749042300616"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_exact_div",
    "hash": "176367007536177992189364150823792800771"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_ilog",
    "hash": "1813351547298769996811773470880704977864"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_ilog10",
    "hash": "1303291345175286553411165386827802748309"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_ilog2",
    "hash": "106293588742355378063992243750562955394"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_isqrt",
    "hash": "151781121893062258157134474336877128903"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_mul",
    "hash": "1065930719450719522914954068108258755614"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_neg",
    "hash": "154987634496232837466958820496382819044"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_next_multiple_of",
    "hash": "1757044769231667473311631637642940121357"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_pow",
    "hash": "71210319860668481215900802321965389245"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_rem",
    "hash": "168214543668495354686103637670817763674"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_rem_euclid",
    "hash": "175331860780968249217560421507347248235"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_shl",
    "hash": "99464313001587535913222556747773618569"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_shr",
    "hash": "871137892044721838715759064757724925501"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_sub",
    "hash": "113585446971571059637656172089514388743"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_sub_unsigned",
    "hash": "115120488226463902946427723507063665044"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::count_ones",
    "hash": "57331779728068312082415675785541437709"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::count_zeros",
    "hash": "107222099189478183499443900439339842897"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::div_ceil",
    "hash": "768864953726165547318288807880928993864"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::div_euclid",
    "hash": "256286177125160925711591139499541848481"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::div_floor",
    "hash": "1191610371851266704212700395533642443249"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::exact_div",
    "hash": "108294007145304705043003511520653877"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::from_be",
    "hash": "993465829934718426410585582389658746268"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::from_be_bytes",
    "hash": "114353600184664062944539112715979703028"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::from_le",
    "hash": "142982959769594770765787271843952459535"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::from_le_bytes",
    "hash": "1685023467083699184613929892278398188185"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::from_ne_bytes",
    "hash": "1029023479231744591714857497618167162397"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::highest_one",
    "hash": "125938311846682862897906933660195560827"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::ilog",
    "hash": "181686340002636430114885142745364760865"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::ilog10",
    "hash": "1073138078277431608311952905806187204587"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::ilog2",
    "hash": "69216571804779725114296986072618251296"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::is_negative",
    "hash": "857433929166705920510306143784625399689"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::is_positive",
    "hash": "452811547313257760518218704224544659579"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::isolate_highest_one",
    "hash": "148154466154998903563451596735747554936"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::isolate_lowest_one",
    "hash": "748301469445974089815709429864205569882"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::isqrt",
    "hash": "84577461017210362908159094901809019293"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::leading_ones",
    "hash": "1129494758677236851813035205751426920741"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::leading_zeros",
    "hash": "1294553131470873048012603913953997050161"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::lowest_one",
    "hash": "16760573852642914909596770777909982351"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::max_value",
    "hash": "83210345913997834428677128337434348504"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::min_value",
    "hash": "66016024895956821984081937700658514134"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::next_multiple_of",
    "hash": "827796307550125814716928999504649595464"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_abs",
    "hash": "45149901146469942244662367038913490391"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_add",
    "hash": "1178537636380379549213245973093354689843"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_add_unsigned",
    "hash": "1181333758962448675913041973152044495992"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_div",
    "hash": "16192202527438708212517501978222783961"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_div_euclid",
    "hash": "75013588183034167369628271427546063829"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_mul",
    "hash": "16690151976746854158763717064448002219"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_neg",
    "hash": "672966591703366374812558473091505431644"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_pow",
    "hash": "93238882817767149589962877000262593799"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_rem",
    "hash": "827967727197062850617562082852652485782"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_rem_euclid",
    "hash": "473168374414537565910107876231274124245"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_shl",
    "hash": "100678675928292391816507464263364924773"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_shr",
    "hash": "132763863018881538619127627958007649575"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_sub",
    "hash": "1452987623329637664814996636402018320069"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_sub_unsigned",
    "hash": "172163684006882120229958910502009119165"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::pow",
    "hash": "41626119145418484117517656066524255910"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::rem_euclid",
    "hash": "579294814398199514815903162488870981628"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::reverse_bits",
    "hash": "1343799982185665585316150484448440310385"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::rotate_left",
    "hash": "56508837874404130126217126488350495697"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::rotate_right",
    "hash": "43945750505155293804194722858080783321"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_abs",
    "hash": "5148798692785899453712526034613452630"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_add",
    "hash": "236959537270038959616382382330449007923"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_add_unsigned",
    "hash": "17997481340759538405814929401291806688"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_div",
    "hash": "944055207504422391918274381955841107187"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_mul",
    "hash": "493431350109467337816148579858647255537"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_neg",
    "hash": "308683108118093770417569764176182815492"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_pow",
    "hash": "138885960217578609641385717234255211297"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_sub",
    "hash": "60679540906695164978532026280107889660"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_sub_unsigned",
    "hash": "1417848963058275878111052766929019253966"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::signum",
    "hash": "1610034329906347751115833589167662512666"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_abs",
    "hash": "1724612078793010648110698337828119630522"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_add",
    "hash": "8955301314714987705975283699910725489"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_add_unsigned",
    "hash": "924476947092501729312284309503454424365"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_div",
    "hash": "61746665729201100574238425872808590145"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_div_euclid",
    "hash": "25050703890568310824864091291144466700"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_mul",
    "hash": "66707010045128476533300161837100565458"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_neg",
    "hash": "1159352992716761609015794653705837491928"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_pow",
    "hash": "47095114432680203758450672558269050650"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_rem",
    "hash": "143856704540545109397632065387913803226"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_rem_euclid",
    "hash": "83296406918518588978931835236674467027"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_shl",
    "hash": "178151413569598109481242218450687189907"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_shr",
    "hash": "138273615927404730342780298806113589058"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_sub",
    "hash": "792588413573099221317686719240109803509"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_sub_unsigned",
    "hash": "1371968850177181498712813783692031196266"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::swap_bytes",
    "hash": "58998757219518539935073845256400673551"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::to_be",
    "hash": "1623576778379995918616978727411219316007"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::to_be_bytes",
    "hash": "34297141684487248007297169083198349630"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::to_le",
    "hash": "21130416319912662744298012354565743581"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::to_le_bytes",
    "hash": "18921920465722898358965835616111089190"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::to_ne_bytes",
    "hash": "971123529421619985912784920807610711242"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::trailing_ones",
    "hash": "618375413009965517217998812313532571443"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::trailing_zeros",
    "hash": "487598792342235604718135869273709071863"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unbounded_shl",
    "hash": "629148923898256777811255950053711849221"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unbounded_shr",
    "hash": "11926782361660285766313166583734021128"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unchecked_add",
    "hash": "97646825353460505241826077778647250508"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unchecked_exact_div",
    "hash": "65389339041360126612902361199431572145"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unchecked_mul",
    "hash": "81597496412361003539724243492424158443"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unchecked_neg",
    "hash": "1118625506716966342114764905473805485151"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unchecked_shl",
    "hash": "163224725881079983211589668380609097"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unchecked_shr",
    "hash": "1533236616391991446316920053577807345759"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unchecked_sub",
    "hash": "165651128897598743163589877504517152750"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unsigned_abs",
    "hash": "146360905324607035651955803995736658259"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::widening_mul",
    "hash": "36211124416134623111818903621723729676"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_abs",
    "hash": "1045183109832425279114908262503406085279"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_add",
    "hash": "80771617663073152161413392278458607780"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_add_unsigned",
    "hash": "102556979524018816016787191272972484640"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_div",
    "hash": "59984534819128866931489895153406917825"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_div_euclid",
    "hash": "3542721374002242800242370383695730711"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_mul",
    "hash": "166686240017878280779402548515734892497"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_neg",
    "hash": "708404621503742568210655911304843540613"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_pow",
    "hash": "275438645916412631617094807896512670369"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_rem",
    "hash": "819934920042380094813005607121047783193"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_rem_euclid",
    "hash": "1583638948731252961717823849900756883118"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_shl",
    "hash": "770226549732214111017428386380801376657"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_shr",
    "hash": "27797762646614180744707686252923481502"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_sub",
    "hash": "128305302921122491064798754927337502191"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_sub_unsigned",
    "hash": "73434670563911844448259166040129201937"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::i128",
    "hash": "61289417692567288281280591811633632117"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::i16",
    "hash": "114736057154786466232159844229202014859"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::i32",
    "hash": "1114457853931858881517007246129992003612"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::i64",
    "hash": "129744993474932988559968882676432468220"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::i8",
    "hash": "5135967430199160468920261282515254851"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::panic_for_negative_argument",
    "hash": "447633221541583627413452389044665805897"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u128",
    "hash": "54085627387755029286512709407599039179"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u128_stages",
    "hash": "167010265719166440669988398686700632069"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u16",
    "hash": "14248744372143483184334842686584016056"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u16_stages",
    "hash": "786353920834231780217815262024214651303"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u32",
    "hash": "83636584134959079753099183352866990256"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u32_stages",
    "hash": "1149949275529780552016847572923352855938"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u64",
    "hash": "327410443675788817615350170873262608707"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u64_stages",
    "hash": "117334441905459617523696733918409224723"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u8",
    "hash": "60960868849511503248088905502240646288"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "<num::FpCategory as clone::Clone>::clone",
    "hash": "38138070809326056813274648859849705420"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "<num::FpCategory as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "35517804858554754765753608331752288609"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "<num::FpCategory as cmp::PartialEq>::eq",
    "hash": "662275074378696123273697715385597969"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl i128>::midpoint",
    "hash": "118725858493553258061778013582842899580"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl i16>::midpoint",
    "hash": "179827104322190559006006729748298921968"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl i32>::midpoint",
    "hash": "112885184505775227411344202282795087042"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl i64>::midpoint",
    "hash": "1236911846164131033411242740521533295923"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl i8>::midpoint",
    "hash": "1806314289338502242812778631436190394808"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl isize>::midpoint",
    "hash": "76650669777706349847438362145325134236"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u128>::midpoint",
    "hash": "1339968946229866764617084945979056956395"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u16>::is_utf16_surrogate",
    "hash": "79790052907687203808123823924777316396"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u16>::midpoint",
    "hash": "70333124555803083698724319237077865990"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u32>::midpoint",
    "hash": "1442757669858944772313258849104098439308"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u64>::midpoint",
    "hash": "1175193678847869318211903326338808818800"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::as_ascii",
    "hash": "157342375234659354051153884526544597341"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::as_ascii_unchecked",
    "hash": "115229797083273352422457158100491949219"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::ascii_change_case_unchecked",
    "hash": "163595600001382853907822330752148741341"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::eq_ignore_ascii_case",
    "hash": "988028711998370698513075918543258556788"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::escape_ascii",
    "hash": "896062857449265910110082576405472516888"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii",
    "hash": "758800371710587469314073968176229651883"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_alphabetic",
    "hash": "5138601813322156891155001322872760576"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_alphanumeric",
    "hash": "44344231375078259393652290267886090752"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_control",
    "hash": "85514849358641988452354051984579566974"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_digit",
    "hash": "89633452296352964709599256705517159051"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_graphic",
    "hash": "141615893453559366675599442700992029800"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_hexdigit",
    "hash": "127639827262063024413401410675802177964"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_lowercase",
    "hash": "1808592158708615847911831363091156489391"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_octdigit",
    "hash": "67513390696532489506923807546048943469"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_punctuation",
    "hash": "62863102658561508765692073348166081495"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_uppercase",
    "hash": "69417484249274791359857467967200926715"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_whitespace",
    "hash": "840557237266216613515959608352403941460"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_utf8_char_boundary",
    "hash": "170905408305733982667355251913602478519"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::make_ascii_lowercase",
    "hash": "115014031790079929662428883345860873260"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::make_ascii_uppercase",
    "hash": "676196596857159285115644035301973269414"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::midpoint",
    "hash": "1411783917792700563013159976723630335741"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::to_ascii_lowercase",
    "hash": "1766778296466189972714376152058119054158"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::to_ascii_uppercase",
    "hash": "125240937021480279979048134700113690516"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl usize>::midpoint",
    "hash": "182971069895310127889608793246173155965"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl usize>::repeat_u16",
    "hash": "160369700475897112604936253196703491704"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl usize>::repeat_u8",
    "hash": "92313992565919230159263877610704844224"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::from_ascii_radix_panic",
    "hash": "178475005748360944413676903998085803598"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::carrying_mul_u16_full_range",
    "hash": "522814058183404650613895470409085943539",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::carrying_mul_u32_large",
    "hash": "96196924447241937064116174566873836052",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::carrying_mul_u32_mid_edge",
    "hash": "1170394722946302448018108022460540220995",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::carrying_mul_u32_small",
    "hash": "57733383090398499785209669183920938066",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::carrying_mul_u64_large",
    "hash": "110202560680800484011485230728043319750",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::carrying_mul_u64_mid_edge",
    "hash": "1215362445990356156010413104250922317414",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::carrying_mul_u64_small",
    "hash": "99360271350008708258896288673126738346",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::carrying_mul_u8_full_range",
    "hash": "913412890629461845911384540965053498597",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_i128",
    "hash": "581334749595485281815909969998953290249",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_i16",
    "hash": "275233957201243318612298453070248124159",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_i32",
    "hash": "31673294017070336235710969322586646691",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_i64",
    "hash": "1750095663692782354213879735708236232111",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_i8",
    "hash": "24095059035425245605365167308236640971",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_isize",
    "hash": "1352346773238024655815556572050947665657",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_u128",
    "hash": "123214439563494484975414653559588447685",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_u16",
    "hash": "182347018137101694769993605498736797147",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_u32",
    "hash": "113717042466636435996354737544212695869",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_u64",
    "hash": "159818521938177940409920549504382947769",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_u8",
    "hash": "1748030042325508916913028827194689373607",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_usize",
    "hash": "1244647610606842328217291584510316232770",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_i128",
    "hash": "79168441406534613736130661121253585130",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_i16",
    "hash": "6139907446480033138986453470340721052",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_i32",
    "hash": "47611577144563365452061523322123836685",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_i64",
    "hash": "86504592221506780645019436943979624379",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_i8",
    "hash": "15927828474137314218742391694429112320",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_isize",
    "hash": "504929138159687095916856654164685000398",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_u128",
    "hash": "6870348243322416365569580805158101239",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_u16",
    "hash": "13603259727958518007398014176870469485",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_u32",
    "hash": "179419821395187230907177995607785227235",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_u64",
    "hash": "1217536209789342821616368735910551031762",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_u8",
    "hash": "71462662634141803367357376270940545971",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_usize",
    "hash": "1816891983528923027512669011250199953358",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_i128",
    "hash": "445299976386731711514424731147164933515",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_i16",
    "hash": "1269074092907525222914460441714535995145",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_i32",
    "hash": "1183153965766123503017423903353774098503",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_i64",
    "hash": "1379624572678814293911474878386648887726",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_i8",
    "hash": "60178092160079852749486117680262014879",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_isize",
    "hash": "932615233888994180017860836954923015830",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_u128",
    "hash": "1700748272043438404211806255153843188441",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_u16",
    "hash": "157294990553079392414938563298311254855",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_u32",
    "hash": "1120046988153015679611903245655747487494",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_u64",
    "hash": "58206740089214584076277582657068820794",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_u8",
    "hash": "1840042773081999930916456838956779911294",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_usize",
    "hash": "1703163501358815598110102318410088529044",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_i128",
    "hash": "93029139821091325113692901813223404277",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_i16",
    "hash": "39696332840448986144961244181347499068",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_i32",
    "hash": "376627179567497303016208978441998141355",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_i64",
    "hash": "26042137113057758977845989720323719816",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_i8",
    "hash": "1252702079370651686118141618942096361132",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_isize",
    "hash": "152673512057255817537528312699894210570",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_u128",
    "hash": "110079260218623620656324110024556949138",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_u16",
    "hash": "1162155704060281264018240014197591975230",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_u32",
    "hash": "33097295285225231872209788862247432966",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_u64",
    "hash": "1206389419914538997217830719336837483939",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_u8",
    "hash": "939348811475296359417095543777452803979",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_usize",
    "hash": "46481081898803663392902361887569853520",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_mul_i16",
    "hash": "181113452788879432837613659693529999327",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_mul_i8",
    "hash": "1295850661376387080610589732077211784945",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_mul_u16",
    "hash": "374964342934207057217647508027667731072",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_mul_u8",
    "hash": "114783747140724411515449920533613878009",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i128_edge_neg",
    "hash": "1642982164081874181615608807027419898393",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i128_edge_pos",
    "hash": "1438141711247881031910092965643355189896",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i128_large_neg",
    "hash": "183900018160807689510906596524948462750",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i128_large_pos",
    "hash": "134636258699463467712736323775208142042",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i128_small",
    "hash": "148600439249564090136540008997744566472",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i32_edge_neg",
    "hash": "1327693581876427620913144394292916041982",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i32_edge_pos",
    "hash": "56764974459568858348841718586570711118",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i32_large_neg",
    "hash": "1539521515715446717216280801987886598444",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i32_large_pos",
    "hash": "529101087420313318716281557020320738038",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i32_small",
    "hash": "1248857060395289720114315534417461840954",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i64_edge_neg",
    "hash": "1257269860794523242812907627767378450475",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i64_edge_pos",
    "hash": "1420275132878674384616013406418486843771",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i64_large_neg",
    "hash": "88651843289841278141575748876709987549",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i64_large_pos",
    "hash": "553483367182919741117345621307505528624",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i64_small",
    "hash": "41182672708578382158715971189321234156",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_isize_edge_neg",
    "hash": "173964731099301745476565548542351961679",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_isize_edge_pos",
    "hash": "181076439934763253155918336964527651018",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_isize_large_neg",
    "hash": "1181604457273333299214470718141030798063",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_isize_large_pos",
    "hash": "132692318757093983751593021467743001880",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_isize_small",
    "hash": "717948386337209756812000065556571190288",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u128_edge",
    "hash": "4725688108475165970484934144848610957",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u128_large",
    "hash": "16150842127230942665570263678473007657",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u128_small",
    "hash": "1669986868441030137012180089932711811436",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u32_edge",
    "hash": "890554081540586652611381644381472571591",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u32_large",
    "hash": "1250918213005995195016689902860963686584",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u32_small",
    "hash": "548828678797553635515792719905561582101",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u64_edge",
    "hash": "110981597785282120388322945209006684472",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u64_large",
    "hash": "40971805188320294891629961779712401716",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u64_small",
    "hash": "39764819575563973946451940830459245725",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_usize_edge",
    "hash": "531533206486809455914489479490192949354",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_usize_large",
    "hash": "70241774693536240621376543719304540208",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_usize_small",
    "hash": "905494360882698536413512711665464542923",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u16_large",
    "hash": "175261115678773423817143319805149035528",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u16_mid_edge",
    "hash": "364663082305926713415385342123036989369",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u16_small",
    "hash": "144893752718516588078890924382383367139",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u32_large",
    "hash": "159760928750058993953038839047506018379",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u32_mid_edge",
    "hash": "223729556564378037710078645634395675928",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u32_small",
    "hash": "83675966236774424068956881654604194330",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u64_large",
    "hash": "162558525845122048099910357385268364647",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u64_mid_edge",
    "hash": "1227745560671641215111618170276778502774",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u64_small",
    "hash": "667288327708261614414706600332608603556",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u8",
    "hash": "176325059194187239858457824585653434301",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::I32NotAllOnes as clone::Clone>::clone",
    "hash": "130260163257831231661181744634157531489"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::I32NotAllOnes as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "329132065827033569312001165327952153400"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::I32NotAllOnes as cmp::Ord>::cmp",
    "hash": "1146570384903959533610649481180114308008"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::I32NotAllOnes as cmp::PartialEq>::eq",
    "hash": "58297757308377721723653430431359384619"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::I32NotAllOnes as cmp::PartialOrd>::partial_cmp",
    "hash": "156513706797644713472920205271211570457"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::I64NotAllOnes as clone::Clone>::clone",
    "hash": "136788494381657465026702589533761172242"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::I64NotAllOnes as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "126182887731624466552965315148730945468"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::I64NotAllOnes as cmp::Ord>::cmp",
    "hash": "121722638255063894977111397071332734678"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::I64NotAllOnes as cmp::PartialEq>::eq",
    "hash": "485308907394493207214860484740845740296"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::I64NotAllOnes as cmp::PartialOrd>::partial_cmp",
    "hash": "1418721441568224077612505101991730542249"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::Nanoseconds as clone::Clone>::clone",
    "hash": "7316760238328643291450460170323114796"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::Nanoseconds as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "847809843468096518417101640711186155016"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::Nanoseconds as cmp::Ord>::cmp",
    "hash": "12272874884680288726617854333721840052"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::Nanoseconds as cmp::PartialEq>::eq",
    "hash": "14124548386454289006595217407936017995"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::Nanoseconds as cmp::PartialOrd>::partial_cmp",
    "hash": "42800782563270888976682317232258164000"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::Nanoseconds as default::Default>::default",
    "hash": "7491658729142438251950090353170692194"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroCharInner as clone::Clone>::clone",
    "hash": "24305943216781507703181320495852026442"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroCharInner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1122015216536977037714809497619508940243"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroCharInner as cmp::Ord>::cmp",
    "hash": "1011416943413051914813538704294290504462"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroCharInner as cmp::PartialEq>::eq",
    "hash": "1760123889643607024311107943241248750012"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroCharInner as cmp::PartialOrd>::partial_cmp",
    "hash": "96206383828600585603612398727181968961"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI128Inner as clone::Clone>::clone",
    "hash": "376990623522919887913483925469276793907"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI128Inner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "92180977522020171822312156051212340699"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI128Inner as cmp::Ord>::cmp",
    "hash": "416775039274211108312305495851870314961"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI128Inner as cmp::PartialEq>::eq",
    "hash": "1750241060533132881915436811161863038273"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI128Inner as cmp::PartialOrd>::partial_cmp",
    "hash": "1319135479400250955917705370477946021931"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI16Inner as clone::Clone>::clone",
    "hash": "1380752771936964622214815245512968760358"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI16Inner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "102023715931964653638671751878807782420"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI16Inner as cmp::Ord>::cmp",
    "hash": "49114002810414922221205043465308555216"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI16Inner as cmp::PartialEq>::eq",
    "hash": "677727736365088989415947268232606840507"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI16Inner as cmp::PartialOrd>::partial_cmp",
    "hash": "1802331095321426398315084592474299466598"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI32Inner as clone::Clone>::clone",
    "hash": "161265720721628352008900982257095227393"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI32Inner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "410373643314677068212368705475768712271"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI32Inner as cmp::Ord>::cmp",
    "hash": "1086301885373926066117778498906937195344"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI32Inner as cmp::PartialEq>::eq",
    "hash": "9810170845630624752011508490121844974"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI32Inner as cmp::PartialOrd>::partial_cmp",
    "hash": "149603911152432099492140044865854422486"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI64Inner as clone::Clone>::clone",
    "hash": "178573451063271557717753258285016221213"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI64Inner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "177116637920204991662180734184310708662"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI64Inner as cmp::Ord>::cmp",
    "hash": "95349354834376348432445714537908630888"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI64Inner as cmp::PartialEq>::eq",
    "hash": "137577310392875302932469093234564746859"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI64Inner as cmp::PartialOrd>::partial_cmp",
    "hash": "12009791098126371242470621917473340517"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI8Inner as clone::Clone>::clone",
    "hash": "68734847054697733132157276997020845402"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI8Inner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "42362757587951991407553999304302918832"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI8Inner as cmp::Ord>::cmp",
    "hash": "1488995088475622264511477611769916546001"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI8Inner as cmp::PartialEq>::eq",
    "hash": "172117054183963467926619565998943144311"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI8Inner as cmp::PartialOrd>::partial_cmp",
    "hash": "1705740104296491581715741773560437845200"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroIsizeInner as clone::Clone>::clone",
    "hash": "335863427241584261316891127608009340880"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroIsizeInner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1278837861786431900711788476381545842868"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroIsizeInner as cmp::Ord>::cmp",
    "hash": "160084929951866264274539160173890893798"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroIsizeInner as cmp::PartialEq>::eq",
    "hash": "1819185099799939982912352332678600475072"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroIsizeInner as cmp::PartialOrd>::partial_cmp",
    "hash": "272146668749897823417745188698722433123"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU128Inner as clone::Clone>::clone",
    "hash": "177038454855349628773921320190909598675"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU128Inner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "234396594076741214316413790573553203300"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU128Inner as cmp::Ord>::cmp",
    "hash": "86974897882319390428050498403076706655"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU128Inner as cmp::PartialEq>::eq",
    "hash": "395392616995226603715587695623343610637"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU128Inner as cmp::PartialOrd>::partial_cmp",
    "hash": "62870469311600464826870389107960463034"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU16Inner as clone::Clone>::clone",
    "hash": "23911721267680243902671864732944316102"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU16Inner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "503072538232026062813814845106029902247"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU16Inner as cmp::Ord>::cmp",
    "hash": "39418779781398230719778816589198368098"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU16Inner as cmp::PartialEq>::eq",
    "hash": "1269180596674799884910463386201543178702"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU16Inner as cmp::PartialOrd>::partial_cmp",
    "hash": "179574562178195745229188452898540292742"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU32Inner as clone::Clone>::clone",
    "hash": "62912098898121413516603251637953627100"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU32Inner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1764295842041942201616861570876342806479"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU32Inner as cmp::Ord>::cmp",
    "hash": "68517780434663349746650090340360971266"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU32Inner as cmp::PartialEq>::eq",
    "hash": "133685103181038045519295761457786930048"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU32Inner as cmp::PartialOrd>::partial_cmp",
    "hash": "683270276857550753215056978329480230393"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU64Inner as clone::Clone>::clone",
    "hash": "57476325778453791049111004303521026393"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU64Inner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "592641779959247927511204499404739140109"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU64Inner as cmp::Ord>::cmp",
    "hash": "549667738925363848017580095034160193471"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU64Inner as cmp::PartialEq>::eq",
    "hash": "126322703106409210951579460353934572147"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU64Inner as cmp::PartialOrd>::partial_cmp",
    "hash": "1579714628468571640014196957875635930798"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU8Inner as clone::Clone>::clone",
    "hash": "32401247445884349681834377919067560109"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU8Inner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "63706265927595693954987530639938583334"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU8Inner as cmp::Ord>::cmp",
    "hash": "1714211319104152307018222242963506835956"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU8Inner as cmp::PartialEq>::eq",
    "hash": "77632628362409426911074344968128302851"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU8Inner as cmp::PartialOrd>::partial_cmp",
    "hash": "88282393141432009059844877118587446352"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroUsizeInner as clone::Clone>::clone",
    "hash": "69267363667348276953645691528519062923"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroUsizeInner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "612406203379376210914184660936520675610"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroUsizeInner as cmp::Ord>::cmp",
    "hash": "1429048223936521702816697653486658471433"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroUsizeInner as cmp::PartialEq>::eq",
    "hash": "92277888893719856546550168292705459347"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroUsizeInner as cmp::PartialOrd>::partial_cmp",
    "hash": "180478403492687816461515736414312883340"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::U32NotAllOnes as clone::Clone>::clone",
    "hash": "1520420303832705438617162956769739529187"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::U32NotAllOnes as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "831920621608879435514111650492010953500"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::U32NotAllOnes as cmp::Ord>::cmp",
    "hash": "663587606081048337517454529201075781080"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::U32NotAllOnes as cmp::PartialEq>::eq",
    "hash": "1136385908265561615015751200701102075334"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::U32NotAllOnes as cmp::PartialOrd>::partial_cmp",
    "hash": "164701500113069592987732838962225036729"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::U64NotAllOnes as clone::Clone>::clone",
    "hash": "356641310758392203518286306980189857981"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::U64NotAllOnes as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "21404756006682240601680541403762488961"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::U64NotAllOnes as cmp::Ord>::cmp",
    "hash": "104703243318504746581040635173276444579"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::U64NotAllOnes as cmp::PartialEq>::eq",
    "hash": "164824275939231227714652728935987228177"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::U64NotAllOnes as cmp::PartialOrd>::partial_cmp",
    "hash": "83786485708277646064696104068317965231"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::UsizeNoHighBit as clone::Clone>::clone",
    "hash": "117060816845408175911551408760687161979"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::UsizeNoHighBit as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "103771932907682537623292547417870916030"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::UsizeNoHighBit as cmp::Ord>::cmp",
    "hash": "90104338841661430587569520465320746058"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::UsizeNoHighBit as cmp::PartialEq>::eq",
    "hash": "1218669554724966593712707659477451995522"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::UsizeNoHighBit as cmp::PartialOrd>::partial_cmp",
    "hash": "114931462477573390834465069502401138267"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::I32NotAllOnes::as_inner",
    "hash": "840518769854354855816047102508650772484"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::I32NotAllOnes::new",
    "hash": "52708999169030492906921636939240568961"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::I32NotAllOnes::new_unchecked",
    "hash": "928137562900233300117763224209176727538"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::I64NotAllOnes::as_inner",
    "hash": "126100376589909515872187838964883922671"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::I64NotAllOnes::new",
    "hash": "1473836815976317712610646119988398506381"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::I64NotAllOnes::new_unchecked",
    "hash": "38990836088579866315622821884004083750"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::Nanoseconds::as_inner",
    "hash": "27460360985597728751338915468532901532"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::Nanoseconds::new",
    "hash": "163998912568719548117232447345374957605"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::Nanoseconds::new_unchecked",
    "hash": "950957549956578784317830715657615300922"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroCharInner::as_inner",
    "hash": "147797036764499939439829141795549574955"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroCharInner::new",
    "hash": "381616526107132428417262443857784367913"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroCharInner::new_unchecked",
    "hash": "178075817586512906762480103651642610778"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI128Inner::as_inner",
    "hash": "95411387308345243557098707975127330735"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI128Inner::new",
    "hash": "579555344641125729018432271083819467794"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI128Inner::new_unchecked",
    "hash": "101414740034067659531213866050803907781"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI16Inner::as_inner",
    "hash": "58963582119714697109840570832796201469"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI16Inner::new",
    "hash": "72835741852250203948983046089083560544"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI16Inner::new_unchecked",
    "hash": "43028294030189282596872450694186365307"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI32Inner::as_inner",
    "hash": "172200621667727698253850181548353534854"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI32Inner::new",
    "hash": "79575876144189951174067417023636300744"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI32Inner::new_unchecked",
    "hash": "890594276805505117717998017081090587180"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI64Inner::as_inner",
    "hash": "99283088551408584154945769089223918233"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI64Inner::new",
    "hash": "1405326562118444713817573877287113214752"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI64Inner::new_unchecked",
    "hash": "137500526862393174478412207114749072787"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI8Inner::as_inner",
    "hash": "120117335716611505875386768970190666128"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI8Inner::new",
    "hash": "381528343051682126510914514785083735120"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI8Inner::new_unchecked",
    "hash": "102359307275430071517160387479704998534"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroIsizeInner::as_inner",
    "hash": "945089393287905869013756238019492501883"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroIsizeInner::new",
    "hash": "306472900339286542415199936790369485039"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroIsizeInner::new_unchecked",
    "hash": "37418358478075222893836633533258439623"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU128Inner::as_inner",
    "hash": "1133708912525550893516468612402922863161"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU128Inner::new",
    "hash": "638058538781887682812083798376672631683"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU128Inner::new_unchecked",
    "hash": "1830689747256138632713956291861745067179"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU16Inner::as_inner",
    "hash": "15293534662332430236978729792552919598"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU16Inner::new",
    "hash": "7153330048493753244480639526488451390"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU16Inner::new_unchecked",
    "hash": "754427099293165725662640226379977426"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU32Inner::as_inner",
    "hash": "1006262637901002925815999979203524008519"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU32Inner::new",
    "hash": "154332375968080907924343273853860680614"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU32Inner::new_unchecked",
    "hash": "45214312522516704112566854796448624594"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU64Inner::as_inner",
    "hash": "18861947794361669911499976143624166359"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU64Inner::new",
    "hash": "101959911468694108645862633136283326996"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU64Inner::new_unchecked",
    "hash": "69887696208313239405056992472486899025"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU8Inner::as_inner",
    "hash": "1483842740554749988910771165984793051247"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU8Inner::new",
    "hash": "69991688846476776068110092794180252034"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU8Inner::new_unchecked",
    "hash": "32136505081749033161078988256937895027"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroUsizeInner::as_inner",
    "hash": "556649395834550201118244319595347455646"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroUsizeInner::new",
    "hash": "63193008151130446554735682822152365278"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroUsizeInner::new_unchecked",
    "hash": "87886531975366675896088514850635847333"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::U32NotAllOnes::as_inner",
    "hash": "145234670112517999774063514593638544423"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::U32NotAllOnes::new",
    "hash": "151846636834067149023479317943326282600"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::U32NotAllOnes::new_unchecked",
    "hash": "45485188691913999741738462281311794251"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::U64NotAllOnes::as_inner",
    "hash": "129970642203971815423271331306400021893"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::U64NotAllOnes::new",
    "hash": "1200051237088118386114949299933383170513"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::U64NotAllOnes::new_unchecked",
    "hash": "5408723889024818075658764342040817321"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::UsizeNoHighBit::as_inner",
    "hash": "164033130605793518138633321607675241591"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::UsizeNoHighBit::new",
    "hash": "169284624762524851541613278171841773701"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::UsizeNoHighBit::new_unchecked",
    "hash": "111930123754645271738740113181892812490"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "<num::nonzero::NonZero<i128> as ops::arith::Neg>::neg",
    "hash": "181912669119563282317142029499283337232"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "<num::nonzero::NonZero<i16> as ops::arith::Neg>::neg",
    "hash": "93551442235240602203252745001275618015"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "<num::nonzero::NonZero<i32> as ops::arith::Neg>::neg",
    "hash": "55438669199704398491325673505830425047"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "<num::nonzero::NonZero<i64> as ops::arith::Neg>::neg",
    "hash": "948934005239137444216228405315298270008"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "<num::nonzero::NonZero<i8> as ops::arith::Neg>::neg",
    "hash": "253582462076014792316867197040883553405"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "<num::nonzero::NonZero<isize> as ops::arith::Neg>::neg",
    "hash": "14993129664820744436311531653216507092"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Div<num::nonzero::NonZero<u128>> for u128>::div",
    "hash": "511941123879300629816009364076348633743"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Div<num::nonzero::NonZero<u16>> for u16>::div",
    "hash": "116163773132339038395435253225973066435"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Div<num::nonzero::NonZero<u32>> for u32>::div",
    "hash": "82430740292809456879717929564744626760"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Div<num::nonzero::NonZero<u64>> for u64>::div",
    "hash": "1580579314298925216215202472093333478177"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Div<num::nonzero::NonZero<u8>> for u8>::div",
    "hash": "122264676931729613737234743775117770021"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Div<num::nonzero::NonZero<usize>> for usize>::div",
    "hash": "1805480804680761936118240975203772937225"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::DivAssign<num::nonzero::NonZero<u128>> for u128>::div_assign",
    "hash": "1467066821514662832015636665253863232334"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::DivAssign<num::nonzero::NonZero<u16>> for u16>::div_assign",
    "hash": "52796068646853806631482574247418974565"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::DivAssign<num::nonzero::NonZero<u32>> for u32>::div_assign",
    "hash": "182966819049661857909522639503099958420"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::DivAssign<num::nonzero::NonZero<u64>> for u64>::div_assign",
    "hash": "283449729836346587914708706552279831902"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::DivAssign<num::nonzero::NonZero<u8>> for u8>::div_assign",
    "hash": "124361687919838683453617624188794813028"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::DivAssign<num::nonzero::NonZero<usize>> for usize>::div_assign",
    "hash": "363508802737423652210212318702076890599"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Rem<num::nonzero::NonZero<u128>> for u128>::rem",
    "hash": "157203399003369982179943446681346818078"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Rem<num::nonzero::NonZero<u16>> for u16>::rem",
    "hash": "83297228639256638333898668611153380822"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Rem<num::nonzero::NonZero<u32>> for u32>::rem",
    "hash": "57661005908346804526338996699233872923"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Rem<num::nonzero::NonZero<u64>> for u64>::rem",
    "hash": "1459322799767101921016128981136491393056"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Rem<num::nonzero::NonZero<u8>> for u8>::rem",
    "hash": "303481508202112819416698930830432577589"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Rem<num::nonzero::NonZero<usize>> for usize>::rem",
    "hash": "102965283520156468668223727903987626159"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::RemAssign<num::nonzero::NonZero<u128>> for u128>::rem_assign",
    "hash": "170746506544319499514443529605648678671"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::RemAssign<num::nonzero::NonZero<u16>> for u16>::rem_assign",
    "hash": "1298681494087682468716475895433140260210"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::RemAssign<num::nonzero::NonZero<u32>> for u32>::rem_assign",
    "hash": "443023254772587165014035028201267176603"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::RemAssign<num::nonzero::NonZero<u64>> for u64>::rem_assign",
    "hash": "917346905230565796210937783724421061400"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::RemAssign<num::nonzero::NonZero<u8>> for u8>::rem_assign",
    "hash": "1100334174388748766413238645675261862812"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::RemAssign<num::nonzero::NonZero<usize>> for usize>::rem_assign",
    "hash": "359314622205636101415288263552637251190"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::abs",
    "hash": "71728910867555991715481942084810857950"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::cast_unsigned",
    "hash": "2714401197283029265582568387173161734"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::checked_abs",
    "hash": "173722830337448779312914511600650156854"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::checked_mul",
    "hash": "6124084927665346574389524211916311540"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::checked_neg",
    "hash": "58726616980154301044704751237684851372"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::checked_pow",
    "hash": "40590020896001238586763710911335625052"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::count_ones",
    "hash": "12265984864778628717720072782586370282"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::from_be",
    "hash": "22464047032190431657954871615398290207"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::from_le",
    "hash": "510652301064134422417232887676895231789"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::highest_one",
    "hash": "1274897598824915385612153728013493161639"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::is_negative",
    "hash": "75855970394877455405981120862515885555"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::is_positive",
    "hash": "103436867527303006645183001949093209534"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::isolate_highest_one",
    "hash": "27318825995931685143518792562158570367"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::isolate_lowest_one",
    "hash": "221806119160812826111229482217967297406"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::leading_zeros",
    "hash": "1313949075455282400018302974843200582007"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::lowest_one",
    "hash": "302309220950109380614822089422055477623"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::overflowing_abs",
    "hash": "160632843573827915634913015457045361946"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::overflowing_neg",
    "hash": "124223199139877438235340647516672647580"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::reverse_bits",
    "hash": "1133479324635501208217940014112687731500"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::rotate_left",
    "hash": "55088888273395516026148486370068776986"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::rotate_right",
    "hash": "57699907989335224936627265618710056596"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::saturating_abs",
    "hash": "80445926310293133541313340061332888168"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::saturating_mul",
    "hash": "56586797554463144431214847972882484698"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::saturating_neg",
    "hash": "380899179459958401915323806656061335565"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::saturating_pow",
    "hash": "6584292031100365652125374112679263200"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::swap_bytes",
    "hash": "72237678131320035324006956128522950268"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::to_be",
    "hash": "944058487854670457916717138019604607616"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::to_le",
    "hash": "36758055470864770004110763456031500322"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::trailing_zeros",
    "hash": "143028188676802180158126888610540680878"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::unchecked_mul",
    "hash": "138456115982544288745701993870852248893"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::unsigned_abs",
    "hash": "173142087117486909634078535318793160947"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::wrapping_abs",
    "hash": "575099775739289416810151999578184605257"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::wrapping_neg",
    "hash": "157339487637042085239242773732289894777"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::abs",
    "hash": "7320090340955410984596952312303946311"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::cast_unsigned",
    "hash": "821239314135425468413822214125841836828"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::checked_abs",
    "hash": "262371689111521200018301627215688255373"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::checked_mul",
    "hash": "60001254856863987187020995580082174013"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::checked_neg",
    "hash": "933060925388646666714629523954372807167"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::checked_pow",
    "hash": "160969262599907983752122938388662566714"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::count_ones",
    "hash": "1007689881446527944316157209508829248783"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::from_be",
    "hash": "168971796481283611494154914088315055582"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::from_le",
    "hash": "772599936400399348910009454371031713430"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::highest_one",
    "hash": "105025975062855525185550200910319229660"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::is_negative",
    "hash": "146079145388874070365048832364490893036"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::is_positive",
    "hash": "21411697105026248015738286330411882345"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::isolate_highest_one",
    "hash": "1523817828239325714516779771113520369886"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::isolate_lowest_one",
    "hash": "1793912647661506707512180484534830741320"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::leading_zeros",
    "hash": "1723127097372197112537334846174047553"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::lowest_one",
    "hash": "631190763836708329012824720303133261856"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::overflowing_abs",
    "hash": "54444810619511779797319687895696374236"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::overflowing_neg",
    "hash": "663113122960145035617154365256023181681"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::reverse_bits",
    "hash": "84415718767869215245843955812815422228"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::rotate_left",
    "hash": "4646653207041471684337389835043172025"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::rotate_right",
    "hash": "44078606021561646613569874100785626964"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::saturating_abs",
    "hash": "164628230995982138904343018046038425609"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::saturating_mul",
    "hash": "150263565097053638251731297016483507982"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::saturating_neg",
    "hash": "102855383993269418369715294934530321229"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::saturating_pow",
    "hash": "52218777268301713404045629611985289299"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::swap_bytes",
    "hash": "134947773583797418375238754547337261378"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::to_be",
    "hash": "43349038995971023010491579599868077424"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::to_le",
    "hash": "142886365891220815996679597022227314782"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::trailing_zeros",
    "hash": "171633142147326882306858874270708019932"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::unchecked_mul",
    "hash": "1355127643489168267111306767631771482034"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::unsigned_abs",
    "hash": "32642872089914926625794917580499915899"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::wrapping_abs",
    "hash": "168868174371933334781536855300988020753"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::wrapping_neg",
    "hash": "181113856926460316639826929197641518765"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::abs",
    "hash": "121018711008763505596969693801997707007"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::cast_unsigned",
    "hash": "718595843607221537711750416864216325157"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::checked_abs",
    "hash": "46933000448556841031240059245468406348"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::checked_mul",
    "hash": "98220110978893239022989103815423716055"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::checked_neg",
    "hash": "171880814084460658243762795719919585628"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::checked_pow",
    "hash": "142782087544462279793520285263507835600"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::count_ones",
    "hash": "476932222644028334116561829534255614403"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::from_be",
    "hash": "189499186293880645217091006161195485984"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::from_le",
    "hash": "1645518344656198463913752700221236770298"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::highest_one",
    "hash": "1420664576340259383916917591391089342332"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::is_negative",
    "hash": "8876007839591261638601390361185839281"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::is_positive",
    "hash": "1080732197906252909610871976537236920436"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::isolate_highest_one",
    "hash": "973749371640008285715309016896733715397"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::isolate_lowest_one",
    "hash": "308853927476600793810855293649232973874"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::leading_zeros",
    "hash": "1601543779408808670417289068684663405120"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::lowest_one",
    "hash": "1606243380003230106411338680647247627731"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::overflowing_abs",
    "hash": "125697785090655032845093218505995332736"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::overflowing_neg",
    "hash": "10736012897336933004525748612619149221"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::reverse_bits",
    "hash": "667383681897736040411207992097342654578"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::rotate_left",
    "hash": "187879376825497289016316635854766042065"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::rotate_right",
    "hash": "168277974482574884182442406981241260347"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::saturating_abs",
    "hash": "36030971344837483155508864141273703732"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::saturating_mul",
    "hash": "482461443179995648512924601865765511526"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::saturating_neg",
    "hash": "54479584785685860897049352482900116818"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::saturating_pow",
    "hash": "564398514112364475513920332949903646771"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::swap_bytes",
    "hash": "1003537191529833468911260978003746342092"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::to_be",
    "hash": "1377756444972094374414354151852895083006"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::to_le",
    "hash": "1494891358770551447814868729755397235269"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::trailing_zeros",
    "hash": "105229746513868391117644978154210381951"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::unchecked_mul",
    "hash": "142281931057610557775183510628708527977"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::unsigned_abs",
    "hash": "32141880324446242488160422170266158787"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::wrapping_abs",
    "hash": "923094595705596512288098535904205862"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::wrapping_neg",
    "hash": "9745632940677611426102340164407595461"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::abs",
    "hash": "143712498801953193304790925237873980605"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::cast_unsigned",
    "hash": "819526196665695818313908510363240415102"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::checked_abs",
    "hash": "729520101045470747213342044758070296201"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::checked_mul",
    "hash": "1525518236717412084511638866350230236045"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::checked_neg",
    "hash": "1544647221872183999213334318555642272286"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::checked_pow",
    "hash": "1808579895718004840117913172016662124858"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::count_ones",
    "hash": "14977366216205973617022516749522161246"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::from_be",
    "hash": "30271097531313548117296424782622117641"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::from_le",
    "hash": "1247216006211190976810517889631457851121"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::highest_one",
    "hash": "50002342661843729586256737954178915316"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::is_negative",
    "hash": "1343805444421639277616404365839179104980"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::is_positive",
    "hash": "178972357010891932657226055829983803447"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::isolate_highest_one",
    "hash": "1816902551021193997814072167327376547053"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::isolate_lowest_one",
    "hash": "1265003987823485046016151828743275533806"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::leading_zeros",
    "hash": "118881588087385606606406170230107641755"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::lowest_one",
    "hash": "16881820795273826914536292240165713355"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::overflowing_abs",
    "hash": "84823670076693148597288460742013619710"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::overflowing_neg",
    "hash": "132513173274367121675052419982002824322"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::reverse_bits",
    "hash": "11977054081741593987892677381268764907"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::rotate_left",
    "hash": "699431937982325685116856328146469975010"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::rotate_right",
    "hash": "143020317887298387031641219080360288108"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::saturating_abs",
    "hash": "40810132731791891339946841197068134856"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::saturating_mul",
    "hash": "47967403243688768631779305698585299280"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::saturating_neg",
    "hash": "56609850146945233293009335476930509390"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::saturating_pow",
    "hash": "36480356962029319787772018873625372267"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::swap_bytes",
    "hash": "1435957203593655683016212666008958820333"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::to_be",
    "hash": "102871275122221488835069413520841547656"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::to_le",
    "hash": "87948399228360623989104207296136922423"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::trailing_zeros",
    "hash": "222320113874214973715128051617972102093"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::unchecked_mul",
    "hash": "30628985258251240166514169546724193355"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::unsigned_abs",
    "hash": "1030458183219066013810077915496001445758"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::wrapping_abs",
    "hash": "139809075815731097195115464419909525148"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::wrapping_neg",
    "hash": "1675351909144538116514966609691290646519"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::abs",
    "hash": "1720336925881500203712664286636393511519"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::cast_unsigned",
    "hash": "72371745918887464653317525803339464068"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::checked_abs",
    "hash": "120608213653006126715148458524249272710"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::checked_mul",
    "hash": "515196784754091435710316524973969349276"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::checked_neg",
    "hash": "20373200415497072586981943973658135989"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::checked_pow",
    "hash": "178943548806777543384996837667570064059"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::count_ones",
    "hash": "847865317341782755815236975993921828797"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::from_be",
    "hash": "1229566367976903901711734559769797305402"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::from_le",
    "hash": "80491552450788245774696166555498545877"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::highest_one",
    "hash": "96198677176678357544779526850810474929"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::is_negative",
    "hash": "1561135142953191799570768592384586872"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::is_positive",
    "hash": "1675136334827167934510705656751905960313"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::isolate_highest_one",
    "hash": "284257444466056300210950129023756990718"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::isolate_lowest_one",
    "hash": "952980769070951895216531965591462168846"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::leading_zeros",
    "hash": "263941787361342372713919047113927743927"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::lowest_one",
    "hash": "553638384526087040716822979431290757563"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::overflowing_abs",
    "hash": "85725352096118789512614295317631181291"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::overflowing_neg",
    "hash": "155190775636384083018184754172750936429"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::reverse_bits",
    "hash": "1129275626076462145117589417723829690416"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::rotate_left",
    "hash": "1294372069120393395518252909299326249219"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::rotate_right",
    "hash": "1000834998973376496718415561638079637305"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::saturating_abs",
    "hash": "294368808685313847511068499691045899468"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::saturating_mul",
    "hash": "2948083750283279477549461261849701238"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::saturating_neg",
    "hash": "67273788659706283673023442591500782883"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::saturating_pow",
    "hash": "132943050846921265115438639963037698719"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::swap_bytes",
    "hash": "32851053471937553436604276012990508716"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::to_be",
    "hash": "352870694602533420911736353399490297884"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::to_le",
    "hash": "61286389882166698062820687569719229904"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::trailing_zeros",
    "hash": "82181843213511667638731957127282500342"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::unchecked_mul",
    "hash": "160647902871835898623554298939586397834"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::unsigned_abs",
    "hash": "1791402879273289501817516511732362228004"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::wrapping_abs",
    "hash": "101776855529796112110344358982043660445"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::wrapping_neg",
    "hash": "1832705720763777339416561102327167319899"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::abs",
    "hash": "153657505043519720993975536259915773397"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::cast_unsigned",
    "hash": "860540890278779057012161987202439378765"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::checked_abs",
    "hash": "150789652062851985671553150455561243093"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::checked_mul",
    "hash": "317723235723667365811058285473676688574"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::checked_neg",
    "hash": "1512864382268186961015517909740409737959"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::checked_pow",
    "hash": "1089388446496772791712371363522500636055"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::count_ones",
    "hash": "145370831098887606406895765722874855"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::from_be",
    "hash": "325202397219618542012735031000156561818"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::from_le",
    "hash": "1115867536845889460714307626696650827068"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::highest_one",
    "hash": "365387806201086344216066490868306860234"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::is_negative",
    "hash": "12360842943834657465426037323267226658"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::is_positive",
    "hash": "9661082597646300397155294578524877040"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::isolate_highest_one",
    "hash": "1324247868482018480216255495816114706215"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::isolate_lowest_one",
    "hash": "22808164836252545978406444068012248799"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::leading_zeros",
    "hash": "13873662565776691708911681512968551567"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::lowest_one",
    "hash": "1265444866518587202415810616554976803228"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::overflowing_abs",
    "hash": "635741434826674700416290445966558544312"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::overflowing_neg",
    "hash": "60348993595367222266034145633928232660"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::reverse_bits",
    "hash": "202720831415233356811525707996177562778"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::rotate_left",
    "hash": "31297262065082068485324312306516510510"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::rotate_right",
    "hash": "16116252464342899128495842040253642030"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::saturating_abs",
    "hash": "1840541055076396358311600327168131250968"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::saturating_mul",
    "hash": "29479024087115782741824295756332729301"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::saturating_neg",
    "hash": "1240700500260672706512542055735582941148"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::saturating_pow",
    "hash": "175559846710256447254650608279917770683"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::swap_bytes",
    "hash": "54918766445872386656593685938254659794"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::to_be",
    "hash": "50062007934479816896164317374700529577"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::to_le",
    "hash": "1356365408754630360013006807588825990721"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::trailing_zeros",
    "hash": "136274682462707083215785184595416541249"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::unchecked_mul",
    "hash": "86729292989813402424684043387535159627"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::unsigned_abs",
    "hash": "67021318484420961107544442116761878932"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::wrapping_abs",
    "hash": "705400466797699498914887928537048909657"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::wrapping_neg",
    "hash": "109862791493677436203040881349696814000"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::cast_signed",
    "hash": "1651908188581512813210089097528760518055"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::checked_add",
    "hash": "28522551616374283574121493285344085763"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::checked_mul",
    "hash": "1501211643477304161312442694076259326633"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::checked_next_power_of_two",
    "hash": "577591714537007866412356098479987649766"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::checked_pow",
    "hash": "278970196587062911315955031399241341178"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::count_ones",
    "hash": "1622739219730859519211445565122245716412"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::div_ceil",
    "hash": "40558239782293055227664661775422410391"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::from_be",
    "hash": "48170051739234369473567074463849919241"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::from_le",
    "hash": "40463494571089967183087673886416399263"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::highest_one",
    "hash": "1698645770470711919214671023212132380497"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::ilog10",
    "hash": "304534819715815640710284249928759909406"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::ilog2",
    "hash": "135604424792153684877188191997980443406"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::is_power_of_two",
    "hash": "1671891765888098665112039932428209680440"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::isolate_highest_one",
    "hash": "1163915986662224034111219354964559240790"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::isolate_lowest_one",
    "hash": "86996941609603555941830116411119650660"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::isqrt",
    "hash": "88596137827180005053692937134566447985"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::leading_zeros",
    "hash": "373307632430390614718200683597725388687"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::lowest_one",
    "hash": "133041853937337840542717275620753552731"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::midpoint",
    "hash": "8441382724072782725152649935506835244"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::reverse_bits",
    "hash": "1760021252756128108715163152984588140978"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::rotate_left",
    "hash": "34656001661475556067260432481750787416"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::rotate_right",
    "hash": "1426059222595762366111832237169877643682"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::saturating_add",
    "hash": "1158034989500479616218207375359516107667"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::saturating_mul",
    "hash": "98574703056170610551208144848292482490"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::saturating_pow",
    "hash": "920028115481805842412110543817758663917"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::swap_bytes",
    "hash": "79625330671558857158285858429897633699"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::to_be",
    "hash": "1366517036737925745711401680972140708459"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::to_le",
    "hash": "42613406396451843623726332142183142616"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::trailing_zeros",
    "hash": "175499730691702847876178169759196365119"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::unchecked_add",
    "hash": "1591536122793122037215085000334444106511"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::unchecked_mul",
    "hash": "125138551447039444426278510073278688724"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::cast_signed",
    "hash": "132651533218310242612072482211398561702"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::checked_add",
    "hash": "184328579701097129146604528234603984582"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::checked_mul",
    "hash": "1400844582722177501010542771442604158493"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::checked_next_power_of_two",
    "hash": "206518892174873149312209250184679858856"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::checked_pow",
    "hash": "45026920568625985631698703176603591748"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::count_ones",
    "hash": "1487482240691832632813214796994635795925"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::div_ceil",
    "hash": "6786373107230058783929305355690982528"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::from_be",
    "hash": "33547667492564690018367334069420481064"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::from_le",
    "hash": "409670156365335952304070914705330882"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::highest_one",
    "hash": "86182145371880733848319515059021162873"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::ilog10",
    "hash": "16906962046236246067270044149748063756"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::ilog2",
    "hash": "81911179681771240228082638866776637116"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::is_power_of_two",
    "hash": "593460162751729537911844753310902148646"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::isolate_highest_one",
    "hash": "182154321596682114487991015819618256363"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::isolate_lowest_one",
    "hash": "1097657298979379273212581350909630491085"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::isqrt",
    "hash": "167680649890203158257316980056714765953"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::leading_zeros",
    "hash": "195366786575419744811650464461782000153"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::lowest_one",
    "hash": "1370665293927005894212812737005143839545"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::midpoint",
    "hash": "702313076268124604210428316013367970546"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::reverse_bits",
    "hash": "1394085500688294932616402910288330345194"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::rotate_left",
    "hash": "126565455825612035785773960757460166176"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::rotate_right",
    "hash": "98899868739338029897551674057426891057"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::saturating_add",
    "hash": "629409731189439051512116586801542015225"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::saturating_mul",
    "hash": "157830634020209567003755183454009348258"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::saturating_pow",
    "hash": "742387400388173372511992884795516607888"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::swap_bytes",
    "hash": "733928460595793850311752474118236505384"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::to_be",
    "hash": "57814124951531155812132184565032726595"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::to_le",
    "hash": "95039100704758300736544837745731600672"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::trailing_zeros",
    "hash": "91030792098121816156946524322053247367"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::unchecked_add",
    "hash": "463326743937424311715366290816559391017"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::unchecked_mul",
    "hash": "165329044907503080282643157941806260052"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::cast_signed",
    "hash": "229543093720305518418269856818777031838"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::checked_add",
    "hash": "148573714220798302632626670496162677955"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::checked_mul",
    "hash": "1430847064110710023115959261956936509636"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::checked_next_power_of_two",
    "hash": "111803102743641418110895280448288579715"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::checked_pow",
    "hash": "512659603929542678213537910512906205619"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::count_ones",
    "hash": "814047283857580563216104268123368881339"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::div_ceil",
    "hash": "579026561657809543917940780975013359109"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::from_be",
    "hash": "111607162029556914055463556197773693437"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::from_le",
    "hash": "347326829462071234315545276365112989665"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::highest_one",
    "hash": "187260257580941186711763422256346709242"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::ilog10",
    "hash": "159031969492893890911115956273580598197"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::ilog2",
    "hash": "711331408230061058510143181124449542544"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::is_power_of_two",
    "hash": "108457217075250801307391191681062135284"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::isolate_highest_one",
    "hash": "166113246672070620081987880198456992646"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::isolate_lowest_one",
    "hash": "12507788594848392086847248728219950608"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::isqrt",
    "hash": "148083695477324416599735975937684358777"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::leading_zeros",
    "hash": "8519184813837493931929929104770129184"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::lowest_one",
    "hash": "42800104288322201417826413040852844614"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::midpoint",
    "hash": "101158761923237115228603004722531515973"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::reverse_bits",
    "hash": "46779609801944180417131010571896340824"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::rotate_left",
    "hash": "229214557242499076149877201725135901"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::rotate_right",
    "hash": "122473944076901990342544951644758997462"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::saturating_add",
    "hash": "157176024316431834714840422095289786850"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::saturating_mul",
    "hash": "85827208273405828233844950820947204897"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::saturating_pow",
    "hash": "1736549626473615620516134335706808806253"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::swap_bytes",
    "hash": "138126849853702757685287177826527457318"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::to_be",
    "hash": "89693735821303959679217798278024405095"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::to_le",
    "hash": "135102858058364574674622136878514004769"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::trailing_zeros",
    "hash": "118025403372247076915988679171532009803"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::unchecked_add",
    "hash": "53040630593049924067099324070703815168"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::unchecked_mul",
    "hash": "351855509118834546810636863879705755583"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::cast_signed",
    "hash": "34581367537321644879073480243235729523"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::checked_add",
    "hash": "12198706093374247568241280774106901789"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::checked_mul",
    "hash": "175029242074491328315674810774502526191"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::checked_next_power_of_two",
    "hash": "74218828603197644115945882430015161447"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::checked_pow",
    "hash": "40996434951833917352105908982961930968"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::count_ones",
    "hash": "1010911861760806421116234302619647356438"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::div_ceil",
    "hash": "19471159899707241076714140816266992579"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::from_be",
    "hash": "165241802337264210067105931247257472138"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::from_le",
    "hash": "4709703019823446728676080098090690126"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::highest_one",
    "hash": "141737145230320737538132394312521186023"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::ilog10",
    "hash": "137468982977476621512897785669074927269"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::ilog2",
    "hash": "34213772702428874865800994290925561905"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::is_power_of_two",
    "hash": "1044820054289752951517978811329915185737"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::isolate_highest_one",
    "hash": "172509810627816391912058796902672715441"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::isolate_lowest_one",
    "hash": "737112464301821760811100260564000492298"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::isqrt",
    "hash": "1804310529998988458710438736122908129260"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::leading_zeros",
    "hash": "803108651769351160711710050398115264062"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::lowest_one",
    "hash": "1123079755941681151116961044058994678535"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::midpoint",
    "hash": "1010389557248644196413723575665281423506"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::reverse_bits",
    "hash": "117579390547305514558180681111151710832"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::rotate_left",
    "hash": "9097711589645305613488074599628451013"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::rotate_right",
    "hash": "433858304985229601411712078340120656982"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::saturating_add",
    "hash": "71670367331655845832641220131543565789"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::saturating_mul",
    "hash": "1450178446548142664713227082979905978624"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::saturating_pow",
    "hash": "1310892924779496330213659214529991593367"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::swap_bytes",
    "hash": "149767693509049873013813623959027565519"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::to_be",
    "hash": "24679541294871910875798693903941567545"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::to_le",
    "hash": "151750948883653445069482520496269643290"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::trailing_zeros",
    "hash": "16961208522228807511332603305895287516"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::unchecked_add",
    "hash": "41061254808486038245570368327563268561"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::unchecked_mul",
    "hash": "16675375379353455594693170845344228579"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::cast_signed",
    "hash": "110964057166091063704785149282328265842"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::checked_add",
    "hash": "38547297223799755585456611532823717423"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::checked_mul",
    "hash": "1708786992822940340517112544658632142747"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::checked_next_power_of_two",
    "hash": "5163001506978819944580602634460064682"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::checked_pow",
    "hash": "1544524139337816624414172156773592764494"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::count_ones",
    "hash": "97447883026526262168433150949856530531"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::div_ceil",
    "hash": "90761872894961068425470022230443979376"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::from_be",
    "hash": "55342320780661812696846814369451840986"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::from_le",
    "hash": "748202891911476891115211695327190239994"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::highest_one",
    "hash": "81509612116561099984518143418450242532"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::ilog10",
    "hash": "153924797365075118633066216816097256834"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::ilog2",
    "hash": "120757513115249882321632795805126813021"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::is_power_of_two",
    "hash": "165051422174692560104746339420974414922"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::isolate_highest_one",
    "hash": "1262288838187150027310843915971907929687"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::isolate_lowest_one",
    "hash": "97532951581810657412979055946820229560"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::isqrt",
    "hash": "24510055555910228202969113545796035752"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::leading_zeros",
    "hash": "112470404947349979418012764326826349563"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::lowest_one",
    "hash": "693404620046866388711423802947131869289"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::midpoint",
    "hash": "792203395604517793214558457315433535103"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::reverse_bits",
    "hash": "1489909875591000727712728756425104591970"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::rotate_left",
    "hash": "1584387597414348350513698721550583429282"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::rotate_right",
    "hash": "121835395208216249615426731171108275600"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::saturating_add",
    "hash": "280726030277408106818052837776783100804"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::saturating_mul",
    "hash": "184348381295655911782511172286429566867"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::saturating_pow",
    "hash": "488250974868210941613016679232732290720"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::swap_bytes",
    "hash": "127554018950407609071624440178224144791"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::to_be",
    "hash": "159153689042245465484175878668413854262"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::to_le",
    "hash": "39917005167761096507420533656655566790"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::trailing_zeros",
    "hash": "997452321461119147514825230489337533407"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::unchecked_add",
    "hash": "638738386809117143717312360578773038944"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::unchecked_mul",
    "hash": "165608392963678696654265848395392586309"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::cast_signed",
    "hash": "954291948390201876816690699510989046863"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::checked_add",
    "hash": "583413489418054895114260459727315858291"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::checked_mul",
    "hash": "35053726641243174045384981258444838113"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::checked_next_power_of_two",
    "hash": "371604641371493097318053188215999439822"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::checked_pow",
    "hash": "2635302625524890966353357176150741581"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::count_ones",
    "hash": "125401381876947534039073035856765652425"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::div_ceil",
    "hash": "300996157904900187817368964704697007195"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::from_be",
    "hash": "787981901961095988116244241128630607632"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::from_le",
    "hash": "30248095838592656510594148995739842249"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::highest_one",
    "hash": "59266472146252904412359515551796949434"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::ilog10",
    "hash": "72490371355961874097123965084721395404"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::ilog2",
    "hash": "82673335129552629317708046730690637448"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::is_power_of_two",
    "hash": "179135857728417645416847982848307114718"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::isolate_highest_one",
    "hash": "1119595594573365943410817489134660545178"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::isolate_lowest_one",
    "hash": "1776157203461748256168624173996778089"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::isqrt",
    "hash": "132768709280208543918066990254423357648"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::leading_zeros",
    "hash": "63508941524203719206996976005100287210"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::lowest_one",
    "hash": "428728415277352597313604575038628852063"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::midpoint",
    "hash": "96140728345072470595929049319156756239"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::reverse_bits",
    "hash": "119450448636696544047007487298458922196"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::rotate_left",
    "hash": "678293121295076035110164343113645946268"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::rotate_right",
    "hash": "179885517917707869787016671311355859254"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::saturating_add",
    "hash": "45858961810962399992719047664558655797"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::saturating_mul",
    "hash": "141669172723261914392501753696277082122"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::saturating_pow",
    "hash": "40700857954762936711397357055282599421"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::swap_bytes",
    "hash": "47393686207716679511537755375168998261"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::to_be",
    "hash": "112315551473824671901143027207377930226"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::to_le",
    "hash": "823615134796686374611298494165378384373"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::trailing_zeros",
    "hash": "108786397313019465601002585053914768444"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::unchecked_add",
    "hash": "123004807526418862208594457169305728743"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::unchecked_mul",
    "hash": "110384024977679307649118764888088179368"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i128_edge_neg",
    "hash": "189603483199027921915393406781895864468",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i128_edge_pos",
    "hash": "1203514165734211219418176416533010278578",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i128_large_neg",
    "hash": "855936953587078656114173392677110415690",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i128_large_pos",
    "hash": "639706035937239799610781025162776492652",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i128_small",
    "hash": "1830037664512613237314342091583561888906",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i32_edge_neg",
    "hash": "1259322870273502053715115850276329986632",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i32_edge_pos",
    "hash": "71056736755064547641792532335429737833",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i32_large_neg",
    "hash": "118530325670160865233353601072142241948",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i32_large_pos",
    "hash": "8921632994654213294454124183029455485",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i32_small",
    "hash": "657215022790689765315520202323725664727",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i64_edge_neg",
    "hash": "21815972017058286383563992922155344594",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i64_edge_pos",
    "hash": "1513822831274465356015138317814742249634",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i64_large_neg",
    "hash": "1414090174600231498618376956415716319347",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i64_large_pos",
    "hash": "48541687179601301655548906983049609352",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i64_small",
    "hash": "1452511747417334050028934675428579912",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_isize_edge_neg",
    "hash": "50071711059434048071465249406947005387",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_isize_edge_pos",
    "hash": "1416006322112068581910541908280641157146",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_isize_large_neg",
    "hash": "286158145863026626817587526725781597101",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_isize_large_pos",
    "hash": "7445971426300928151862309864418323526",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_isize_small",
    "hash": "936202327803345726413481671875696646377",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u128_edge",
    "hash": "109827752555598610727240999467298114628",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u128_large",
    "hash": "51933859936998058587385474454556410900",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u128_small",
    "hash": "15781816534621686378396762060630730402",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u32_edge",
    "hash": "170112485413136411743299914596383509491",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u32_large",
    "hash": "157852359257406474392472231794689993920",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u32_small",
    "hash": "87478872013696073743356578581319822497",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u64_edge",
    "hash": "5450447769371543457674131558856469121",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u64_large",
    "hash": "1689933606374458428715400382398728849120",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u64_small",
    "hash": "781320421400824986614379053133207965177",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_usize_edge",
    "hash": "49400008960816862581767183373590851815",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_usize_large",
    "hash": "109338667739023865776409795929244615896",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_usize_small",
    "hash": "123228673541354682969656411149331760880",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_128",
    "hash": "978295691529972615710777105771473784193",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_16",
    "hash": "148521227385928977854949383196325023275",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_32",
    "hash": "1145870437337246005016720553993505737854",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_64",
    "hash": "772272989801635651810226858123665996364",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_i8",
    "hash": "1363551677989618764213199786058720677202",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_isize",
    "hash": "6287460999193683614637808761680806141",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_u128",
    "hash": "638162007188815012310501740795034625527",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_u16",
    "hash": "465264439809250720314966166781016492334",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_u32",
    "hash": "1437306861033862795913160065099207500055",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_u64",
    "hash": "36898902459745881086201580856370610350",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_u8",
    "hash": "529038900862472448614209277263510152201",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_usize",
    "hash": "40190814296089539907264742264715205545",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_128",
    "hash": "2096152872340196991139797838705336618",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_16",
    "hash": "1516581429653441056412679273251509110280",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_32",
    "hash": "176048671937233592502882171011150360094",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_64",
    "hash": "12133500521057328717429606056245672151",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_i8",
    "hash": "111472461963443071413741187336624452194",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_isize",
    "hash": "526648440799983381415148840789894895676",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_u128",
    "hash": "64783334219660446077720823894486904125",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_u16",
    "hash": "167169132798539458362815820444062178918",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_u32",
    "hash": "1385451632486911145711980961573356756253",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_u64",
    "hash": "820691958240120011511949793389494687466",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_u8",
    "hash": "176568504412158112481067814985869547953",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_usize",
    "hash": "145957964533382946248195308212081371566",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_i128",
    "hash": "433846233727625957518333680386655208196",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_i16",
    "hash": "1588918479777377761511541463727692780943",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_i32",
    "hash": "58763770892653697591450906592803667271",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_i64",
    "hash": "111699851436063087216332335628790846145",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_i8",
    "hash": "1480863019375749954610431919957236498567",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_isize",
    "hash": "5163554340154637132144927911319255441",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_u128",
    "hash": "41014155113201264310220175318984427483",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_u16",
    "hash": "61186031386950123914407122427512487395",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_u32",
    "hash": "40219519316542203159978383842786600303",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_u64",
    "hash": "1037533731165525016017738260254014485885",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_u8",
    "hash": "143890643928619152386582719290793902459",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_usize",
    "hash": "1269523272168021231315909973562941075527",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_i128",
    "hash": "914689153938437320892870126028664398",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_i16",
    "hash": "1810366007005092970312498581151830877499",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_i32",
    "hash": "943081337850089776816593901224853516528",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_i64",
    "hash": "11028896280341833502805092072897428529",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_i8",
    "hash": "1169326130978060877913072685300282891579",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_isize",
    "hash": "70045512948989007511882379779217046989",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_u128",
    "hash": "876190431336195095217253076845020688349",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_u16",
    "hash": "364900448114200566416808355689112320546",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_u32",
    "hash": "38445675184968450014948800187666127813",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_u64",
    "hash": "40572586377044279112045628462450933168",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_u8",
    "hash": "7578806577025381966449093594442148720",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_usize",
    "hash": "221499258913740633311331170326522676644",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_i128",
    "hash": "1688470677847394664115785622605415745586",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_i16",
    "hash": "17192073611986051654176760013207331451",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_i32",
    "hash": "122717505136635367731181465995291569644",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_i64",
    "hash": "183693185292491038955088959024069041229",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_i8",
    "hash": "62379603888527556857010123629183336447",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_isize",
    "hash": "1050872999595700449712490649532210135295",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_u128",
    "hash": "1046143822979047377716252160397691562416",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_u16",
    "hash": "1671613465996985972615732896288931716535",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_u32",
    "hash": "1844097684735696196915276681469700166583",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_u64",
    "hash": "120491386160550325323277635227403444837",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_u8",
    "hash": "71037317680949706992815723264605371593",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_usize",
    "hash": "1139649629437915013410160240048636875920",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_i128",
    "hash": "74314497467502229278328685264811654534",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_i16",
    "hash": "54141096722457674949819195553185604631",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_i32",
    "hash": "619137530099377701716587538608607947577",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_i64",
    "hash": "148080742852250417512333166221626769085",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_i8",
    "hash": "916661957844428547711378286308117074817",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_isize",
    "hash": "720542486258543101912933730116019325108",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_u128",
    "hash": "145426091552482389733326105608142479450",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_u16",
    "hash": "7803283403561438242537976701416006098",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_u32",
    "hash": "64807897293011220501632716140509631310",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_u64",
    "hash": "12017335598515125920772958819696542251",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_u8",
    "hash": "87330940046732133097170865434988557779",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_usize",
    "hash": "722969831619354407415950930416731123408",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_mul_for_i16",
    "hash": "445236855840858452417616499588194216247",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_mul_for_i8",
    "hash": "667573924714879711511853047859974733654",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_mul_for_u16",
    "hash": "1782388659531459028816698092226574347493",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_mul_for_u8",
    "hash": "216034084417119326610523823055315303376",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_128",
    "hash": "805145977795735074516306880321097974434",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_16",
    "hash": "32094761970704021931719020056251299641",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_32",
    "hash": "395994644281978768810680776831321897252",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_64",
    "hash": "138066586257967660938986140733959534639",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_i8",
    "hash": "15579414236798561794998135810148132280",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_isize",
    "hash": "16259504769628895916516428020459992687",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_u128",
    "hash": "1327265872421780932412220965881542219685",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_u16",
    "hash": "1344876832478981024713537805930585442385",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_u32",
    "hash": "284056394954523328912931644401395494655",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_u64",
    "hash": "147272766308520914344001814144070487849",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_u8",
    "hash": "750347018674327123817555117183934743496",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_usize",
    "hash": "158777375578944169176233613817279446392",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_unchecked_add_for_u128",
    "hash": "181606652894110098593822958729907489974",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_unchecked_add_for_u16",
    "hash": "136055768202501593111460976244937102920",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_unchecked_add_for_u32",
    "hash": "107165012964950295873393099721831232501",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_unchecked_add_for_u64",
    "hash": "1667938544609855556916837822075801414265",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_unchecked_add_for_u8",
    "hash": "397028346409227746314299909830630244561",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_unchecked_add_for_usize",
    "hash": "38607290989460223442082396254214405270",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/overflow_panic.rs",
    "func": "num::overflow_panic::add",
    "hash": "270094252999170086311546006733242136440"
  },
  {
    "crate": "core",
    "file": "core/src/num/overflow_panic.rs",
    "func": "num::overflow_panic::div",
    "hash": "67963160296914708992676158558620209435"
  },
  {
    "crate": "core",
    "file": "core/src/num/overflow_panic.rs",
    "func": "num::overflow_panic::mul",
    "hash": "47545376251115509438487578943349168811"
  },
  {
    "crate": "core",
    "file": "core/src/num/overflow_panic.rs",
    "func": "num::overflow_panic::neg",
    "hash": "95725412220846309792794332117021318440"
  },
  {
    "crate": "core",
    "file": "core/src/num/overflow_panic.rs",
    "func": "num::overflow_panic::rem",
    "hash": "576888632633011791815712311345027209426"
  },
  {
    "crate": "core",
    "file": "core/src/num/overflow_panic.rs",
    "func": "num::overflow_panic::shl",
    "hash": "290609851857017803814021177754696512679"
  },
  {
    "crate": "core",
    "file": "core/src/num/overflow_panic.rs",
    "func": "num::overflow_panic::shr",
    "hash": "13595682241019900114812996569480761291"
  },
  {
    "crate": "core",
    "file": "core/src/num/overflow_panic.rs",
    "func": "num::overflow_panic::sub",
    "hash": "1639242911298951059017350988889133653325"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Add>::add",
    "hash": "90291995994422085910109812432909843615"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::AddAssign<i128>>::add_assign",
    "hash": "1602995209435852296010015811512982219196"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::AddAssign>::add_assign",
    "hash": "18953083943124160013722967587935643607"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Div>::div",
    "hash": "7232287601384088360802624628461609980"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::DivAssign<i128>>::div_assign",
    "hash": "598530329550280016814599112236825633613"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::DivAssign>::div_assign",
    "hash": "153793495010005002216658256569288858982"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Mul>::mul",
    "hash": "157249069775884061862379461603068447766"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::MulAssign<i128>>::mul_assign",
    "hash": "1731417198998701903217369040132235503872"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::MulAssign>::mul_assign",
    "hash": "78442067309110605268732774740548541268"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Neg>::neg",
    "hash": "445243229252051000713127091668306940765"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Rem>::rem",
    "hash": "725661364241764510414436654182374033710"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::RemAssign<i128>>::rem_assign",
    "hash": "6896775107684531111165470572532221766"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::RemAssign>::rem_assign",
    "hash": "576059748821367451310239166158572681822"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Sub>::sub",
    "hash": "165806507276752694538880585519472508879"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::SubAssign<i128>>::sub_assign",
    "hash": "94341860153519075516473763693301356937"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::SubAssign>::sub_assign",
    "hash": "549538902760713017510741783570466643338"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitAnd>::bitand",
    "hash": "112689637894070681818041031796651266578"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitAndAssign<i128>>::bitand_assign",
    "hash": "180839445639474579154187947936936909801"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "1005065435463336548316671876825414129870"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitOr>::bitor",
    "hash": "664471231493710923716024452433039300926"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitOrAssign<i128>>::bitor_assign",
    "hash": "1366151615913774976816784035783108792323"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "317389162578398910614380376071048521018"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitXor>::bitxor",
    "hash": "4657223981787872098926240321606353643"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitXorAssign<i128>>::bitxor_assign",
    "hash": "1174689227565116327915030858865663094055"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "76418697306163953415481981516508561063"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::Not>::not",
    "hash": "14257280226559481513428087224111938062"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Add>::add",
    "hash": "17563505732370319020600343782317839377"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::AddAssign<i16>>::add_assign",
    "hash": "11493284801373805047433292502276260205"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::AddAssign>::add_assign",
    "hash": "385840475915946408718328962869289258504"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Div>::div",
    "hash": "133468919000895350859339356301291843903"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::DivAssign<i16>>::div_assign",
    "hash": "12362361758671719011351011650980322336"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::DivAssign>::div_assign",
    "hash": "81743960091629800951198225650682679542"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Mul>::mul",
    "hash": "733721485309033970915225946890727460707"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::MulAssign<i16>>::mul_assign",
    "hash": "8741838890632935238351728900271500710"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::MulAssign>::mul_assign",
    "hash": "154993140404616767694158148119436139285"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Neg>::neg",
    "hash": "670372671721937445813289164843665528588"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Rem>::rem",
    "hash": "580803229855345075217178743595409535037"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::RemAssign<i16>>::rem_assign",
    "hash": "1503122116294145699215710016138118307815"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::RemAssign>::rem_assign",
    "hash": "1442423546811912477314312439775290835910"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Sub>::sub",
    "hash": "1031997256441033038812131043068330503823"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::SubAssign<i16>>::sub_assign",
    "hash": "175852840880437954783400862060400438836"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::SubAssign>::sub_assign",
    "hash": "1250974106028317770116769682330451130581"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitAnd>::bitand",
    "hash": "68676909200611059608436265242964053191"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitAndAssign<i16>>::bitand_assign",
    "hash": "124632122638995403376991625114027808200"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "86068400220750383925586692112881039873"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitOr>::bitor",
    "hash": "6560618631039101501879811885450006311"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitOrAssign<i16>>::bitor_assign",
    "hash": "1002239686355854454312468351174326473904"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "1494909273996762514711006700662495288950"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitXor>::bitxor",
    "hash": "28531773803664160447372708647914665818"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitXorAssign<i16>>::bitxor_assign",
    "hash": "173846927512796458866169091708923653226"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "604690279249440870916610422974482177935"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::Not>::not",
    "hash": "33150922616999120712296583629028864124"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Add>::add",
    "hash": "30674999665251467836009852769532291393"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::AddAssign<i32>>::add_assign",
    "hash": "183129105450514097516785271278898816547"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::AddAssign>::add_assign",
    "hash": "53147090866729009931964612847264222084"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Div>::div",
    "hash": "69217492860785775714073368830487779335"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::DivAssign<i32>>::div_assign",
    "hash": "29105511489843395651194187523350749501"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::DivAssign>::div_assign",
    "hash": "1017600823141894842816689926871209833411"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Mul>::mul",
    "hash": "12968024606003081384662760956369494087"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::MulAssign<i32>>::mul_assign",
    "hash": "53363345508309082407505165936823045855"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::MulAssign>::mul_assign",
    "hash": "86612168376732786437035857622446950157"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Neg>::neg",
    "hash": "158921160184368195295483289310776285575"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Rem>::rem",
    "hash": "81361426740406679887776825433487098470"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::RemAssign<i32>>::rem_assign",
    "hash": "114915236949282391261100920593488524299"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::RemAssign>::rem_assign",
    "hash": "994879733343081357818212003147712407814"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Sub>::sub",
    "hash": "116107386502149161863765945641903459751"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::SubAssign<i32>>::sub_assign",
    "hash": "9254920899183827706523299719504254487"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::SubAssign>::sub_assign",
    "hash": "74141061215640865516659634496318084094"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitAnd>::bitand",
    "hash": "1223943357166249719511439391157780756867"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitAndAssign<i32>>::bitand_assign",
    "hash": "115650805876771533110374333478716684110"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "1669234676955152556815099993377148032931"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitOr>::bitor",
    "hash": "1158791350173689789312889677248124050530"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitOrAssign<i32>>::bitor_assign",
    "hash": "36179617101540939815781068824402466904"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "261625584777147881917998995785488552613"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitXor>::bitxor",
    "hash": "8317326120228508895951765230472097020"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitXorAssign<i32>>::bitxor_assign",
    "hash": "14737205037549796182155873303204857044"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "695052899189180491314749928134345487372"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::Not>::not",
    "hash": "7989041938924995513679076086127169568"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Add>::add",
    "hash": "53354394552154518866368168183247678399"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::AddAssign<i64>>::add_assign",
    "hash": "113924869178613051816996108825473336601"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::AddAssign>::add_assign",
    "hash": "6979720224630057217672889614993510801"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Div>::div",
    "hash": "146753356854636413401089050162622898348"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::DivAssign<i64>>::div_assign",
    "hash": "609344994525113898117999338635712212018"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::DivAssign>::div_assign",
    "hash": "932973675240560465115551616458309775337"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Mul>::mul",
    "hash": "110183025507512593668589115605206644496"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::MulAssign<i64>>::mul_assign",
    "hash": "260406052221022687616865809551587945541"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::MulAssign>::mul_assign",
    "hash": "97446081190217487313566469517718065965"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Neg>::neg",
    "hash": "1175097740303022368412093104621973423569"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Rem>::rem",
    "hash": "123993534919452612984210207038206837949"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::RemAssign<i64>>::rem_assign",
    "hash": "17797570851676764118730219740443324311"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::RemAssign>::rem_assign",
    "hash": "538778232351159239417920821991696057325"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Sub>::sub",
    "hash": "1547607285627771455914342574894298409827"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::SubAssign<i64>>::sub_assign",
    "hash": "75046312499930167885712854278779688605"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::SubAssign>::sub_assign",
    "hash": "16945719312049934369043179003716032400"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitAnd>::bitand",
    "hash": "430220839640623946012514903758435134269"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitAndAssign<i64>>::bitand_assign",
    "hash": "50050139546550781962330129991119971012"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "1171904650851201155812484701192591947653"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitOr>::bitor",
    "hash": "1741028789520803688012772097878559775953"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitOrAssign<i64>>::bitor_assign",
    "hash": "542753133195547367314919090959395449144"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "1799758100981330944111454993527481801383"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitXor>::bitxor",
    "hash": "119676810172087891112184671145004506997"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitXorAssign<i64>>::bitxor_assign",
    "hash": "125397691825425483567149667072803449607"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "6882678327024598078545084045736118991"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::Not>::not",
    "hash": "85716764613433684109592385405652622884"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Add>::add",
    "hash": "74528364880681251547197312192751302026"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::AddAssign<i8>>::add_assign",
    "hash": "77325196524599294301053012390298017924"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::AddAssign>::add_assign",
    "hash": "87062004706989147689570141737712244777"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Div>::div",
    "hash": "1537924283155293282313991285929782074829"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::DivAssign<i8>>::div_assign",
    "hash": "108737763043592779982991363728968266250"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::DivAssign>::div_assign",
    "hash": "4133674674923068664554683124691321209"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Mul>::mul",
    "hash": "1251722868273148255017051326242617396727"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::MulAssign<i8>>::mul_assign",
    "hash": "990393430094946464110512404890236375533"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::MulAssign>::mul_assign",
    "hash": "143237231865797348807819555317008946219"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Neg>::neg",
    "hash": "96574058796880847353650486858025482454"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Rem>::rem",
    "hash": "172483105545072792588808385969065140283"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::RemAssign<i8>>::rem_assign",
    "hash": "23924202910612669977018890021429912121"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::RemAssign>::rem_assign",
    "hash": "987986237686540618210739611997649398496"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Sub>::sub",
    "hash": "153967139748972897004967959008616332430"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::SubAssign<i8>>::sub_assign",
    "hash": "38635441993004731709151611217372595041"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::SubAssign>::sub_assign",
    "hash": "68648438220949508536868050393333222747"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitAnd>::bitand",
    "hash": "120040541723310922663127744680371675733"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitAndAssign<i8>>::bitand_assign",
    "hash": "174373231941977968551294842243898210942"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "182308689838162974274636082998632962174"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitOr>::bitor",
    "hash": "173310288998783227841199457416240009874"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitOrAssign<i8>>::bitor_assign",
    "hash": "24333261465511325728677826511355662508"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "88884506165820089094039140593592411535"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitXor>::bitxor",
    "hash": "121938285601185420416720818326313408232"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitXorAssign<i8>>::bitxor_assign",
    "hash": "99253523688733029893035320602279011524"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "954714291666907708411926846888241435558"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::Not>::not",
    "hash": "1260245880560005280514854108128030361810"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Add>::add",
    "hash": "80693245114366188794883467742128115104"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::AddAssign<isize>>::add_assign",
    "hash": "72306354221086147211426869056554758388"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::AddAssign>::add_assign",
    "hash": "358987977635394710411080334334854657669"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Div>::div",
    "hash": "510922139570675598514483579869075379238"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::DivAssign<isize>>::div_assign",
    "hash": "173978165482539945996300256284424640743"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::DivAssign>::div_assign",
    "hash": "1155611431719014245013915800809330045433"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Mul>::mul",
    "hash": "1450082116148286415211642837996633287427"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::MulAssign<isize>>::mul_assign",
    "hash": "30234867936605990312083790934856758331"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::MulAssign>::mul_assign",
    "hash": "284773330449383274014394947269842131779"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Neg>::neg",
    "hash": "170081246083664762826216902077801713615"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Rem>::rem",
    "hash": "1170205526293737731315496598348217917058"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::RemAssign<isize>>::rem_assign",
    "hash": "78736189317852783855634457757635013135"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::RemAssign>::rem_assign",
    "hash": "160771921491885592984088129821889178365"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Sub>::sub",
    "hash": "30017027250987412795739195690973288837"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::SubAssign<isize>>::sub_assign",
    "hash": "87779409188649382801754779778632461132"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::SubAssign>::sub_assign",
    "hash": "144733613662974735069954265717511613656"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitAnd>::bitand",
    "hash": "1681421942559540802811198372990989621743"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitAndAssign<isize>>::bitand_assign",
    "hash": "106984733469549814414434476623475354720"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "145133691450986387222953063890009874487"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitOr>::bitor",
    "hash": "59336292429018908667541546552253011925"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitOrAssign<isize>>::bitor_assign",
    "hash": "118098829142139524968843479829962154292"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "158297165152863298972507755748784956070"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitXor>::bitxor",
    "hash": "852099184564305229012673667899996753633"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitXorAssign<isize>>::bitxor_assign",
    "hash": "76507426608070709785486875262340311447"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "68636731808608660496849657709955460470"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::Not>::not",
    "hash": "26089937717852784501309896552897113353"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Add>::add",
    "hash": "234551230800983593610945803739337016698"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::AddAssign<u128>>::add_assign",
    "hash": "181757025177007412175795167028333192139"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::AddAssign>::add_assign",
    "hash": "1231417624472126165311342584964825055586"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Div>::div",
    "hash": "163254915816287561703471497864611290889"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::DivAssign<u128>>::div_assign",
    "hash": "60815028260809109919470775433176279347"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::DivAssign>::div_assign",
    "hash": "83132569256305096609751087027761303395"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Mul>::mul",
    "hash": "279784357533583805811055419544344856615"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::MulAssign<u128>>::mul_assign",
    "hash": "51238386499132723878447499927502822466"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::MulAssign>::mul_assign",
    "hash": "909069028627207593813389675538792088562"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Rem>::rem",
    "hash": "139832724426137660029775100117688138452"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::RemAssign<u128>>::rem_assign",
    "hash": "257801234077984269810686821743867930904"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::RemAssign>::rem_assign",
    "hash": "1688056261265940004711326914049521530164"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Sub>::sub",
    "hash": "807587378701949977916587151995013247058"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::SubAssign<u128>>::sub_assign",
    "hash": "679518115452921402114472219543643336559"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::SubAssign>::sub_assign",
    "hash": "127792349037461837383324341244785910953"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitAnd>::bitand",
    "hash": "155268622902291845301382179035528416524"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitAndAssign<u128>>::bitand_assign",
    "hash": "93412924435771172589232459633473541683"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "1047295449275823059114580056154942427979"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitOr>::bitor",
    "hash": "507508192995177284717897930319471898684"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitOrAssign<u128>>::bitor_assign",
    "hash": "174492083799701036944062127174462857160"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "85726912377228827726498562405658830106"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitXor>::bitxor",
    "hash": "121551437440505361909003451077036139052"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitXorAssign<u128>>::bitxor_assign",
    "hash": "110273315594138898516834316082758270784"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "1829415594370468598410457374297872098075"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::Not>::not",
    "hash": "70205176250159643987317936465420660485"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Add>::add",
    "hash": "593329724066673784811115768739399099262"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::AddAssign<u16>>::add_assign",
    "hash": "1035739778597991341910085159091294638708"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::AddAssign>::add_assign",
    "hash": "982952548238859050513324438457349168641"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Div>::div",
    "hash": "30145250808290845568727730287823898709"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::DivAssign<u16>>::div_assign",
    "hash": "1420452290023756961012536026909672599433"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::DivAssign>::div_assign",
    "hash": "87895106111736734253146220222080519384"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Mul>::mul",
    "hash": "1818325127143997620311514237805325822472"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::MulAssign<u16>>::mul_assign",
    "hash": "355080675647194143717376222366058250100"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::MulAssign>::mul_assign",
    "hash": "857429490712387144513354744071631336940"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Rem>::rem",
    "hash": "451679007339863275528469281380536542"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::RemAssign<u16>>::rem_assign",
    "hash": "18700013504608206687000702938552987726"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::RemAssign>::rem_assign",
    "hash": "162831086167417885765689435798307101969"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Sub>::sub",
    "hash": "7961728079935236946900354149608033625"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::SubAssign<u16>>::sub_assign",
    "hash": "153988883158889321911585327643254184115"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::SubAssign>::sub_assign",
    "hash": "152238115979316605315036078940420740968"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitAnd>::bitand",
    "hash": "10272008846802581161102549298531430492"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitAndAssign<u16>>::bitand_assign",
    "hash": "64003400602911569221791713286224017456"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "4290741303233683087238193701091571869"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitOr>::bitor",
    "hash": "1530018892867449426617084924665345281070"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitOrAssign<u16>>::bitor_assign",
    "hash": "1516695620063805844414429894593739768966"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "255908697593386542014673942873535117473"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitXor>::bitxor",
    "hash": "27423942645237754715771983247097115628"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitXorAssign<u16>>::bitxor_assign",
    "hash": "8240908548424509372475176213480472574"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "128563967089040133546156076871387026186"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::Not>::not",
    "hash": "807007526343701159412307444626528767962"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Add>::add",
    "hash": "164511108722398562744432105677473879440"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::AddAssign<u32>>::add_assign",
    "hash": "142754720759426179913711120470390157859"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::AddAssign>::add_assign",
    "hash": "45821538520720899859525732107447177194"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Div>::div",
    "hash": "1768290996399640668315573244635150906009"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::DivAssign<u32>>::div_assign",
    "hash": "711700418134143320912912274169962435112"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::DivAssign>::div_assign",
    "hash": "285595939815712303514426920939267426664"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Mul>::mul",
    "hash": "471068627960501694910972403490940731553"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::MulAssign<u32>>::mul_assign",
    "hash": "29093346844629704216067813776798773189"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::MulAssign>::mul_assign",
    "hash": "95966840441387650343447447970538076543"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Rem>::rem",
    "hash": "141757913438153618097978561807691065179"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::RemAssign<u32>>::rem_assign",
    "hash": "1366193571432269117212574334491650306094"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::RemAssign>::rem_assign",
    "hash": "130626355683335040839557240605155052925"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Sub>::sub",
    "hash": "43446467912897758122498955373066661879"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::SubAssign<u32>>::sub_assign",
    "hash": "11390971150052018547645118875902022802"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::SubAssign>::sub_assign",
    "hash": "99243530017403292119590897550161621432"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitAnd>::bitand",
    "hash": "25752917381466925773801792006642275012"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitAndAssign<u32>>::bitand_assign",
    "hash": "98419484071621839057372624187133492782"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "95184464776930850016714763221879982964"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitOr>::bitor",
    "hash": "1143250464226404546614432804101429114229"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitOrAssign<u32>>::bitor_assign",
    "hash": "116127695462832509721552666664932047903"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "183792877715393365405145814222811612425"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitXor>::bitxor",
    "hash": "784762428489493981411789901870509832084"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitXorAssign<u32>>::bitxor_assign",
    "hash": "948904711235517571818343408157498966477"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "111780486176906605782838118976222976302"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::Not>::not",
    "hash": "869701641900912846813522861207625951071"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Add>::add",
    "hash": "21501071217436385971940468826412938264"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::AddAssign<u64>>::add_assign",
    "hash": "112312374165994407203423379123555653956"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::AddAssign>::add_assign",
    "hash": "1008013127239948669210950662368924211836"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Div>::div",
    "hash": "48700382737611995943100276984310687979"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::DivAssign<u64>>::div_assign",
    "hash": "760591872700831459413169153425592166367"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::DivAssign>::div_assign",
    "hash": "1467673173314003805014426264152473114285"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Mul>::mul",
    "hash": "53721850441014888471561276510490761259"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::MulAssign<u64>>::mul_assign",
    "hash": "159658580643281037745808600616647702421"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::MulAssign>::mul_assign",
    "hash": "47924498884826845549475019002264867702"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Rem>::rem",
    "hash": "181896339847837003269108097827324098801"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::RemAssign<u64>>::rem_assign",
    "hash": "1786106636400869976214939078740743674350"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::RemAssign>::rem_assign",
    "hash": "97428999503138003826656324328187205843"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Sub>::sub",
    "hash": "751749780494428020312959628967627573211"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::SubAssign<u64>>::sub_assign",
    "hash": "78120218396812647117151465011154325168"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::SubAssign>::sub_assign",
    "hash": "283835511840025085813119931586031723383"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitAnd>::bitand",
    "hash": "2632542189670294749259235337220455475"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitAndAssign<u64>>::bitand_assign",
    "hash": "870214965699906884513864826807875977676"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "1318634895874022560515900383270611561871"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitOr>::bitor",
    "hash": "282393639880221679516805130768259263506"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitOrAssign<u64>>::bitor_assign",
    "hash": "1596726219066677653813069076095377071381"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "1194991622686683956413056477898491306729"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitXor>::bitxor",
    "hash": "42710823871216706123915705707730942050"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitXorAssign<u64>>::bitxor_assign",
    "hash": "155654588307046209917144994360503331911"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "9457876467421803761254343461863001784"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::Not>::not",
    "hash": "98729443335932235149830204225948975263"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Add>::add",
    "hash": "63986353482349839752855209426462382837"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::AddAssign<u8>>::add_assign",
    "hash": "66786021271514062417083860771262710483"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::AddAssign>::add_assign",
    "hash": "1564377469173649406316070202780736515468"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Div>::div",
    "hash": "753415038565770889010652683081504920647"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::DivAssign<u8>>::div_assign",
    "hash": "1579142097667603632611665568238878300472"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::DivAssign>::div_assign",
    "hash": "258554607074577152816398687040078653347"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Mul>::mul",
    "hash": "683967023510291004612110935427241334435"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::MulAssign<u8>>::mul_assign",
    "hash": "81232752609311093657000499515831306173"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::MulAssign>::mul_assign",
    "hash": "77004155339085455332302653827514681725"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Rem>::rem",
    "hash": "55434287195254603149248703027091948921"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::RemAssign<u8>>::rem_assign",
    "hash": "991367692842630010516507822500629818116"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::RemAssign>::rem_assign",
    "hash": "45724823048140037706254715273923552395"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Sub>::sub",
    "hash": "1333244236478035211615546176840749895780"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::SubAssign<u8>>::sub_assign",
    "hash": "673012747952428088613098220792772779615"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::SubAssign>::sub_assign",
    "hash": "10788325883284948879166128423966465560"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitAnd>::bitand",
    "hash": "169554233298214659516573317437752976504"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitAndAssign<u8>>::bitand_assign",
    "hash": "3374707726659671019583042008372888851"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "823855726706466424518441568165319892778"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitOr>::bitor",
    "hash": "374411905255933252513369230601844180181"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitOrAssign<u8>>::bitor_assign",
    "hash": "164468077279041311509942523609950713298"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "1010909670838050183612317846838046901338"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitXor>::bitxor",
    "hash": "166026620689284326436329394644351701345"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitXorAssign<u8>>::bitxor_assign",
    "hash": "665986763593194268614907001679648449326"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "924861151094267954017097994870119248237"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::Not>::not",
    "hash": "127098794176462081649007365766203860315"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Add>::add",
    "hash": "1826197586608841500917820110040642695675"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::AddAssign<usize>>::add_assign",
    "hash": "25477103376015624971724200833176893376"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::AddAssign>::add_assign",
    "hash": "103053676142268423491677681571782662395"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Div>::div",
    "hash": "26184408682677950082455149327742548601"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::DivAssign<usize>>::div_assign",
    "hash": "1198251226280091906511498165430334106503"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::DivAssign>::div_assign",
    "hash": "127133537410822018614038325773126492157"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Mul>::mul",
    "hash": "115277279620050770917949013756845471548"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::MulAssign<usize>>::mul_assign",
    "hash": "45868039834115443016771180992804967559"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::MulAssign>::mul_assign",
    "hash": "17423136094010841599024661892777700356"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Rem>::rem",
    "hash": "51141641354241174251699624253678186330"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::RemAssign<usize>>::rem_assign",
    "hash": "697876686495566175111515409582511086180"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::RemAssign>::rem_assign",
    "hash": "1596521225683261918313253867757986366458"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Sub>::sub",
    "hash": "1533528459422548728610223984146560370996"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::SubAssign<usize>>::sub_assign",
    "hash": "687630309643970961916941232626687413487"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::SubAssign>::sub_assign",
    "hash": "1078706328772122040210503231303580991066"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitAnd>::bitand",
    "hash": "460245291838070667313538885349844162766"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitAndAssign<usize>>::bitand_assign",
    "hash": "1830609953941828964114745376692341932053"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "21703381855292043921759263165236342821"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitOr>::bitor",
    "hash": "626911736081660889114142373473387174006"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitOrAssign<usize>>::bitor_assign",
    "hash": "1537184666241712373811181215483890186391"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "8731086444030588811287640972753372773"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitXor>::bitxor",
    "hash": "57158148051115467248405820356416847951"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitXorAssign<usize>>::bitxor_assign",
    "hash": "17233253787730095262420278264257515612"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "1677723086938286456811468808995326056524"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::Not>::not",
    "hash": "1022033598038023696710329100857479151007"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::abs",
    "hash": "89556262135311522719791513642557181353"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::count_ones",
    "hash": "21140704658926755711980657579536426012"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::count_zeros",
    "hash": "33088020629258897914713720075945177050"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::from_be",
    "hash": "843727533998973735211557713079437947982"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::from_le",
    "hash": "1498268144648977501412063718212714534682"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::is_negative",
    "hash": "136211569942773199401036968384498452365"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::is_positive",
    "hash": "170299001608471817197225769553784335125"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::leading_zeros",
    "hash": "305588358772949583416326221034149071783"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::pow",
    "hash": "48600551711803603151993265229377365293"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::reverse_bits",
    "hash": "1114273935150381378510163392272551244282"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::rotate_left",
    "hash": "153678768298539806859481192609323278705"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::rotate_right",
    "hash": "115019820535997199010953153099753977280"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::signum",
    "hash": "131406523465930621902662948086041172700"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::swap_bytes",
    "hash": "576696715676410754416639420962733796495"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::to_be",
    "hash": "170990927358508531112718069476501811102"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::to_le",
    "hash": "729340536815394630013857700459883324949"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::trailing_zeros",
    "hash": "788882073644760888617446190431346570710"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::abs",
    "hash": "146705874863606931303931686738430197608"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::count_ones",
    "hash": "1715519218471619946915903724692177593001"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::count_zeros",
    "hash": "10564928117705265485916970395501424809"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::from_be",
    "hash": "138022594960747086301350217681274299447"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::from_le",
    "hash": "145232923890407583515601920707598244225"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::is_negative",
    "hash": "1231921263403022276311964179815056814299"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::is_positive",
    "hash": "31599225198825272817158864719097553957"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::leading_zeros",
    "hash": "1514587435688177866310516914668272370495"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::pow",
    "hash": "1253497929422146489910494136731928217824"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::reverse_bits",
    "hash": "519791115509999052316142067156434190893"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::rotate_left",
    "hash": "64146685096683210498503676050415810857"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::rotate_right",
    "hash": "5856539321193862316907732168374603586"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::signum",
    "hash": "1185415461562933155317856196336482658848"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::swap_bytes",
    "hash": "928933984008710636013158761509778447541"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::to_be",
    "hash": "344855039095873586818305597914999898737"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::to_le",
    "hash": "14039843732215447682343581106778140759"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::trailing_zeros",
    "hash": "663416130265269493513012149573064121557"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::abs",
    "hash": "88480155266493529857320432748336379402"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::count_ones",
    "hash": "130287568036200331839186859710230974897"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::count_zeros",
    "hash": "1202724628799559258217734889931445256688"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::from_be",
    "hash": "118498614437720669359657629510754488231"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::from_le",
    "hash": "1329521479547264771414293767120318194286"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::is_negative",
    "hash": "143761689517717498085923697580131099468"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::is_positive",
    "hash": "2650757765572048641863564699285330676"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::leading_zeros",
    "hash": "177605238206425884208390454715680345653"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::pow",
    "hash": "1608758369549933875612851590592262109616"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::reverse_bits",
    "hash": "1648135869186328068113371609528171745254"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::rotate_left",
    "hash": "390078950736978367910188495722395092867"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::rotate_right",
    "hash": "70615420429543790228924408025224624570"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::signum",
    "hash": "968677528426297239617976124434235635414"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::swap_bytes",
    "hash": "109813473137473608508387338067511693069"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::to_be",
    "hash": "42905118171463761351791064242416151215"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::to_le",
    "hash": "82104387652023335163461612274001936774"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::trailing_zeros",
    "hash": "172525715948925710368475916286626735651"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::abs",
    "hash": "101155290741783533578449231797365752640"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::count_ones",
    "hash": "95803457157316967019326604946698871276"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::count_zeros",
    "hash": "1216012891983105452510136475489635822918"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::from_be",
    "hash": "1486578686961796770817539196095937440471"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::from_le",
    "hash": "812133334877696220811818506060958952698"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::is_negative",
    "hash": "132537462570141533268429569931048454123"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::is_positive",
    "hash": "34631047576709458411197460310278663921"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::leading_zeros",
    "hash": "14871757903828046210726973144287998984"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::pow",
    "hash": "282375559050438584113134107882223596705"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::reverse_bits",
    "hash": "11005775132657099452402876751628595531"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::rotate_left",
    "hash": "62764916953324387719193612501617779136"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::rotate_right",
    "hash": "1629743642065043358816830031561120489886"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::signum",
    "hash": "732610757207841469614471797702416519685"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::swap_bytes",
    "hash": "6748394691606910938273414967203817563"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::to_be",
    "hash": "1784093541711067746010649093443321464007"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::to_le",
    "hash": "21154229596583594719013477628003872989"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::trailing_zeros",
    "hash": "11523385965276996164778391236155795815"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::abs",
    "hash": "233083477835497561115779297007647933093"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::count_ones",
    "hash": "162951245535647824864376155942141091147"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::count_zeros",
    "hash": "182669205554140808013905882510542386190"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::from_be",
    "hash": "73149383208932939672237715169012007670"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::from_le",
    "hash": "1200289245636916896118220759070149974640"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::is_negative",
    "hash": "461033506925575484113991006938248964074"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::is_positive",
    "hash": "1396603107718530165914203449832283517551"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::leading_zeros",
    "hash": "461029499281874958015928034499857404196"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::pow",
    "hash": "169400777103453794892115511568804539034"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::reverse_bits",
    "hash": "124139349058261043033361939036279084973"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::rotate_left",
    "hash": "1339474634994433920910256847853752281664"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::rotate_right",
    "hash": "1356644153587435307814945803410663673025"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::signum",
    "hash": "368806602778052569816289851373005028334"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::swap_bytes",
    "hash": "82831218751886394702165081614583868528"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::to_be",
    "hash": "89366253089347096994407716246020207006"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::to_le",
    "hash": "465204856584310080711791451496341239751"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::trailing_zeros",
    "hash": "622299456604810806711161179661679678402"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::abs",
    "hash": "41504559720649046219832007825304150648"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::count_ones",
    "hash": "56986651731831603338500305322710431195"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::count_zeros",
    "hash": "1387838141067069821213728951733820884132"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::from_be",
    "hash": "93916498626265384568285724058378353992"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::from_le",
    "hash": "1166031722298588480118060760699306631849"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::is_negative",
    "hash": "1588092344796579506511931117668157096256"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::is_positive",
    "hash": "1716906727372866367514230239515677538667"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::leading_zeros",
    "hash": "882587328236069146612596923277970060958"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::pow",
    "hash": "72428087035521167021714142943775251750"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::reverse_bits",
    "hash": "219940890034033502117535973487435866593"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::rotate_left",
    "hash": "168921913388084020444394381938319095862"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::rotate_right",
    "hash": "115997962844412931267908023186571220189"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::signum",
    "hash": "120707756999319439767816861177838894956"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::swap_bytes",
    "hash": "820483989722868081018337937218207989517"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::to_be",
    "hash": "99205972781713093209771738306509566118"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::to_le",
    "hash": "1535690007065276245210684359836608858636"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::trailing_zeros",
    "hash": "48481806665923819759159197150201534387"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::count_ones",
    "hash": "164250078025871759664790550432101791153"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::count_zeros",
    "hash": "106571332874306379711579295231539139208"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::from_be",
    "hash": "164615103010010962294506395790654714951"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::from_le",
    "hash": "456320159755466882516394509042582728083"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::is_power_of_two",
    "hash": "139552841005601957079707735314153288786"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::leading_zeros",
    "hash": "46135607333087621562843373632050213751"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::pow",
    "hash": "72756895525155581917607958765447929071"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::reverse_bits",
    "hash": "190745530912004969818232725186978800054"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::rotate_left",
    "hash": "36895733769403863762763360350178195022"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::rotate_right",
    "hash": "1374491857079820033211515219673927798499"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::swap_bytes",
    "hash": "8354856673081703488893047483949260018"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::to_be",
    "hash": "3297724949294784015614482367166846484"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::to_le",
    "hash": "829613940689189948711231720555110014974"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::trailing_zeros",
    "hash": "145602365071700811918715451572252611580"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::count_ones",
    "hash": "1438758924563446917618265767076304908041"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::count_zeros",
    "hash": "1829224993012956170717760066893177099520"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::from_be",
    "hash": "182835920803293036357633494946166728965"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::from_le",
    "hash": "75737590933148317536674646211626521836"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::is_power_of_two",
    "hash": "917658647184704043415932316677116510006"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::leading_zeros",
    "hash": "732338372147681299416574155008828010555"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::pow",
    "hash": "182022313690798734924615420933056696669"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::reverse_bits",
    "hash": "2677532680619400108782467980738779763"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::rotate_left",
    "hash": "440947068787690085716507391793452761864"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::rotate_right",
    "hash": "9559717562702476464425264815669258"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::swap_bytes",
    "hash": "88815537427938606656730501011473200025"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::to_be",
    "hash": "1787883876537039292510991808167614978140"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::to_le",
    "hash": "112574397610958563546805998946293300004"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::trailing_zeros",
    "hash": "62725914890973575616375509321694696592"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::count_ones",
    "hash": "143036355870086946042708156116083234815"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::count_zeros",
    "hash": "1236721289847929397414371278211447009646"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::from_be",
    "hash": "56650203417969118983019452251224684255"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::from_le",
    "hash": "162602791667193600996530615231457512355"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::is_power_of_two",
    "hash": "64048017260467745218932411979586336924"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::leading_zeros",
    "hash": "1430491332661624334611855431772098080710"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::pow",
    "hash": "988804071711911188717376744280743891882"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::reverse_bits",
    "hash": "155358583144209107634367317547492775702"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::rotate_left",
    "hash": "73036980974566195441153467593641218948"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::rotate_right",
    "hash": "6002080284449635433152610861686453482"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::swap_bytes",
    "hash": "477751420632199127513706607243495750127"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::to_be",
    "hash": "461443549809828114914391005627208773587"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::to_le",
    "hash": "70186285960702827094653527539839098368"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::trailing_zeros",
    "hash": "132544102028588222968998172680693653894"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::count_ones",
    "hash": "1358331976437169472512731439305689192526"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::count_zeros",
    "hash": "830567008238758472218336849502620327326"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::from_be",
    "hash": "1113503754682031556618035583966221400342"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::from_le",
    "hash": "346412756640061794317897094293011235455"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::is_power_of_two",
    "hash": "1000784688388268698010497917811180364606"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::leading_zeros",
    "hash": "308372507532482809317090945498073241113"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::pow",
    "hash": "107025870093972601213528973006561549176"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::reverse_bits",
    "hash": "7347573180357412078180750024698869903"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::rotate_left",
    "hash": "38707997415192009573222780039350710117"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::rotate_right",
    "hash": "10184627643695221065127206548188427618"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::swap_bytes",
    "hash": "53629254554730187292856620490808928002"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::to_be",
    "hash": "1297160154553912770116446706069732017896"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::to_le",
    "hash": "498176754442201468417016380926478095880"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::trailing_zeros",
    "hash": "467449526584584913916243326451733601209"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::count_ones",
    "hash": "107852373349667926823024077551030606316"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::count_zeros",
    "hash": "53412033338423153115941743900133583291"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::from_be",
    "hash": "505484651185418597916586127119951844566"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::from_le",
    "hash": "8889474357153982518479991614896402657"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::is_power_of_two",
    "hash": "20242490999169285379592755005599076381"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::leading_zeros",
    "hash": "74320327829411224313450929497605622013"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::pow",
    "hash": "1408944554334878987812049539920456873714"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::reverse_bits",
    "hash": "133887776071377869967384610654917650338"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::rotate_left",
    "hash": "170773171782084682416219907345489643218"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::rotate_right",
    "hash": "426243613264408012111623715525374657371"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::swap_bytes",
    "hash": "118076544731285099243035832104644728678"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::to_be",
    "hash": "1128222022369498619115084242739908413824"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::to_le",
    "hash": "40362299544154817815542911263279083765"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::trailing_zeros",
    "hash": "999911636774078313610632059575437377553"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::count_ones",
    "hash": "22527484494573419263301899713074089700"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::count_zeros",
    "hash": "35467752859489946324352587393302780779"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::from_be",
    "hash": "41679529281026192406089663330196224006"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::from_le",
    "hash": "686531175769488693515376876736412443665"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::is_power_of_two",
    "hash": "118612580883975255035537355829642182463"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::leading_zeros",
    "hash": "157063126282198438545569803184697570814"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::pow",
    "hash": "7800302485294773411069533065613202862"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::reverse_bits",
    "hash": "133776463852441694221643737295284484916"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::rotate_left",
    "hash": "13014547637964341148037946154890717977"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::rotate_right",
    "hash": "56294739888037089754686677832297612616"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::swap_bytes",
    "hash": "520990664949516950913820917783797119314"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::to_be",
    "hash": "864414655727712264515697408989309091346"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::to_le",
    "hash": "180172787953074773514068190712983301745"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::trailing_zeros",
    "hash": "266380647135269651616176565362115650087"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::abs_diff",
    "hash": "373771125220458143815267720257624725499"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::bit_width",
    "hash": "179167741253823932805810302170959875398"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::borrowing_sub",
    "hash": "6654128190583238804736358004514902018"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::carrying_add",
    "hash": "1279321701154909719314139179202560639450"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::carrying_mul",
    "hash": "11927821104229957681056658205689402159"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::carrying_mul_add",
    "hash": "1581454787290990027615375521312272711705"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::cast_signed",
    "hash": "158314574204597330236558310536758228964"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_add",
    "hash": "43619816111306256475116204698122080561"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_add_signed",
    "hash": "67925612169469839148834456393992453322"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_div",
    "hash": "1430979599083995482610938830379183144638"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_div_euclid",
    "hash": "1380146142106774534713919502834013735065"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_exact_div",
    "hash": "2160629423627906602868916383212106039"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_ilog",
    "hash": "104986537222511364429873872942355009571"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_ilog10",
    "hash": "120230908167307283815851558592570841978"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_ilog2",
    "hash": "673005220651239693411301695823731109014"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_mul",
    "hash": "1484966173927441476310847864126255834496"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_neg",
    "hash": "834432254419196708716980967305958239679"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_next_multiple_of",
    "hash": "2184597453596771543986737166445003349"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_next_power_of_two",
    "hash": "1447497013037556403614953095297240431517"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_pow",
    "hash": "32243516150684231412056029214209127077"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_rem",
    "hash": "1245753921494363400810702062842325401312"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_rem_euclid",
    "hash": "795095093989819766216984917068586782981"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_shl",
    "hash": "734098756142861455117038571380890688883"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_shr",
    "hash": "1041941905167863131810956694617752803573"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_signed_diff",
    "hash": "50257485289120557423365383415071904566"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_sub",
    "hash": "1163838286221665677615941904234525723433"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_sub_signed",
    "hash": "135601310031318727158651971787683007806"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::count_ones",
    "hash": "169622887641786508219471042197067454233"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::count_zeros",
    "hash": "1076089312677425386414263607413359910421"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::div_ceil",
    "hash": "35005287495158843979950181580564125718"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::div_euclid",
    "hash": "1376313137819026999917698939104737134484"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::div_floor",
    "hash": "79836933327243976514507437598739526911"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::exact_div",
    "hash": "88043778062037644871416068577392532933"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::from_be",
    "hash": "1466711543251541616712783321602070780827"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::from_be_bytes",
    "hash": "886469248008723432111305556696915659572"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::from_le",
    "hash": "113437431434293305361494697663884112660"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::from_le_bytes",
    "hash": "80422618880395160106161820047372927598"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::from_ne_bytes",
    "hash": "212042324179255508114669078731991109298"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::highest_one",
    "hash": "119407014941126342611731377490509727902"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::ilog",
    "hash": "1559075864070334692011685728668159871430"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::ilog10",
    "hash": "3961284372899631005809817489516019021"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::ilog2",
    "hash": "8474245889539581627673306065461967399"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::is_multiple_of",
    "hash": "172979822316197943891427147414063707268"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::is_power_of_two",
    "hash": "22186939203288986785577238441246284233"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::isolate_highest_one",
    "hash": "1255323796235202536012914074526266062382"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::isolate_lowest_one",
    "hash": "61399020610976032157837633005036259829"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::isqrt",
    "hash": "670807416913433143717687446860824739571"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::leading_ones",
    "hash": "1047751183947247660617090621949009496804"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::leading_zeros",
    "hash": "9074474349345107449839803215925758069"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::lowest_one",
    "hash": "1346055888061231173916599666496069056804"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::max_value",
    "hash": "45313664320856696572038660150730262476"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::min_value",
    "hash": "1351440254232064999110545106089294126141"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::next_multiple_of",
    "hash": "163751927824192147933636580249310030820"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::next_power_of_two",
    "hash": "78768442206771450714745618100306413181"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::one_less_than_next_power_of_two",
    "hash": "1064730163263285083815847363121274310562"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_add",
    "hash": "1414841747897646316813397302079343166239"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_add_signed",
    "hash": "58914199313564047994548954377099144338"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_div",
    "hash": "139504680440907702175211982050794509575"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_div_euclid",
    "hash": "130278768624940140112195810887013467516"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_mul",
    "hash": "1053786624903164867310115658146286391611"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_neg",
    "hash": "1758749748774687046813907088024640706933"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_pow",
    "hash": "1152650809740006204912753180398319015511"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_rem",
    "hash": "52496537448638755979124671691344549214"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_rem_euclid",
    "hash": "349542351992254535315363752882941877420"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_shl",
    "hash": "86966287585353555306069593424319077691"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_shr",
    "hash": "60895846611250073855245242017882250235"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_sub",
    "hash": "265774603371057883310729495614571620700"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_sub_signed",
    "hash": "1550332075572121402560522003974586761"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::pow",
    "hash": "63477989646343956332275644657155295063"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::rem_euclid",
    "hash": "116416273431819736998149644642508364461"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::reverse_bits",
    "hash": "170740452832576948575510084912846187105"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::rotate_left",
    "hash": "74142583634453337785658162113545271280"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::rotate_right",
    "hash": "39136898778829210434343098210103889409"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::saturating_add",
    "hash": "1661624432813306586611220041209308278983"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::saturating_add_signed",
    "hash": "5648223330805938642646797417331650531"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::saturating_div",
    "hash": "454304173103042782411126498790809135546"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::saturating_mul",
    "hash": "666290127688486738417972491019584981134"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::saturating_pow",
    "hash": "85257079337477709338517526418395225918"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::saturating_sub",
    "hash": "172975578879334619837069068761456230306"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::saturating_sub_signed",
    "hash": "589987486325083794418239608289310089167"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_add",
    "hash": "92012278823366006441211931694478836788"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_add_signed",
    "hash": "168680431970194624513700253261547847687"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_div",
    "hash": "1410928194271236034115877083742829232081"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_div_euclid",
    "hash": "412375614757867594312500182397731549524"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_mul",
    "hash": "16617078025437546639123130560811212796"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_neg",
    "hash": "120124481746954213979000692280664669898"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_pow",
    "hash": "78329140484294031582361948723351071600"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_rem",
    "hash": "1067958397120765337713885722965115218097"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_rem_euclid",
    "hash": "11550194600501011591148181170086695470"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_shl",
    "hash": "282630680508594329313540667737374284155"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_shr",
    "hash": "383364580214845826110076894825800853819"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_sub",
    "hash": "157547716856561935088275840305691286679"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_sub_signed",
    "hash": "175453544914513639516270141507333706668"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::swap_bytes",
    "hash": "121131861889690892015143944594493737365"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::to_be",
    "hash": "160250984207575973147035459824850892201"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::to_be_bytes",
    "hash": "603650986845741860116745593784492768512"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::to_le",
    "hash": "106331518338110231308833785765922912695"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::to_le_bytes",
    "hash": "322831222787441867313809141139320525894"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::to_ne_bytes",
    "hash": "9139151882240081126268363286054954554"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::trailing_ones",
    "hash": "211169433663813657014062429988656655901"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::trailing_zeros",
    "hash": "34998881715980612384168526765499359674"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unbounded_shl",
    "hash": "1074125755807216697417177924005793852465"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unbounded_shr",
    "hash": "12668846842912376339821715333451460953"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unchecked_add",
    "hash": "527634408578036392517861548893033443910"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unchecked_disjoint_bitor",
    "hash": "1316055141784261152217127401042974660011"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unchecked_exact_div",
    "hash": "817547430471121687414467576397852896025"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unchecked_mul",
    "hash": "1701108056378493573615901305369535218951"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unchecked_shl",
    "hash": "766881850737376930414576500107835802224"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unchecked_shr",
    "hash": "986383070878968079717903542352298039316"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unchecked_sub",
    "hash": "600598176915760633417473014866244651957"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::widening_mul",
    "hash": "33916350298937887636709549473623064472"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_add",
    "hash": "63030479467807986258806681193277428864"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_add_signed",
    "hash": "609467545131266229718225869700462460533"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_div",
    "hash": "97895669434425927334749619099469271"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_div_euclid",
    "hash": "18282893401510717492744747369153333555"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_mul",
    "hash": "486867117722999020512887363129391784153"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_neg",
    "hash": "589724731284527071515143565509641528993"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_next_power_of_two",
    "hash": "1340846281908424096014271214483216218873"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_pow",
    "hash": "1717998534669416641213997620582600027601"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_rem",
    "hash": "1746140530777009300316305613482885189803"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_rem_euclid",
    "hash": "181582499666534991457845728535733209549"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_shl",
    "hash": "1002011507925728328414322264219171387325"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_shr",
    "hash": "53124983117243850347043169517377770411"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_sub",
    "hash": "22990605585107498269189089044430955039"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_sub_signed",
    "hash": "243435609425782816710132286016900576447"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::abs_diff",
    "hash": "79532977119666965512681419198305982977"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::bit_width",
    "hash": "25156963881903506589003731418846844355"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::borrowing_sub",
    "hash": "568960906699740461413356030546508255620"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::carrying_add",
    "hash": "1060042751787216098813246387684207620683"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::carrying_mul",
    "hash": "139973085298915677552156363389252460501"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::carrying_mul_add",
    "hash": "76728636971782648216756442693009036567"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::cast_signed",
    "hash": "16142924486094094938242587348905083154"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_add",
    "hash": "122178925026374537431542499395679488878"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_add_signed",
    "hash": "826944542462159043112032546204036483314"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_div",
    "hash": "56158394300728036544565619770593499657"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_div_euclid",
    "hash": "1152803584856481260210599287620144752231"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_exact_div",
    "hash": "13623474709177695712648333988286344516"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_ilog",
    "hash": "136774563444114573864215968104277745495"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_ilog10",
    "hash": "152572113416378514043787111015294742775"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_ilog2",
    "hash": "1323184022562478170717649744469626748205"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_mul",
    "hash": "57377457118965358845824401264083491725"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_neg",
    "hash": "127603651882650059563628915508314160817"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_next_multiple_of",
    "hash": "689834305551985192717497179788918517344"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_next_power_of_two",
    "hash": "123154512231489040382307745000217752606"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_pow",
    "hash": "8845852170939867927646832396971249012"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_rem",
    "hash": "888662324568998163413234358540876531708"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_rem_euclid",
    "hash": "119530968437824663827100178803385973970"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_shl",
    "hash": "826807613074598938012603197069794016254"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_shr",
    "hash": "116481845793886944328236707233830894527"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_signed_diff",
    "hash": "1723656869907043077715351867964952138623"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_sub",
    "hash": "2609627769545755159454651021603218653"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_sub_signed",
    "hash": "501278531068675814017860242896677314571"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::count_ones",
    "hash": "1442308611275136890017445200413039359564"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::count_zeros",
    "hash": "418606071202103104215196702557580215224"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::div_ceil",
    "hash": "180600204668175947249428495164003743133"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::div_euclid",
    "hash": "100264855075806675161548970631622672948"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::div_floor",
    "hash": "1341607621801842114313323170343000706524"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::exact_div",
    "hash": "128011828117964966445132294274638488125"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::from_be",
    "hash": "26659888902212510432491259395672315523"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::from_be_bytes",
    "hash": "84071171144181614776689450775935392032"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::from_le",
    "hash": "141832647598262648814645018528822994189"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::from_le_bytes",
    "hash": "93679529761617555714382407616755770883"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::from_ne_bytes",
    "hash": "20474726924791858945517376004621008512"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::highest_one",
    "hash": "139572145004743896016055495234130906461"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::ilog",
    "hash": "1117801630783000878111395047528984924602"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::ilog10",
    "hash": "581803548856047805215359771955603370636"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::ilog2",
    "hash": "132437555779749609868345331073475176177"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::is_multiple_of",
    "hash": "117302079628149128087910640490424150942"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::is_power_of_two",
    "hash": "140786454341219181002296011453773698834"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::isolate_highest_one",
    "hash": "79862431251861531181726027621333882843"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::isolate_lowest_one",
    "hash": "2502849057016175422934851966666362181"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::isqrt",
    "hash": "46487744056737970399223703596869959160"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::leading_ones",
    "hash": "29837501730887939464986598318261382446"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::leading_zeros",
    "hash": "24619828382823488759134826436669826638"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::lowest_one",
    "hash": "1788227230958597581616778544188023048373"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::max_value",
    "hash": "2126095175593139441415089261515125078"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::min_value",
    "hash": "853793645574401049213597165588648947834"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::next_multiple_of",
    "hash": "963430473429666771415523320413634086597"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::next_power_of_two",
    "hash": "1186828974885967492113725298015738189950"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::one_less_than_next_power_of_two",
    "hash": "187197504983926978513766616801953114512"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_add",
    "hash": "11823370375593728049845512233188361751"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_add_signed",
    "hash": "12933791227947937731240022469878401729"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_div",
    "hash": "160889534012754627817299350448965613225"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_div_euclid",
    "hash": "1199328231629770196010562190069939895122"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_mul",
    "hash": "1217254231164188451114540422878218572543"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_neg",
    "hash": "68189658523988044396364380643650280513"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_pow",
    "hash": "85626772631125705788626938472770651721"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_rem",
    "hash": "4541214468537759106835018680779713135"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_rem_euclid",
    "hash": "107191703576629848037390695499998252599"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_shl",
    "hash": "20127696627222274676074376324681247630"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_shr",
    "hash": "127423060722695790411370485334498507646"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_sub",
    "hash": "161760022614956598681905959752448539851"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_sub_signed",
    "hash": "83631440649298281182834797579710052470"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::pow",
    "hash": "256382897712088636613333032703537998516"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::rem_euclid",
    "hash": "1186930175199709770910201845811761515701"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::reverse_bits",
    "hash": "34682192693911579617057898009771463908"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::rotate_left",
    "hash": "59468990855978108124318989097252730642"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::rotate_right",
    "hash": "412552993754338919515137428343963518586"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::saturating_add",
    "hash": "45845672522257434344645467934049494507"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::saturating_add_signed",
    "hash": "1400514034197061231816822515990489353058"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::saturating_div",
    "hash": "102910578583641540881901723733149195665"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::saturating_mul",
    "hash": "40872632601311180448687426081710741397"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::saturating_pow",
    "hash": "767573821426243651967482676598523024"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::saturating_sub",
    "hash": "560111188249998717016387776952081253028"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::saturating_sub_signed",
    "hash": "1190625323727473058818079433382987576926"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_add",
    "hash": "183159132850460666294872997104194017398"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_add_signed",
    "hash": "2302486172239566109257534276572398179"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_div",
    "hash": "85019527591514319678592454602187453936"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_div_euclid",
    "hash": "1565275942584059052818444521685343552129"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_mul",
    "hash": "110367021661839318435652948374400897389"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_neg",
    "hash": "1498997499033620542516319656027488962581"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_pow",
    "hash": "671402037745960642510908563166648470448"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_rem",
    "hash": "173857810851335014761440183739423433918"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_rem_euclid",
    "hash": "1385919275837044288511792901320020017664"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_shl",
    "hash": "58848145331637411712127221085215688656"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_shr",
    "hash": "1302320387284239224411684282474046231763"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_sub",
    "hash": "154280554907464888207694658867066966848"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_sub_signed",
    "hash": "73820210659267374798229461622138831335"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::swap_bytes",
    "hash": "112158518635080612402367532793544439842"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::to_be",
    "hash": "85310764584783104959338216661874848814"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::to_be_bytes",
    "hash": "134076359365589210861937482740026767966"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::to_le",
    "hash": "87716545113372367814982192528839907385"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::to_le_bytes",
    "hash": "32905740638649040616201101885779889780"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::to_ne_bytes",
    "hash": "57534297831600793824405910602948781182"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::trailing_ones",
    "hash": "155762646551194231811580744305916426233"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::trailing_zeros",
    "hash": "55745304733889562934207146330437426275"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unbounded_shl",
    "hash": "14312599650022012895027101681112743236"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unbounded_shr",
    "hash": "57566331788690395568732779457114162403"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unchecked_add",
    "hash": "71020727117532890543203013956277438342"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unchecked_disjoint_bitor",
    "hash": "165111158143021330728985787606914171938"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unchecked_exact_div",
    "hash": "605169037712814108211707819480802601468"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unchecked_mul",
    "hash": "1556614390474245298411409130378312007281"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unchecked_shl",
    "hash": "622182750816492159526203720855106279"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unchecked_shr",
    "hash": "1533480913051212079611675461974581017221"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unchecked_sub",
    "hash": "138278612362315342871941149486902069020"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::widening_mul",
    "hash": "4840337082806226596751894814723202897"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_add",
    "hash": "11231078253884128862112240910954757590"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_add_signed",
    "hash": "1435344491708260001913383514578960492608"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_div",
    "hash": "1701074638680533433615356204823044316677"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_div_euclid",
    "hash": "917197513174103912317559557088162308799"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_mul",
    "hash": "1188893818515948867511372465522489467474"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_neg",
    "hash": "361062198192922976914472445747168594927"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_next_power_of_two",
    "hash": "1410353678033937510114272316290374861599"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_pow",
    "hash": "9848961773269332665965769304163505848"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_rem",
    "hash": "182783121670906461035233969003138734669"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_rem_euclid",
    "hash": "99914927178962902747597206784043518493"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_shl",
    "hash": "548440693935488520011737629839960042182"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_shr",
    "hash": "734333947234315365513571901371641474398"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_sub",
    "hash": "1329060830635471462314151720767960867374"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_sub_signed",
    "hash": "1187958595598954711810917151539325235206"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::abs_diff",
    "hash": "150964825617785961116218981582915044194"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::bit_width",
    "hash": "1130276910412131041510464195530486555429"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::borrowing_sub",
    "hash": "12010816693372783938281587325446330320"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::carrying_add",
    "hash": "54510450173757015517357626898811167979"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::carrying_mul",
    "hash": "1430069525470491183217454481133889420103"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::carrying_mul_add",
    "hash": "143570674477229534883788171329265526701"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::cast_signed",
    "hash": "162574907300830884334131036505052355"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_add",
    "hash": "249604106555812469514690464467112460273"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_add_signed",
    "hash": "1665938203169087209910266892213843645237"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_div",
    "hash": "250429294603999823110586449225914072758"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_div_euclid",
    "hash": "833067355420200950216016784782754080564"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_exact_div",
    "hash": "1007625169382214945415883513500781013756"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_ilog",
    "hash": "181700952120346095182417277912353201905"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_ilog10",
    "hash": "303430335465823857914383075534573365682"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_ilog2",
    "hash": "1707642695508871955216629877681498216884"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_mul",
    "hash": "1073201461862206388613353473984758361282"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_neg",
    "hash": "1663663841962121128311497914886699139086"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_next_multiple_of",
    "hash": "97714665578104258838284134784077711102"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_next_power_of_two",
    "hash": "115260303481305781918422466888652439527"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_pow",
    "hash": "184216338512297683233971060837121924692"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_rem",
    "hash": "769373082208152033813467573887406993968"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_rem_euclid",
    "hash": "141036162040793356297506572745705706777"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_shl",
    "hash": "160445443908553111481989521841963630575"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_shr",
    "hash": "130811036059223169476893340398555973886"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_signed_diff",
    "hash": "134167142278525315261105040147856367469"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_sub",
    "hash": "112431059708900917988743107409513658014"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_sub_signed",
    "hash": "1156464129897978720013927781545049600622"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::count_ones",
    "hash": "488897273806047929015829276031195802247"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::count_zeros",
    "hash": "90128023266076354816164889265453375101"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::div_ceil",
    "hash": "12583688220287786713610529548063297792"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::div_euclid",
    "hash": "1190774921358486069113381407447079903531"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::div_floor",
    "hash": "1694643228227022333911157288983615177986"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::exact_div",
    "hash": "680776674100883656717741561790401748684"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::from_be",
    "hash": "461319144963222623611014986432352912892"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::from_be_bytes",
    "hash": "1509036040345971004913585581049531902282"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::from_le",
    "hash": "884008408542954622613531516100068335309"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::from_le_bytes",
    "hash": "1216764608847849750512487658571078383254"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::from_ne_bytes",
    "hash": "1024639062213566768516003606659673930011"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::highest_one",
    "hash": "1507682221203940817815394978187815526456"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::ilog",
    "hash": "104817260282938192666533755631966306151"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::ilog10",
    "hash": "777012610869644171110564129485475674895"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::ilog2",
    "hash": "42401789277196380721722941835586551396"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::is_multiple_of",
    "hash": "984850768661541390216998064103877553440"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::is_power_of_two",
    "hash": "978641853218493605311973367952744432180"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::isolate_highest_one",
    "hash": "161137747715211309877221213852505403734"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::isolate_lowest_one",
    "hash": "51869086108447873213456474216864032160"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::isqrt",
    "hash": "15879024065915814180192817159877356920"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::leading_ones",
    "hash": "669988655769279725116293678295204570680"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::leading_zeros",
    "hash": "452380031565053733012890207440840577649"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::lowest_one",
    "hash": "181388612788604950649204412225963221742"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::max_value",
    "hash": "103914465762786913983769429152253535952"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::min_value",
    "hash": "343693025187821722612958320923118859024"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::next_multiple_of",
    "hash": "151245652758584100221907159339631209720"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::next_power_of_two",
    "hash": "43718000009700459807303547334289609990"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::one_less_than_next_power_of_two",
    "hash": "1254804741308077937816885112492892383556"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_add",
    "hash": "117079757569715741572354112918951065097"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_add_signed",
    "hash": "11995020192056057947669334107247505510"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_div",
    "hash": "1230118685010240413214123978402870231460"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_div_euclid",
    "hash": "36413106700528977788071647732368849654"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_mul",
    "hash": "1556285433335377907811854948506144510761"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_neg",
    "hash": "79486552238663857017740915836763547728"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_pow",
    "hash": "81491289958295962039863875991857223016"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_rem",
    "hash": "17670035733619984267312410879095088854"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_rem_euclid",
    "hash": "87624581149108883113546384491184354882"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_shl",
    "hash": "110487822868865642111007992232030590021"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_shr",
    "hash": "8646907269465116290640395741199551319"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_sub",
    "hash": "1207457031134870663115971558592101200101"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_sub_signed",
    "hash": "782588226866090333113226568892399679019"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::pow",
    "hash": "1563462034713863611016836018169664791715"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::rem_euclid",
    "hash": "142655621449086841794473014551255990012"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::reverse_bits",
    "hash": "142878186687834180364135435679054008858"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::rotate_left",
    "hash": "124975745517496421151495465855138894229"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::rotate_right",
    "hash": "117866965221890974823669921763054898191"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::saturating_add",
    "hash": "206133996869417878014075640774793672154"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::saturating_add_signed",
    "hash": "502354417325364694315263265903732071359"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::saturating_div",
    "hash": "154454754809590984237159208246572125700"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::saturating_mul",
    "hash": "1362437652700819995312505106430506381201"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::saturating_pow",
    "hash": "170222222921354760134092245802955090491"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::saturating_sub",
    "hash": "410007525278585985110130504895071798673"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::saturating_sub_signed",
    "hash": "867225051542575209316283463148001504781"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_add",
    "hash": "616235899560380656513054302282475285931"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_add_signed",
    "hash": "1038197673843514851011760310664407600321"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_div",
    "hash": "2657490281023406124288606396074528760"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_div_euclid",
    "hash": "637275464587262263913683632237297550005"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_mul",
    "hash": "111714659924796545801741560185787943930"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_neg",
    "hash": "894356038851090324810892776961314001494"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_pow",
    "hash": "49719631976540468341835154028595975591"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_rem",
    "hash": "176468266787197061471500737790479138833"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_rem_euclid",
    "hash": "70488087424062668411599846480974523487"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_shl",
    "hash": "182158345043081634112841877448871617340"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_shr",
    "hash": "158672766522272455976651765942210462334"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_sub",
    "hash": "86277214277157586112832830007000228754"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_sub_signed",
    "hash": "969256113922741102912152066255755662690"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::swap_bytes",
    "hash": "133195911330453423185704331177248193040"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::to_be",
    "hash": "46940360607382343592295556643282899848"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::to_be_bytes",
    "hash": "52979780277709466618327283908330407596"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::to_le",
    "hash": "567453162417308906113226367829951565933"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::to_le_bytes",
    "hash": "163220650523152304983743504399230720817"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::to_ne_bytes",
    "hash": "1283511068628563582215163766589245520211"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::trailing_ones",
    "hash": "1057700085918152983517681926343849315509"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::trailing_zeros",
    "hash": "91026076392529302153493069951524438467"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unbounded_shl",
    "hash": "73860761499800696712301131037451026926"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unbounded_shr",
    "hash": "239769112495740609412466016274016251807"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unchecked_add",
    "hash": "151568661873959722052258567022009597210"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unchecked_disjoint_bitor",
    "hash": "161059431260636899141370388873817196499"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unchecked_exact_div",
    "hash": "6836381764813790143044767524486659572"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unchecked_mul",
    "hash": "1385361164516084132012990644950446495553"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unchecked_shl",
    "hash": "588810880768226584818065332226480317251"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unchecked_shr",
    "hash": "326790544132208988718422517583922799506"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unchecked_sub",
    "hash": "1286037306865309894816829012736212085962"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::widening_mul",
    "hash": "1713089341781306433113562906166715150001"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_add",
    "hash": "1113887850970652844012910782077053673097"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_add_signed",
    "hash": "126801272196083427738777087492564594899"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_div",
    "hash": "47773774705917672911518746457569503607"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_div_euclid",
    "hash": "11243328552202086443603974033726244011"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_mul",
    "hash": "38304714565730837769574040212205863990"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_neg",
    "hash": "1177773465927388363217810120479137297891"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_next_power_of_two",
    "hash": "81188477053890457731716871817857712349"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_pow",
    "hash": "34460024631461954741359109694562928204"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_rem",
    "hash": "13227603080311915954279727372091633467"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_rem_euclid",
    "hash": "277276531869613041415139230333360637226"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_shl",
    "hash": "158324450486937614103860263913500512545"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_shr",
    "hash": "1009843280939844968711054007246256369456"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_sub",
    "hash": "17317012152166021251702534933077031572"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_sub_signed",
    "hash": "865549398377009167415386431617920596569"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::abs_diff",
    "hash": "927512136068945573317691742370349479345"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::bit_width",
    "hash": "399618356183224608712941632820893947466"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::borrowing_sub",
    "hash": "1622116779086946390315686358954847749656"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::carrying_add",
    "hash": "1784594039768752556511461787454520360571"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::carrying_mul",
    "hash": "142873453805825559217721264557073293860"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::carrying_mul_add",
    "hash": "95642708630391106095571633427816020954"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::cast_signed",
    "hash": "52467766054647177194606579396414936087"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_add",
    "hash": "988744663497126123010669736948172798113"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_add_signed",
    "hash": "94603127586111209929534364916829635314"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_div",
    "hash": "1391075199711143043016360095197985595503"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_div_euclid",
    "hash": "9439863759314734610521220873795707901"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_exact_div",
    "hash": "140802236654041625412708683079006558196"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_ilog",
    "hash": "1537536042164192466312731931785712023220"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_ilog10",
    "hash": "1692327752750844338212539079933089963607"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_ilog2",
    "hash": "520098921039998442513548895159771078604"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_mul",
    "hash": "56970611045526818263694740787757748724"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_neg",
    "hash": "104977230886402125454619243394332913168"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_next_multiple_of",
    "hash": "1767216886034173223110685830260105008123"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_next_power_of_two",
    "hash": "76010032504340089878178432847794764906"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_pow",
    "hash": "774902051384335352411072154254525445053"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_rem",
    "hash": "183869797883945984201711832193797097059"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_rem_euclid",
    "hash": "29220156378676782072760059612842625967"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_shl",
    "hash": "148575899126729310791981118488484402433"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_shr",
    "hash": "1789159583993800106312673830077338975234"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_signed_diff",
    "hash": "90216704252992596174560578758139370593"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_sub",
    "hash": "21309949234064486748777176950850555115"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_sub_signed",
    "hash": "1357941194031320340916418507315251340927"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::count_ones",
    "hash": "58017090892187152939660243848421220021"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::count_zeros",
    "hash": "125660842202059557654135797253487041585"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::div_ceil",
    "hash": "282757098622690803410583200290895894120"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::div_euclid",
    "hash": "120691851715153992804859282279500291672"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::div_floor",
    "hash": "168114303081566592557683038109164078793"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::exact_div",
    "hash": "404328072942876356713389253357810647593"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::from_be",
    "hash": "24003542389086149397102300489675341822"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::from_be_bytes",
    "hash": "460889791816679174211207141066427996013"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::from_le",
    "hash": "556383921217611114610101127050377960866"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::from_le_bytes",
    "hash": "1709337194483392878117294344075676307468"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::from_ne_bytes",
    "hash": "61152785643718259606238059027513462296"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::highest_one",
    "hash": "1703144102482067158014502951898875386483"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::ilog",
    "hash": "171696012840328995924124060817843728953"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::ilog10",
    "hash": "167226730396733365391003205107474469744"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::ilog2",
    "hash": "59935253564753643883263188409632882007"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::is_multiple_of",
    "hash": "118826524861753505513892920359781344427"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::is_power_of_two",
    "hash": "106102584359990633532549072608667025499"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::isolate_highest_one",
    "hash": "1484920480776400030818130877271908629242"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::isolate_lowest_one",
    "hash": "1498488190623126352818353373604466537256"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::isqrt",
    "hash": "158092740761808526899087375128351603344"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::leading_ones",
    "hash": "1682151884821628327614248347863651486175"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::leading_zeros",
    "hash": "86182136154272529275822896281221250937"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::lowest_one",
    "hash": "1268431589489657962217968815507703628597"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::max_value",
    "hash": "1345244728507744270610208598541989539338"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::min_value",
    "hash": "1459856451987006539212148839841991132793"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::next_multiple_of",
    "hash": "43995711588440331041156318673166514192"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::next_power_of_two",
    "hash": "280689021223185610610984847046947787191"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::one_less_than_next_power_of_two",
    "hash": "82629372583322436301446092745897389408"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_add",
    "hash": "112943077048382931767317932822538807131"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_add_signed",
    "hash": "1312366825221803688011021854043534347077"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_div",
    "hash": "22207432212256464505486603433780622350"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_div_euclid",
    "hash": "660937985054919420411652292161596939730"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_mul",
    "hash": "1304836711019838283915791743408552652081"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_neg",
    "hash": "1691383000210901998812650607387644228020"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_pow",
    "hash": "876814006155908910114861354645208263646"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_rem",
    "hash": "15285015271534453771775533311829379086"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_rem_euclid",
    "hash": "1647932006319317244012155986064374600307"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_shl",
    "hash": "148449280583444781036087159867437292865"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_shr",
    "hash": "78077360365484606574539786234112557346"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_sub",
    "hash": "1211001843839134215011853753970086513762"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_sub_signed",
    "hash": "4919597236140638934509440449588744349"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::pow",
    "hash": "1120540178713813241813426742858739282540"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::rem_euclid",
    "hash": "770915541892231009516802800193979189234"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::reverse_bits",
    "hash": "64757010817630275711951247431926139451"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::rotate_left",
    "hash": "1760430115825981202213645550491187150481"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::rotate_right",
    "hash": "1322658337206210631410564239038208158147"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::saturating_add",
    "hash": "139166334537998573710502987408855479948"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::saturating_add_signed",
    "hash": "3045150561966187805668240171920494607"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::saturating_div",
    "hash": "354198323473003352712878769070147469202"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::saturating_mul",
    "hash": "90110537077017092174159756564058021729"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::saturating_pow",
    "hash": "919406032995093405712112922120483840855"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::saturating_sub",
    "hash": "599938444497109172811731168072396746131"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::saturating_sub_signed",
    "hash": "48037604616346420459737550361977195840"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_add",
    "hash": "52574367660527687376773498738292844444"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_add_signed",
    "hash": "69868372040550423207524288734955126211"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_div",
    "hash": "142438484597967187759601549155852877120"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_div_euclid",
    "hash": "1408945415448446065811935766816269838507"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_mul",
    "hash": "145677334107324761017241898021166765721"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_neg",
    "hash": "108471034752498421133128569218993444484"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_pow",
    "hash": "1618003244592553991011649763862206552786"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_rem",
    "hash": "762200495713275058217653857222388154621"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_rem_euclid",
    "hash": "146149405883414209384957117831181781919"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_shl",
    "hash": "84115249432692692754206902699185081841"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_shr",
    "hash": "94929991055541210011632373922891734373"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_sub",
    "hash": "4628350780787917967755880669529511522"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_sub_signed",
    "hash": "9192716373962323255641498622230655248"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::swap_bytes",
    "hash": "112552945692555675266844284819693630303"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::to_be",
    "hash": "1820910004888002327410250789028802270960"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::to_be_bytes",
    "hash": "3407322739403031413759914497392494395"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::to_le",
    "hash": "8651096919406139832007272259036729347"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::to_le_bytes",
    "hash": "6442378417131416153462296113692394412"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::to_ne_bytes",
    "hash": "123970298260650500109026538588783231706"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::trailing_ones",
    "hash": "1241086236659606724014280520398921598195"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::trailing_zeros",
    "hash": "93576195907464106258613971176072109119"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unbounded_shl",
    "hash": "82675480065589371358907340616897176067"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unbounded_shr",
    "hash": "134811177702847934509024786225699992190"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unchecked_add",
    "hash": "181423256019244252206944335029800226694"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unchecked_disjoint_bitor",
    "hash": "117181456599555994416285116055761237971"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unchecked_exact_div",
    "hash": "824025902459532781915443223688742328919"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unchecked_mul",
    "hash": "1439648937207474132013138998945296915713"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unchecked_shl",
    "hash": "7777404617937908913340377142535259211"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unchecked_shr",
    "hash": "156248074170202011838440405822426318945"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unchecked_sub",
    "hash": "15559049933688605243864646037362806402"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::widening_mul",
    "hash": "151495482104345451407462841006898407856"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_add",
    "hash": "876109748917925845916543752775837449881"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_add_signed",
    "hash": "652563567012762444217160326734578781839"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_div",
    "hash": "656317615696328702216945900503541460989"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_div_euclid",
    "hash": "1811663928074508814914456304449692421195"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_mul",
    "hash": "1826008330204511188512879218305653122837"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_neg",
    "hash": "41038183254542802112187034039729383765"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_next_power_of_two",
    "hash": "19673729073463395103392072507632057611"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_pow",
    "hash": "102706852598789478997563834760821179220"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_rem",
    "hash": "136697261304234998877263033338520510810"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_rem_euclid",
    "hash": "7110124664638395564882949171930706037"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_shl",
    "hash": "90878543582398131912555934216978729139"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_shr",
    "hash": "58364234320592809814908945447908526425"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_sub",
    "hash": "1761550377730226503215581425550406645547"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_sub_signed",
    "hash": "131151713700169432262395228637630072379"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::abs_diff",
    "hash": "1101955589181842084418051988680800884942"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::bit_width",
    "hash": "964622367745615142513419866826315966825"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::borrowing_sub",
    "hash": "1160111774577750948015371924754404990540"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::carrying_add",
    "hash": "839399099643883603111230635267905598336"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::carrying_mul",
    "hash": "7148775033230133045224310617766432658"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::carrying_mul_add",
    "hash": "165879707608395664852301754224676304873"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::cast_signed",
    "hash": "1068305909615742111413521741662919977987"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_add",
    "hash": "4535980031835848579617230959678281765"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_add_signed",
    "hash": "69058904307246697512786746550751735491"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_div",
    "hash": "1778699710698094114014113279900008885190"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_div_euclid",
    "hash": "1464329500583834812016646964769873468725"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_exact_div",
    "hash": "22487709840577787112923963404621960655"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_ilog",
    "hash": "1795891024111078824717242460255938546039"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_ilog10",
    "hash": "98262059676191406989675554232822701686"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_ilog2",
    "hash": "657524104588662607189791040294234750"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_mul",
    "hash": "477098651958988769011951149044855008658"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_neg",
    "hash": "59547342395527307614736184440732956810"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_next_multiple_of",
    "hash": "1101329189405691073314404604647659116405"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_next_power_of_two",
    "hash": "1087638360531951507211396173753333133295"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_pow",
    "hash": "1727404333900007235818217669814463094823"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_rem",
    "hash": "1131310819878685252614742729362806783023"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_rem_euclid",
    "hash": "1299949685940604182715041164611560271266"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_shl",
    "hash": "565921864562686234910200557457962850745"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_shr",
    "hash": "1405009314480359442612186685525794851604"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_signed_diff",
    "hash": "660378492790579462515368282674000884008"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_sub",
    "hash": "878470778733691030510964896301702344308"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_sub_signed",
    "hash": "1301191260141194510112142390600825651470"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::count_ones",
    "hash": "69780053567309701662081517897092163915"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::count_zeros",
    "hash": "23509709203472171699604573794102806965"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::div_ceil",
    "hash": "37791332815799149275015029397277651500"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::div_euclid",
    "hash": "3139564470369733742920616521608380202"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::div_floor",
    "hash": "65848381939773158042092398071993572039"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::exact_div",
    "hash": "96221820564357867818456627939340510980"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::from_be",
    "hash": "1361061554025914332311613202400804356281"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::from_be_bytes",
    "hash": "157416542504668659028947940067518552720"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::from_le",
    "hash": "977805777082794313013532013896902369651"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::from_le_bytes",
    "hash": "269506087929098961516875842297590509490"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::from_ne_bytes",
    "hash": "63699268900374895295268222508592650791"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::highest_one",
    "hash": "134569640749516396012914477201119018898"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::ilog",
    "hash": "131183913594971257468883281613168834229"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::ilog10",
    "hash": "1744364003883415701111268527600150100596"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::ilog2",
    "hash": "88449861563355280968158167062315420431"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::is_multiple_of",
    "hash": "1589897863734178496915306478627642349470"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::is_power_of_two",
    "hash": "151185517883936732741627827983794994610"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::isolate_highest_one",
    "hash": "138994105644710765985694275315825711063"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::isolate_lowest_one",
    "hash": "1610867813918286245889253008440568119"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::isqrt",
    "hash": "46098226616189821094809450223620819248"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::leading_ones",
    "hash": "172036196490729878499400155465006393917"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::leading_zeros",
    "hash": "105284429498779607948162290697731592307"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::lowest_one",
    "hash": "158167151307796007763932890274576970324"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::max_value",
    "hash": "122873861445321391619173924930912949435"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::min_value",
    "hash": "71200078822152174496433960795407610223"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::next_multiple_of",
    "hash": "1745369321089806802914243662674309106196"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::next_power_of_two",
    "hash": "176109853407396890378982316770105066230"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::one_less_than_next_power_of_two",
    "hash": "21439102771967555682690294704873350966"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_add",
    "hash": "184328911786665518106556272606554222173"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_add_signed",
    "hash": "5664051337050136389413018335352864785"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_div",
    "hash": "102926368486440760011438603452672211786"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_div_euclid",
    "hash": "173451043884071097019097308581495372264"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_mul",
    "hash": "17598298262152778859401274893074198777"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_neg",
    "hash": "17740770400336588623615265407382098111"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_pow",
    "hash": "443309342631577120811978633115019233667"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_rem",
    "hash": "1092967143823936953713097827169442629412"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_rem_euclid",
    "hash": "1000933752846714083117119854504403552338"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_shl",
    "hash": "850467500902235476515489833643755493053"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_shr",
    "hash": "114094304150113575657329199065889149304"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_sub",
    "hash": "152058866197671415809288313614526031470"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_sub_signed",
    "hash": "1428596802199144944113584551400224494580"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::pow",
    "hash": "475471413029393194715124780384117179252"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::rem_euclid",
    "hash": "135233576144332677753642250082719949078"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::reverse_bits",
    "hash": "167806331654749763013868110286716307493"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::rotate_left",
    "hash": "1813574063822551208218232749864329729662"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::rotate_right",
    "hash": "1718830372228071111115346871901224602886"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::saturating_add",
    "hash": "182130087464531815871296518581532543577"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::saturating_add_signed",
    "hash": "107160589212919758726465890078067836225"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::saturating_div",
    "hash": "33538132287009038853253704177229540701"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::saturating_mul",
    "hash": "1087018188500972596918189917228754218934"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::saturating_pow",
    "hash": "83361932801363812818235177040637678896"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::saturating_sub",
    "hash": "651894816413691203416009571640454768162"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::saturating_sub_signed",
    "hash": "695703942886626979413226981199860048571"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_add",
    "hash": "165055686869001209782944473424063439861"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_add_signed",
    "hash": "1517244148264972325516724420790247356735"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_div",
    "hash": "50172634917321913092441399429529379297"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_div_euclid",
    "hash": "429466727126970452316516100627202506942"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_mul",
    "hash": "68804806810774257574399053074172187115"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_neg",
    "hash": "169662467830752662174184267177045772180"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_pow",
    "hash": "304228500354895035014922497533188932252"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_rem",
    "hash": "11067690014012467503189994473952832731"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_rem_euclid",
    "hash": "106880510126241290452838888405784139796"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_shl",
    "hash": "119386297544363038867579842450313369416"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_shr",
    "hash": "45017005752939629853352083411479137918"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_sub",
    "hash": "692298875437556716317098751569278304969"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_sub_signed",
    "hash": "479182723413359415115117277955819292332"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::swap_bytes",
    "hash": "106509623784789360575048430775338586221"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::to_be",
    "hash": "79514464062948820498558034711772187228"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::to_be_bytes",
    "hash": "958953263480091229710520124746479982085"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::to_le",
    "hash": "941562941802167104515844656762105855789"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::to_le_bytes",
    "hash": "41549776634141789014186053828117781063"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::to_ne_bytes",
    "hash": "1682188344562138345110819707110443305287"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::trailing_ones",
    "hash": "1844544244331705393016500200346830550780"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::trailing_zeros",
    "hash": "942628173163247228912529414412151767794"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unbounded_shl",
    "hash": "1615934035709717472315840927994285766605"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unbounded_shr",
    "hash": "82001217037085913022062973004111912316"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unchecked_add",
    "hash": "844005955147723114810574042127763524684"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unchecked_disjoint_bitor",
    "hash": "678562184463244164618297380044779335853"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unchecked_exact_div",
    "hash": "148593634889484555443878421417253470595"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unchecked_mul",
    "hash": "1648123668118653573515668654801374078647"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unchecked_shl",
    "hash": "547795948173994682914193646639697545038"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unchecked_shr",
    "hash": "1099221233813102201815747561169349768116"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unchecked_sub",
    "hash": "29408655033995434423729712432544604009"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::widening_mul",
    "hash": "98712266703151372113086075193196969487"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_add",
    "hash": "89169476262628867384568836280924609770"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_add_signed",
    "hash": "399799348939569639511532111377045297584"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_div",
    "hash": "1575293060989690294017315888623804740045"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_div_euclid",
    "hash": "122436438585984774905561466292576186579"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_mul",
    "hash": "1259692550717405461015994231273411415751"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_neg",
    "hash": "81786660578014339146378178310118537894"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_next_power_of_two",
    "hash": "27110776057906689502492570117229595475"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_pow",
    "hash": "1505542756210234811015055106370360769039"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_rem",
    "hash": "486621030347267464213070288623191407945"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_rem_euclid",
    "hash": "1404992906100978924215914702503329390917"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_shl",
    "hash": "895316386270385377911665653651908539194"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_shr",
    "hash": "1672594602195393729311058133320029952057"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_sub",
    "hash": "900698403489884169616620994826444653533"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_sub_signed",
    "hash": "181415127745985977334805959587063372202"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::abs_diff",
    "hash": "1000194174367865442812367330126476928663"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::bit_width",
    "hash": "602626474104799471015078185277483563036"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::borrowing_sub",
    "hash": "129444297936933064916772197206597292405"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::carrying_add",
    "hash": "77415054513370349336211552107702296093"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::carrying_mul",
    "hash": "1463550665639569813711573686137820707407"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::carrying_mul_add",
    "hash": "1710403846571054090710530451724607633799"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::cast_signed",
    "hash": "1822754700672355156213654038162225935045"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_add",
    "hash": "7723880831111294039174290335869047238"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_add_signed",
    "hash": "1323471423374524948912124274870488746914"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_div",
    "hash": "83332873502887682845133499108459405982"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_div_euclid",
    "hash": "1741218848679377723411490454484288852584"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_exact_div",
    "hash": "1188632035660051670912899506195502131503"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_ilog",
    "hash": "17128308313096774694357180031424005268"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_ilog10",
    "hash": "689854129401075722712930465067642217208"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_ilog2",
    "hash": "262723450653838345114381135941599683795"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_mul",
    "hash": "135832393855460429151571206913835146100"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_neg",
    "hash": "1643729953303959660315783454304179768747"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_next_multiple_of",
    "hash": "11396984465112832439291012605039974393"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_next_power_of_two",
    "hash": "1006118074877627198517453583976064271560"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_pow",
    "hash": "167624833495942424429807775381593397968"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_rem",
    "hash": "5201374051982239528269822331865148597"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_rem_euclid",
    "hash": "728563676477335604111654572340270024599"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_shl",
    "hash": "26574973077322107679606998169327978550"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_shr",
    "hash": "110830255835387486068871277131305081396"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_signed_diff",
    "hash": "54075051775510488397651884008448062889"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_sub",
    "hash": "566242541020050059017945724940350701995"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_sub_signed",
    "hash": "1729179794295897010911629757554403105332"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::count_ones",
    "hash": "170726812722128327598794844299494634784"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::count_zeros",
    "hash": "75789812520289020959314363212169438112"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::div_ceil",
    "hash": "34443165710347029885507190835110225162"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::div_euclid",
    "hash": "74705571783539388298979464026658229460"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::div_floor",
    "hash": "807193174847404601813274483854186330717"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::exact_div",
    "hash": "38480340097175136913240483722055085949"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::from_be",
    "hash": "151443637913414701509624609331586514277"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::from_be_bytes",
    "hash": "102994771643879651295031489831444441854"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::from_le",
    "hash": "176189878520113775024349189029777991106"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::from_le_bytes",
    "hash": "72635848547910900159639762986232370610"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::from_ne_bytes",
    "hash": "159932636402953660897316669366025097692"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::highest_one",
    "hash": "203724756402798007218323242436583931821"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::ilog",
    "hash": "174194304706563577518816141589701860495"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::ilog10",
    "hash": "1110796894113586142116533649130930535785"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::ilog2",
    "hash": "353479999266446203716796951762218682766"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::is_multiple_of",
    "hash": "108040111177073594474441736359795407484"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::is_power_of_two",
    "hash": "195697395999860188814128245552398774822"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::isolate_highest_one",
    "hash": "606008238297008069917708625144196947253"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::isolate_lowest_one",
    "hash": "62270597963875823410153582579237114604"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::isqrt",
    "hash": "121081294062638728029986874985738746940"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::leading_ones",
    "hash": "56240630309754067119324803469168232667"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::leading_zeros",
    "hash": "41704358428961848236769837566157544951"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::lowest_one",
    "hash": "129499522304064225893167420084042485375"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::max_value",
    "hash": "99132481503866851451250914234041479298"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::min_value",
    "hash": "17529081485761593446700961794075432953"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::next_multiple_of",
    "hash": "153658178692335928371190573873295900487"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::next_power_of_two",
    "hash": "390087614733417821813041862290449956369"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::one_less_than_next_power_of_two",
    "hash": "424259692316730894617084368250369146938"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_add",
    "hash": "1339422163444907373615255814579422860617"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_add_signed",
    "hash": "367055183519810843910588022076450648354"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_div",
    "hash": "768181433487699095818087716015898544628"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_div_euclid",
    "hash": "1560744681749896842210430407995221301941"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_mul",
    "hash": "606691763211280581014583253920360790653"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_neg",
    "hash": "12570966567580233901232525223687574516"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_pow",
    "hash": "163095791738554920324938479239302273713"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_rem",
    "hash": "496061671693125798813435261291816378196"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_rem_euclid",
    "hash": "1819393586159689269417909305956557888554"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_shl",
    "hash": "4624694383744776728213397751538673576"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_shr",
    "hash": "631524508610815458817015860020418395178"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_sub",
    "hash": "452417824535253890812251484210346923295"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_sub_signed",
    "hash": "811503354060794811116624193709109936513"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::pow",
    "hash": "954568671883179803214843814456443962697"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::rem_euclid",
    "hash": "606300949476598662112166997579468924379"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::reverse_bits",
    "hash": "65332506386910095035391740628510645794"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::rotate_left",
    "hash": "1777907716794978663415806233647063479224"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::rotate_right",
    "hash": "31229877614855959011040166020113947963"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::saturating_add",
    "hash": "6305152264309825339208199774574070134"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::saturating_add_signed",
    "hash": "71675343816905098056645700645989694123"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::saturating_div",
    "hash": "1486183774481262294216462882005452750532"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::saturating_mul",
    "hash": "528791452642197709018085693552750718392"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::saturating_pow",
    "hash": "1635803080402937528912744605161490202375"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::saturating_sub",
    "hash": "137830732332447908416476001046597741811"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::saturating_sub_signed",
    "hash": "340993473134027091610199675157811600427"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_add",
    "hash": "89278350693471142697593634434325535444"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_add_signed",
    "hash": "1096117184351614218318346695815829594014"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_div",
    "hash": "84431247329481704317770980935023014444"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_div_euclid",
    "hash": "952508939142605492712662595547195043782"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_mul",
    "hash": "158694629796686239272754958569300900841"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_neg",
    "hash": "67035565007865021128847881010162671062"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_pow",
    "hash": "45294815038870657922429611669865870156"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_rem",
    "hash": "103862961513223452774366103418395036842"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_rem_euclid",
    "hash": "95241729833687170988944415397449463055"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_shl",
    "hash": "157422062602176162585317694598402781017"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_shr",
    "hash": "320422793989585980617428524860176266078"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_sub",
    "hash": "1107131077555929395110537431243479876176"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_sub_signed",
    "hash": "70815187117117568505942247339521077730"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::swap_bytes",
    "hash": "107214398283104711213616201118105267580"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::to_be",
    "hash": "169773212898484732297170274207220658"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::to_be_bytes",
    "hash": "41964944547906750187228546233286161257"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::to_le",
    "hash": "255657542691274271816407443544881872659"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::to_le_bytes",
    "hash": "274231822893697511112285655304135451817"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::to_ne_bytes",
    "hash": "407599623769703679811521683117358761734"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::trailing_ones",
    "hash": "303212014364818985915914132779020680189"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::trailing_zeros",
    "hash": "249618551135742826813954391458526771876"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unbounded_shl",
    "hash": "105391052632094220441751552090692129365"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unbounded_shr",
    "hash": "1518814279704241172515301699995779648333"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unchecked_add",
    "hash": "67679601003668330738594385195068175921"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unchecked_disjoint_bitor",
    "hash": "144171353178104258928126994820880234220"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unchecked_exact_div",
    "hash": "1637953042205278897910400370476739392477"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unchecked_mul",
    "hash": "1654322504393726206116788205596210860586"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unchecked_shl",
    "hash": "1092905010080039974218265277262692110440"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unchecked_shr",
    "hash": "62451681931071926257012329567853401219"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unchecked_sub",
    "hash": "120971258087186187281486374852193260732"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::widening_mul",
    "hash": "1514680302864737658213911604929541242224"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_add",
    "hash": "73487623765046650547245925475113419388"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_add_signed",
    "hash": "1599024232610476839114685083393030612248"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_div",
    "hash": "122726374903480339179384213540921761207"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_div_euclid",
    "hash": "44480568351435003516786924504903425127"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_mul",
    "hash": "333718191704495657017000723461376813331"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_neg",
    "hash": "15517608372599369377046011976213679939"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_next_power_of_two",
    "hash": "935181392257911851713302806533396038441"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_pow",
    "hash": "132362981084667703983720009993633509743"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_rem",
    "hash": "2211635352278029988177259978756081973"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_rem_euclid",
    "hash": "1812327080291171217517041180556533412976"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_shl",
    "hash": "25805747541985915763744476468790778791"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_shr",
    "hash": "948701533551895039167645427760807041"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_sub",
    "hash": "131677876277792474909386694591506559646"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_sub_signed",
    "hash": "1093861102349773933911128899260626337723"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Add>::add",
    "hash": "17583873004963397151994897538347397407"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::AddAssign<i128>>::add_assign",
    "hash": "1268882130463744089213753027496811358130"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::AddAssign>::add_assign",
    "hash": "380893427326478513514242456619432586324"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Div>::div",
    "hash": "32174428026863402455192381880349590017"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::DivAssign<i128>>::div_assign",
    "hash": "1062894788253891849612206986995684657993"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::DivAssign>::div_assign",
    "hash": "1029080920024587461012592376754666696976"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Mul>::mul",
    "hash": "1822118387293932210911273366472732101314"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::MulAssign<i128>>::mul_assign",
    "hash": "11484114344334203689190792034640574705"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::MulAssign>::mul_assign",
    "hash": "1564558663406698415210720272285967386540"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Neg>::neg",
    "hash": "847191233253592185813921445243382470329"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Rem>::rem",
    "hash": "103171085847488843109117290743207253598"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::RemAssign<i128>>::rem_assign",
    "hash": "656430701455944458917068250611820009866"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::RemAssign>::rem_assign",
    "hash": "909946331321273087817579053619044914392"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Sub>::sub",
    "hash": "42990700204053884213562085268823552954"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::SubAssign<i128>>::sub_assign",
    "hash": "82064427415262552435052044160958700887"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::SubAssign>::sub_assign",
    "hash": "107054637899573585313974713694148775969"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitAnd>::bitand",
    "hash": "70493415269589840911407610488547624253"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitAndAssign<i128>>::bitand_assign",
    "hash": "162286681417157734724601659150776552085"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "762452374046528571716349262227348707038"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitOr>::bitor",
    "hash": "112062649414193849825326272542381297773"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitOrAssign<i128>>::bitor_assign",
    "hash": "993779571207148722115594003705053999024"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "18954759666120045113477312031498919860"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitXor>::bitxor",
    "hash": "71068714188589246651152651988979469532"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitXorAssign<i128>>::bitxor_assign",
    "hash": "946913328977667275616518185123361014441"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "62789010701744906472650850523357238811"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::Not>::not",
    "hash": "152335012584365706195144848729680384529"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::Shl<usize>>::shl",
    "hash": "181461534180859754029159245690468008591"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "1816938812572442742311265708220908338313"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::Shr<usize>>::shr",
    "hash": "284227336187395358211495087850065954461"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "173911322982084716677553783619024888353"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Add>::add",
    "hash": "151154056777294339945877540176791839143"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::AddAssign<i16>>::add_assign",
    "hash": "94143933892067903164493875759286034699"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::AddAssign>::add_assign",
    "hash": "237763673743415556217124776191145484869"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Div>::div",
    "hash": "71381036337599870801796161331197263401"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::DivAssign<i16>>::div_assign",
    "hash": "793928150294103599315256903571350758265"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::DivAssign>::div_assign",
    "hash": "151913476420286416410374833735167908680"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Mul>::mul",
    "hash": "7727445269776953258790119642069932331"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::MulAssign<i16>>::mul_assign",
    "hash": "109326529625675433831341302096208592756"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::MulAssign>::mul_assign",
    "hash": "1464246498075993518613929014139359552941"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Neg>::neg",
    "hash": "1718957732504416849618312264884781768145"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Rem>::rem",
    "hash": "1602027571199064722211549485693098465252"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::RemAssign<i16>>::rem_assign",
    "hash": "275353397231588875013020292960774303153"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::RemAssign>::rem_assign",
    "hash": "3803111480709389744666135965145932490"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Sub>::sub",
    "hash": "95063287172883731494326469912894691716"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::SubAssign<i16>>::sub_assign",
    "hash": "93406286100483203839785529897310194683"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::SubAssign>::sub_assign",
    "hash": "48801341355127490618911024957530535666"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitAnd>::bitand",
    "hash": "18331133260686256387866816458979057988"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitAndAssign<i16>>::bitand_assign",
    "hash": "1257207589859342341616545880198526501589"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "155403075995464031659261935548509317562"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitOr>::bitor",
    "hash": "182483547220193643062729354911722615756"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitOrAssign<i16>>::bitor_assign",
    "hash": "51602074703988969461609074501191342665"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "179031555685206478911927447634192652404"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitXor>::bitxor",
    "hash": "1407004932897518011114990903027164791364"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitXorAssign<i16>>::bitxor_assign",
    "hash": "1054672868422697894410651591815545204895"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "168717845759057778217951491526419373966"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::Not>::not",
    "hash": "181490906706048322662275188474944222756"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::Shl<usize>>::shl",
    "hash": "766676226842691421012016506164617425878"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "116444346284020100887787743352220433436"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::Shr<usize>>::shr",
    "hash": "1603259887108612520164213014911306286"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "302481570871534550215852000127651924697"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Add>::add",
    "hash": "1063463793191422008214327014455313295714"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::AddAssign<i32>>::add_assign",
    "hash": "55395048344406918853131895208814789721"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::AddAssign>::add_assign",
    "hash": "67198089552158956612898320272791491024"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Div>::div",
    "hash": "841824323584427924918019109197642341368"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::DivAssign<i32>>::div_assign",
    "hash": "156299099017270563096577245849755967012"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::DivAssign>::div_assign",
    "hash": "136147121328238069692960872810944341005"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Mul>::mul",
    "hash": "69143698338635288227030575520117815299"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::MulAssign<i32>>::mul_assign",
    "hash": "55738919247750229649964436649990105503"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::MulAssign>::mul_assign",
    "hash": "3649807661392988847840254291248478513"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Neg>::neg",
    "hash": "1032721825732619049110617667746136783335"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Rem>::rem",
    "hash": "124178545134455140466683929944944620407"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::RemAssign<i32>>::rem_assign",
    "hash": "253433655512461298213391720986142486287"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::RemAssign>::rem_assign",
    "hash": "34671080934126803524618948303891455930"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Sub>::sub",
    "hash": "674958357261708481310129760722473983573"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::SubAssign<i32>>::sub_assign",
    "hash": "39500867484451444856161390030059857736"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::SubAssign>::sub_assign",
    "hash": "1013315820146960607812600714176551226725"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitAnd>::bitand",
    "hash": "80407205364924958417579345926786121379"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitAndAssign<i32>>::bitand_assign",
    "hash": "532957278365025934714957920968287548500"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "1311692526491819487716087177006343797722"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitOr>::bitor",
    "hash": "166682735392443399417558963319560876362"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitOrAssign<i32>>::bitor_assign",
    "hash": "63652717384354227633302453048762703296"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "27312798479234911189460425113239355800"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitXor>::bitxor",
    "hash": "161982801780879410626406187099018628043"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitXorAssign<i32>>::bitxor_assign",
    "hash": "139447603458712754254531503151638567812"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "33297445294704237614089363601551659682"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::Not>::not",
    "hash": "15535952777390239167920606516926671066"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::Shl<usize>>::shl",
    "hash": "16950956691874606091800886000362065759"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "183297870601026187808571699298423479173"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::Shr<usize>>::shr",
    "hash": "770932091366806694213782841629331905950"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "473841743880436023117580378212038309170"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Add>::add",
    "hash": "268638985323292910811775787775440539573"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::AddAssign<i64>>::add_assign",
    "hash": "791539021309108894415295642355522512203"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::AddAssign>::add_assign",
    "hash": "152157591553388453652189702636233823901"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Div>::div",
    "hash": "413339811078216414110030870882147860417"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::DivAssign<i64>>::div_assign",
    "hash": "1294805360070475091017102826411692714993"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::DivAssign>::div_assign",
    "hash": "979788613079267803911823034384529801111"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Mul>::mul",
    "hash": "1454310693752445964511259212869630593344"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::MulAssign<i64>>::mul_assign",
    "hash": "6060845627090612622584090807453980910"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::MulAssign>::mul_assign",
    "hash": "157016728845319616413945206570834526302"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Neg>::neg",
    "hash": "1210678124812259552013615993789728547351"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Rem>::rem",
    "hash": "130498243605268943522099227347773911187"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::RemAssign<i64>>::rem_assign",
    "hash": "1549661176201208606612821699057917750452"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::RemAssign>::rem_assign",
    "hash": "72934537822275366863569033097372248599"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Sub>::sub",
    "hash": "141871129428961881387133355143475094931"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::SubAssign<i64>>::sub_assign",
    "hash": "1217740660262758480411707254091417281794"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::SubAssign>::sub_assign",
    "hash": "3561560243423044575771802233708710413"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitAnd>::bitand",
    "hash": "50162969233313232266109479598995136813"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitAndAssign<i64>>::bitand_assign",
    "hash": "967894105241719505716962790493025179115"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "1081484146589229113012188184673416461789"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitOr>::bitor",
    "hash": "1636709926454604578213091624259131050265"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitOrAssign<i64>>::bitor_assign",
    "hash": "64108743245711202037787803954362645"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "129223838115075689579715832321393059697"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitXor>::bitxor",
    "hash": "1833063703470503422311403246938206599647"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitXorAssign<i64>>::bitxor_assign",
    "hash": "7356270647471604151839703163555571584"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "13828591166768864245532035323541931719"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::Not>::not",
    "hash": "79689035439824619177680624430150056348"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::Shl<usize>>::shl",
    "hash": "827300206586432383510075761984632976850"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "1722462595302229576911636469648107703131"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::Shr<usize>>::shr",
    "hash": "17688511990054735014550925069935092745"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "9870558325378689093969733291533453055"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Add>::add",
    "hash": "912924988381307198310652440529491744245"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::AddAssign<i8>>::add_assign",
    "hash": "755273051494407668213386795854490063286"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::AddAssign>::add_assign",
    "hash": "906131189734557886018192220436439065121"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Div>::div",
    "hash": "56676595478447388779042088921556157142"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::DivAssign<i8>>::div_assign",
    "hash": "719884000518925819717916427997797723056"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::DivAssign>::div_assign",
    "hash": "573070015400732359717199504157584725548"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Mul>::mul",
    "hash": "19341431957843880744671425614000535524"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::MulAssign<i8>>::mul_assign",
    "hash": "1360828854622290990411458994616271023275"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::MulAssign>::mul_assign",
    "hash": "168469515409881615328418026235013215904"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Neg>::neg",
    "hash": "50736998689197078969661437952303514344"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Rem>::rem",
    "hash": "475823501561360402515162178400870349923"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::RemAssign<i8>>::rem_assign",
    "hash": "836290559206261757612845710238292261180"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::RemAssign>::rem_assign",
    "hash": "1812190160129556337414378558717114754558"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Sub>::sub",
    "hash": "1629479299635077316712237094082202391629"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::SubAssign<i8>>::sub_assign",
    "hash": "709598071890356842318062543935611076199"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::SubAssign>::sub_assign",
    "hash": "145942986777857400071583860494534358788"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitAnd>::bitand",
    "hash": "1808525111157882397110158931266951288033"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitAndAssign<i8>>::bitand_assign",
    "hash": "113855230296861063058702521009421016163"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "25925854921164593779319854054356584891"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitOr>::bitor",
    "hash": "157839435995156017399682339764070340922"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitOrAssign<i8>>::bitor_assign",
    "hash": "161052688339746012267912914714523874691"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "474503140961616184316426223388279808027"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitXor>::bitxor",
    "hash": "145409655881216852487260256185527812946"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitXorAssign<i8>>::bitxor_assign",
    "hash": "88190601767374797334450206761987309506"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "1305635712114170749914644729110422398220"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::Not>::not",
    "hash": "1717325501528025176314336167055796456028"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::Shl<usize>>::shl",
    "hash": "156365756431691189629470882646677219072"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "40960052526647027609585123207137068251"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::Shr<usize>>::shr",
    "hash": "1204741058310475206212665242244772342531"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "86726112301007552129918852571118249994"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Add>::add",
    "hash": "122896821077447528481284090354106040522"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::AddAssign<isize>>::add_assign",
    "hash": "1811155033785183990614239970118497701004"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::AddAssign>::add_assign",
    "hash": "795117477281936502013735953747694778120"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Div>::div",
    "hash": "38586914224011066081070477785208503038"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::DivAssign<isize>>::div_assign",
    "hash": "1340997883381155022918402074440747351188"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::DivAssign>::div_assign",
    "hash": "61550645606383860324245247731582346746"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Mul>::mul",
    "hash": "1528084155009394058916517764874586226019"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::MulAssign<isize>>::mul_assign",
    "hash": "40490318314653436052652051158629093605"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::MulAssign>::mul_assign",
    "hash": "155870395331369649522974245346484198049"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Neg>::neg",
    "hash": "39062562710879949221079518001509352180"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Rem>::rem",
    "hash": "1728658957100343852410367488609827599710"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::RemAssign<isize>>::rem_assign",
    "hash": "114062259490177306055286068525504059643"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::RemAssign>::rem_assign",
    "hash": "10180860588784306597625616842782581598"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Sub>::sub",
    "hash": "65657792816341543924105539652303560831"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::SubAssign<isize>>::sub_assign",
    "hash": "21735775679586119145063106845274601143"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::SubAssign>::sub_assign",
    "hash": "1530044209001367893318229870849212200253"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitAnd>::bitand",
    "hash": "596881749631924052716085142365067972895"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitAndAssign<isize>>::bitand_assign",
    "hash": "42890771613235163102982727196084723970"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "60426601293081134607924666033392141092"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitOr>::bitor",
    "hash": "174792411003192944265387252098278310419"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitOrAssign<isize>>::bitor_assign",
    "hash": "3512343776184952613232037660410434274"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "1251702683622325430113070692954749310751"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitXor>::bitxor",
    "hash": "147529661748660407717433466526953269898"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitXorAssign<isize>>::bitxor_assign",
    "hash": "15178805659497728927254174286228564044"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "16274558858822070837096752753481054041"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::Not>::not",
    "hash": "436068081202942861017724835885050026263"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::Shl<usize>>::shl",
    "hash": "3581801616034263403810993893785938541"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "311897237490077085416548252817654203889"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::Shr<usize>>::shr",
    "hash": "1775635501189985328317017670762959494170"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "1352968509457962248217356280740472334367"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Add>::add",
    "hash": "315906136205221179912109355174603056264"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::AddAssign<u128>>::add_assign",
    "hash": "1786671398411422364814394690510906760764"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::AddAssign>::add_assign",
    "hash": "1800488744005579976015856327808093821061"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Div>::div",
    "hash": "847934149737362873715087308203963266833"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::DivAssign<u128>>::div_assign",
    "hash": "19846589979437121595297041469317921086"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::DivAssign>::div_assign",
    "hash": "39798463632469782622737276709364274769"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Mul>::mul",
    "hash": "1192425641630814781513945380092928540199"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::MulAssign<u128>>::mul_assign",
    "hash": "27130756246546018103155786502098968795"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::MulAssign>::mul_assign",
    "hash": "176230495695791962839144277413312358340"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Neg>::neg",
    "hash": "155980031059246706727941957085597892406"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Rem>::rem",
    "hash": "21094048615727192262328678111534142117"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::RemAssign<u128>>::rem_assign",
    "hash": "108714382503359510862534805189761265748"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::RemAssign>::rem_assign",
    "hash": "418555849258329715311875036395328639759"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Sub>::sub",
    "hash": "1088340543210140977414411423793914036499"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::SubAssign<u128>>::sub_assign",
    "hash": "1091908902424296747116068199138533633133"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::SubAssign>::sub_assign",
    "hash": "24436895118716795492684349714037954987"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitAnd>::bitand",
    "hash": "92172694312030063086983090733495713136"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitAndAssign<u128>>::bitand_assign",
    "hash": "1608962415490608355211979690229707329792"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "7933378650786670544422034597762012837"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitOr>::bitor",
    "hash": "32482688999566922704205737494425007841"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitOrAssign<u128>>::bitor_assign",
    "hash": "105535385815324626158272537060506043577"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "1745480706326655585371797568752494202"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitXor>::bitxor",
    "hash": "25591994335141990905421433251801351045"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitXorAssign<u128>>::bitxor_assign",
    "hash": "364781917290901765411475135995673675691"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "998506757686500870818126966481721643676"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::Not>::not",
    "hash": "452084717417314229825210377669188570"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::Shl<usize>>::shl",
    "hash": "79089888301142257515904117167007278833"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "151062242708438066102399835794241794927"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::Shr<usize>>::shr",
    "hash": "654876339984401035915522801370876158811"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "152172654291753927168637783177814985627"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Add>::add",
    "hash": "50414635322073470910709347409769336745"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::AddAssign<u16>>::add_assign",
    "hash": "1345621541839240951817443431906109463132"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::AddAssign>::add_assign",
    "hash": "60945828717938377073810597046675367425"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Div>::div",
    "hash": "157747091507031113332632151593937304545"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::DivAssign<u16>>::div_assign",
    "hash": "1661855467396995879611173806137817643208"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::DivAssign>::div_assign",
    "hash": "132642568269364598735087413695290534678"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Mul>::mul",
    "hash": "5475130184009187036931324203094077828"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::MulAssign<u16>>::mul_assign",
    "hash": "707889441602605949114019271062605706894"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::MulAssign>::mul_assign",
    "hash": "950458211203339361110107350223845737672"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Neg>::neg",
    "hash": "81040912317104584349975622755038876048"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Rem>::rem",
    "hash": "22959992287419227934652736452356867024"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::RemAssign<u16>>::rem_assign",
    "hash": "440568722898285243193175000893065676"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::RemAssign>::rem_assign",
    "hash": "1578952047266743260916954971598781774991"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Sub>::sub",
    "hash": "538125207397166637817818853282011879118"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::SubAssign<u16>>::sub_assign",
    "hash": "1589985786737303071913295034548154095190"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::SubAssign>::sub_assign",
    "hash": "82021596037806777887854981684073190995"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitAnd>::bitand",
    "hash": "404142438552485276814330211645925889133"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitAndAssign<u16>>::bitand_assign",
    "hash": "1665392582805168231411805892827991193584"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "1797563922299257481514395342537387795733"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitOr>::bitor",
    "hash": "1232664104743589596712115969902021851010"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitOrAssign<u16>>::bitor_assign",
    "hash": "57225247787185983965204909457167103662"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "135542233055689088483025842634966695404"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitXor>::bitxor",
    "hash": "65247938765067761336178975721265612015"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitXorAssign<u16>>::bitxor_assign",
    "hash": "1728780230697627925015024555655204187292"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "51958139548233455662573717451913391752"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::Not>::not",
    "hash": "1305541555257259105615288392582497579484"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::Shl<usize>>::shl",
    "hash": "41283794628855224614873094921396533479"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "554414478803961769516400331064970327109"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::Shr<usize>>::shr",
    "hash": "1373163022495580292712513055474112906663"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "29199858239639140913911613988880346376"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Add>::add",
    "hash": "1161052457077841055118329575423090011674"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::AddAssign<u32>>::add_assign",
    "hash": "928532990486738484715145369746552426453"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::AddAssign>::add_assign",
    "hash": "1323307356155409264415181091953985499513"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Div>::div",
    "hash": "181864711640220102302573347299407350477"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::DivAssign<u32>>::div_assign",
    "hash": "140642959444770375678074777103447580987"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::DivAssign>::div_assign",
    "hash": "784086427891060049012640962359008271703"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Mul>::mul",
    "hash": "179481788033878672533906539480159290273"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::MulAssign<u32>>::mul_assign",
    "hash": "463875253959412652110570052751784493533"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::MulAssign>::mul_assign",
    "hash": "86526715935714682337593674198725482760"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Neg>::neg",
    "hash": "1463802797779605180213932066564135348676"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Rem>::rem",
    "hash": "15932798529942892582143124309120350107"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::RemAssign<u32>>::rem_assign",
    "hash": "175191343857883341088009476229327997835"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::RemAssign>::rem_assign",
    "hash": "90388418060739289826576827616100104399"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Sub>::sub",
    "hash": "171574054785103346014739541322198995658"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::SubAssign<u32>>::sub_assign",
    "hash": "1834659405727839796916917111398276733609"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::SubAssign>::sub_assign",
    "hash": "87222315206055769996581345856435549453"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitAnd>::bitand",
    "hash": "178739597373023093572840337935632992251"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitAndAssign<u32>>::bitand_assign",
    "hash": "481419998558807005213536321657470411198"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "161229668551102816687690811448163235902"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitOr>::bitor",
    "hash": "1060332369081093278416803641358795332192"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitOrAssign<u32>>::bitor_assign",
    "hash": "1101037996805259481816654743200328602310"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "102971588614566284129214042719567846331"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitXor>::bitxor",
    "hash": "125747014759854590989915082079444353275"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitXorAssign<u32>>::bitxor_assign",
    "hash": "1715136379622168137511741315245959148304"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "620318473051770074015527817309062802782"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::Not>::not",
    "hash": "165457756386433769868694456081081679705"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::Shl<usize>>::shl",
    "hash": "391846189244159598016183807258807617060"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "99236998799560359888567094732016808198"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::Shr<usize>>::shr",
    "hash": "157670224797894767595928506156371554835"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "29121378962291988673554533837730331394"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Add>::add",
    "hash": "1201192395553721948660257713901308120"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::AddAssign<u64>>::add_assign",
    "hash": "382848100300829943317122106591412081149"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::AddAssign>::add_assign",
    "hash": "1757423212276680244717730729879382631319"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Div>::div",
    "hash": "383117374899320537215919230660695823419"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::DivAssign<u64>>::div_assign",
    "hash": "60091822722561451897552585860989082723"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::DivAssign>::div_assign",
    "hash": "1230836035895562024813570624245817444558"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Mul>::mul",
    "hash": "1152603471477503532310983490281750488689"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::MulAssign<u64>>::mul_assign",
    "hash": "55415446990391189527288530858690872219"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::MulAssign>::mul_assign",
    "hash": "1090557872990390476111565527832669796049"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Neg>::neg",
    "hash": "28831468284602730091186751999160086401"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Rem>::rem",
    "hash": "172441369761176477057525253145810522352"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::RemAssign<u64>>::rem_assign",
    "hash": "158322648460048273744325446508427906335"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::RemAssign>::rem_assign",
    "hash": "11883129340897025760614694350404943439"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Sub>::sub",
    "hash": "80646855232062626107187069774396180865"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::SubAssign<u64>>::sub_assign",
    "hash": "112517841319681525182550525629256402463"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::SubAssign>::sub_assign",
    "hash": "859515846006671537512897104026971531404"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitAnd>::bitand",
    "hash": "8857954076141346800812460642655516248"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitAndAssign<u64>>::bitand_assign",
    "hash": "431365611117133166516787638901670416348"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "14761294927202996338901493857485928288"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitOr>::bitor",
    "hash": "4294311404421850613751071551422179651"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitOrAssign<u64>>::bitor_assign",
    "hash": "1071365067964362815417558866534321674643"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "759536972672785507717111689340107446524"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitXor>::bitxor",
    "hash": "48702570177844178454420947394415768665"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitXorAssign<u64>>::bitxor_assign",
    "hash": "774246291537976431314881294901573353524"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "56820757792792785313849997380612580864"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::Not>::not",
    "hash": "69999284048919674735625086782813640300"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::Shl<usize>>::shl",
    "hash": "1197981865704261911712710855962924404182"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "120394627681555981116105432123807904551"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::Shr<usize>>::shr",
    "hash": "998425681703575397114079470356406192326"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "1455508719453954276515286389489166150388"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Add>::add",
    "hash": "121421529092490820593756319216739212102"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::AddAssign<u8>>::add_assign",
    "hash": "1642573657379131873412144002598685984178"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::AddAssign>::add_assign",
    "hash": "9386136412354489452450491650506188495"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Div>::div",
    "hash": "449633592009722922913683169517736994072"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::DivAssign<u8>>::div_assign",
    "hash": "42690105266436092597548232720637784956"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::DivAssign>::div_assign",
    "hash": "582753493794554766513424803851866456795"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Mul>::mul",
    "hash": "769237276946023594318103138185066794808"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::MulAssign<u8>>::mul_assign",
    "hash": "298583667941433023511253801421970479462"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::MulAssign>::mul_assign",
    "hash": "176628962139024249210103910412890862901"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Neg>::neg",
    "hash": "152531362052028841878481523546482685750"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Rem>::rem",
    "hash": "887125508388850581116848108211342250700"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::RemAssign<u8>>::rem_assign",
    "hash": "34836409790622709943267897712223198379"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::RemAssign>::rem_assign",
    "hash": "105258975797272639374993238437714607969"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Sub>::sub",
    "hash": "113754230054576506931718569771640295565"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::SubAssign<u8>>::sub_assign",
    "hash": "2902160741026998337486606028943264234"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::SubAssign>::sub_assign",
    "hash": "167417420310028962912763189580246601527"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitAnd>::bitand",
    "hash": "1784506023810720236015317221469966695377"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitAndAssign<u8>>::bitand_assign",
    "hash": "146266473798108593212652338597786116762"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "1026096088965776959117415860453375559696"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitOr>::bitor",
    "hash": "1069427164488365723918131425839547689201"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitOrAssign<u8>>::bitor_assign",
    "hash": "39587374831133846805679236410265111508"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "51936661461335253732487803038149492302"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitXor>::bitxor",
    "hash": "109844472835207839854799406238527629937"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitXorAssign<u8>>::bitxor_assign",
    "hash": "13848344521171790278120784948390741154"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "1796359520029978944915944819674058376045"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::Not>::not",
    "hash": "76890881758566050697612803197784355132"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::Shl<usize>>::shl",
    "hash": "327654944332535364710961530750849594389"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "1073793147887389764317898708530213238494"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::Shr<usize>>::shr",
    "hash": "57412539050147678894827992623460305798"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "183852798587786072318007095231989965140"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Add>::add",
    "hash": "315791075319501585616144492540166724254"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::AddAssign<usize>>::add_assign",
    "hash": "1403500540134598932417203244117158086136"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::AddAssign>::add_assign",
    "hash": "83500423394596205902673847020696287768"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Div>::div",
    "hash": "171912373002336241637219912356201962847"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::DivAssign<usize>>::div_assign",
    "hash": "179952727581837577915251842651389479564"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::DivAssign>::div_assign",
    "hash": "395988290259962338115754296128083459375"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Mul>::mul",
    "hash": "133797199069538753661555830865568288660"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::MulAssign<usize>>::mul_assign",
    "hash": "647511519253047697916913867531702750202"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::MulAssign>::mul_assign",
    "hash": "1476952534789401623110910695126425865514"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Neg>::neg",
    "hash": "1173967963357911612913628126794314700110"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Rem>::rem",
    "hash": "830189402334664869815477094990243197698"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::RemAssign<usize>>::rem_assign",
    "hash": "563086040477025205616180708980064984277"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::RemAssign>::rem_assign",
    "hash": "36805948763508233659499870658197274502"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Sub>::sub",
    "hash": "164062376128821522373063714040787517739"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::SubAssign<usize>>::sub_assign",
    "hash": "261617212675745086529438365200054774"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::SubAssign>::sub_assign",
    "hash": "29866787211702481613050041462168707755"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitAnd>::bitand",
    "hash": "1551670141764110770012947235855274189989"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitAndAssign<usize>>::bitand_assign",
    "hash": "1640758302574869765610362455172967597154"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "12841978331956190751781593788369967472"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitOr>::bitor",
    "hash": "162023783624471983675307490563325575061"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitOrAssign<usize>>::bitor_assign",
    "hash": "167663432183766646757875305470946271653"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "136347332603405568017016547632285770388"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitXor>::bitxor",
    "hash": "60894886407174481322638328660912293988"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitXorAssign<usize>>::bitxor_assign",
    "hash": "91925538998125327316811864341810740622"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "116170335443971020641009891208213715786"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::Not>::not",
    "hash": "1229676791308532478617001791351918090172"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::Shl<usize>>::shl",
    "hash": "316247318642906286417354128004642841294"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "807026074909313433017755270910582111270"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::Shr<usize>>::shr",
    "hash": "308939654842939200212393928709799074490"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "182039275806615150698007209146493941986"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::abs",
    "hash": "1213085099664336100612059917925730644753"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::count_ones",
    "hash": "1733746611660570705211175134409499456351"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::count_zeros",
    "hash": "10632114121293671383114887365506048726"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::from_be",
    "hash": "90338964182325107706517459838165781923"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::from_le",
    "hash": "929296991884210972712959744181668091867"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::is_negative",
    "hash": "1446275416800778840714234841766701058216"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::is_positive",
    "hash": "1754832760467796135110506890305484327831"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::leading_zeros",
    "hash": "69955493103553327851571720948252460647"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::pow",
    "hash": "136977068266322027592601338082339347803"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::reverse_bits",
    "hash": "1692875093606531116912720953528349042712"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::rotate_left",
    "hash": "11601430349737101641401719240842538444"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::rotate_right",
    "hash": "265872968961135091811209265138989471431"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::signum",
    "hash": "174636322158274866207866488031077792713"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::swap_bytes",
    "hash": "57470907531417443921901744842588875686"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::to_be",
    "hash": "1359712887633986312313405395324474189169"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::to_le",
    "hash": "67906121410780510454399714732194825631"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::trailing_zeros",
    "hash": "16266728292042796476219381337807693361"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::abs",
    "hash": "12980711823418732107701918676624399424"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::count_ones",
    "hash": "23621398163073400164166724300746438558"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::count_zeros",
    "hash": "345496129618116559917852287700883975914"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::from_be",
    "hash": "178456211614295417617819041107715434779"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::from_le",
    "hash": "74529162737670997401989028313648319540"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::is_negative",
    "hash": "335143684262889220412650455233208431937"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::is_positive",
    "hash": "2670796481159510198146616822299121857"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::leading_zeros",
    "hash": "1723220920641850387518423733444747582591"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::pow",
    "hash": "127401640204308742884185350082263562073"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::reverse_bits",
    "hash": "94966903670821347213351895450862064456"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::rotate_left",
    "hash": "95028959553720453218270127229867941493"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::rotate_right",
    "hash": "296642335731625378212715906010354505658"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::signum",
    "hash": "1789586421950179033117474707125615618262"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::swap_bytes",
    "hash": "326416011480824049958680025249071620"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::to_be",
    "hash": "177991007370493034938370614237014923032"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::to_le",
    "hash": "231858009254467015416377238427878270716"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::trailing_zeros",
    "hash": "1335781731005826164117542349888752464130"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::abs",
    "hash": "684327488891740932516099537372854162181"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::count_ones",
    "hash": "174892272714386789911999782209903452788"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::count_zeros",
    "hash": "10915120735025436625585812240233768171"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::from_be",
    "hash": "107095523440037471215636020206297798056"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::from_le",
    "hash": "1739053151630405996512433648048619660375"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::is_negative",
    "hash": "769926027987684639114512821348816651251"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::is_positive",
    "hash": "761371678109775166513004682271877690781"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::leading_zeros",
    "hash": "802691175466659500914267571699755572567"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::pow",
    "hash": "1744136705811847513715490759631887578299"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::reverse_bits",
    "hash": "1131107779122711716311097209017674528363"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::rotate_left",
    "hash": "539745995790090552416066005589922277741"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::rotate_right",
    "hash": "172800763800192552818546909057707435176"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::signum",
    "hash": "168752651617582039453272686439507262288"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::swap_bytes",
    "hash": "8752207497247691532839795087669445788"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::to_be",
    "hash": "426655125109861102213901547867866898423"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::to_le",
    "hash": "293404023734663924016416564770511537977"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::trailing_zeros",
    "hash": "57757816302333509535625945648581921674"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::abs",
    "hash": "50563139105000092198311049467806019685"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::count_ones",
    "hash": "5440043961175058355806382760294781724"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::count_zeros",
    "hash": "637533844562858400913814089403698129910"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::from_be",
    "hash": "71264836951468398959799385291368904686"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::from_le",
    "hash": "557255935566086911017004236469344342711"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::is_negative",
    "hash": "1065237839130277264315199187497381061639"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::is_positive",
    "hash": "649511916412024581415264451208138258285"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::leading_zeros",
    "hash": "154568892643237827613739680735650955409"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::pow",
    "hash": "76687345141698737585565748014372936627"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::reverse_bits",
    "hash": "1251477639377998900114905679489201493769"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::rotate_left",
    "hash": "132165372393258519359656035753775916934"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::rotate_right",
    "hash": "108159163587622136154763463577558730223"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::signum",
    "hash": "65378508189738687973664513753169495244"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::swap_bytes",
    "hash": "1412503893724797990616239184981312654538"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::to_be",
    "hash": "1351893345611287208318237658344476496718"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::to_le",
    "hash": "38430377560218460572642225916642560504"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::trailing_zeros",
    "hash": "97015591080616187317025970450846584773"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::abs",
    "hash": "7541800894002640659007836166323280702"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::count_ones",
    "hash": "68204975971812671335713137205943507136"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::count_zeros",
    "hash": "1156782476260201805911715983203651130713"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::from_be",
    "hash": "1698610522947074269614864807212700849812"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::from_le",
    "hash": "401963355847266653115522024521558908546"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::is_negative",
    "hash": "101863589818919410359012517729326913346"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::is_positive",
    "hash": "161023824288278094231122057327935884751"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::leading_zeros",
    "hash": "104487623806713115968333019935316950806"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::pow",
    "hash": "1493493943525663115411374543784158016314"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::reverse_bits",
    "hash": "28582818776389691171882056808320058098"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::rotate_left",
    "hash": "2764461000837836100355036606010228210"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::rotate_right",
    "hash": "122164443495797387280769518203905894"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::signum",
    "hash": "177457957029197105378932578535166034006"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::swap_bytes",
    "hash": "77546506566369524538328891796552553533"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::to_be",
    "hash": "980598339445082764516101920412517155384"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::to_le",
    "hash": "46869714629946634814578667000087838219"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::trailing_zeros",
    "hash": "128496945118456332984160144106336965598"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::abs",
    "hash": "628807872127392983714244582260911815125"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::count_ones",
    "hash": "117568582791528808189221638835074221196"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::count_zeros",
    "hash": "170231284211554396917405879370971228245"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::from_be",
    "hash": "1359143076109387216913630017753251341677"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::from_le",
    "hash": "162104242930455269353623484135495942834"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::is_negative",
    "hash": "160490923614299797347966693190614133495"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::is_positive",
    "hash": "162044393722659859314766890861970164056"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::leading_zeros",
    "hash": "41515229414105599902868325566544061780"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::pow",
    "hash": "160709620035335395449824050952474268688"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::reverse_bits",
    "hash": "192657813845769689810869675142239453936"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::rotate_left",
    "hash": "143185685252660387461479216295069188661"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::rotate_right",
    "hash": "560904960310030179316093303282261651030"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::signum",
    "hash": "106494848225854576111381872601539146284"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::swap_bytes",
    "hash": "1421609955328530779910029198939712083507"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::to_be",
    "hash": "90304580996869124596263764365931607848"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::to_le",
    "hash": "119516073312752967148121234263256068296"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::trailing_zeros",
    "hash": "1373650088560570747510480641963800668578"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::count_ones",
    "hash": "20714858781008164305172449360983057648"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::count_zeros",
    "hash": "172397605834862927921036101894667587884"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::from_be",
    "hash": "99291154213949497329294462525826279113"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::from_le",
    "hash": "178909380357485834311141684892033772323"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::is_power_of_two",
    "hash": "2199101848332269859968286497453125223"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::leading_zeros",
    "hash": "34475694711038654412688763646157312051"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::next_power_of_two",
    "hash": "53956734295592022651184709557249548031"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::pow",
    "hash": "1693169469297822389510569597635090987635"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::reverse_bits",
    "hash": "9712314053196100402352320261674261583"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::rotate_left",
    "hash": "201981340055884850515389840802052395779"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::rotate_right",
    "hash": "217346311851898780911819621077782080469"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::swap_bytes",
    "hash": "10800468951645593205088312913607106309"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::to_be",
    "hash": "150152882797840301249677898130142318674"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::to_le",
    "hash": "956175664776042227714001049493853844742"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::trailing_zeros",
    "hash": "1163678597096108560110973776146609857952"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::count_ones",
    "hash": "144880819020660265792919396972303150385"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::count_zeros",
    "hash": "1354560405504049938315180998883402032804"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::from_be",
    "hash": "99291285926129605531935078165240426943"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::from_le",
    "hash": "6944174137210603164036581494999094591"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::is_power_of_two",
    "hash": "169117214490939192574247661325494591643"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::leading_zeros",
    "hash": "59239244117802674405463132328585059386"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::next_power_of_two",
    "hash": "129156260979213931628848768280262610449"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::pow",
    "hash": "1157538294917672513516040293309113509634"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::reverse_bits",
    "hash": "36655497584488273642904129820725384342"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::rotate_left",
    "hash": "435525669042201790216911512802406184354"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::rotate_right",
    "hash": "135061647611728039243589740830022517619"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::swap_bytes",
    "hash": "125061264311407241064707027201397234312"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::to_be",
    "hash": "165422783160232235655465198894413375122"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::to_le",
    "hash": "95092666136555313056498636802489899172"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::trailing_zeros",
    "hash": "533141801873321737810954622663967809164"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::count_ones",
    "hash": "75453098429592959756471696136739422429"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::count_zeros",
    "hash": "150765448324209687575529768037994745354"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::from_be",
    "hash": "1107682480242280685112567909628510612075"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::from_le",
    "hash": "95430772662784659845377969431194151442"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::is_power_of_two",
    "hash": "544192934333606323410640524886691437419"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::leading_zeros",
    "hash": "1510644040543750735917913505164766072667"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::next_power_of_two",
    "hash": "78912702694029615045149263722134217566"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::pow",
    "hash": "1465648963287611130117113942734003231848"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::reverse_bits",
    "hash": "58941112329571527910738615343922676493"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::rotate_left",
    "hash": "133224476639710100148039131420943044356"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::rotate_right",
    "hash": "158780636279920787645673634872368104219"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::swap_bytes",
    "hash": "208399695177558985814016073609560334377"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::to_be",
    "hash": "251550317076682396913081209954906639949"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::to_le",
    "hash": "17939832662496495851342702826302257423"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::trailing_zeros",
    "hash": "70827622423477247992076231088843963296"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::count_ones",
    "hash": "101260349310952157877339264393493722479"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::count_zeros",
    "hash": "18085824513242882530896083713555791430"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::from_be",
    "hash": "42210846155296855725385752367424218019"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::from_le",
    "hash": "1011242926188917717013472342155333705820"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::is_power_of_two",
    "hash": "340432405398994640410817649787436021398"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::leading_zeros",
    "hash": "157867527008230426818290700048403053559"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::next_power_of_two",
    "hash": "112345055230085848732006725800160628519"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::pow",
    "hash": "16265378582547708439876437321090688210"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::reverse_bits",
    "hash": "155762311616210522943772107850172770501"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::rotate_left",
    "hash": "180657722137643581874967059630286354771"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::rotate_right",
    "hash": "60038868742002596523732777559138948086"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::swap_bytes",
    "hash": "70090063308647692799434934095765915540"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::to_be",
    "hash": "152240961505516131787837162556940161404"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::to_le",
    "hash": "33438355182646576669460370753882151714"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::trailing_zeros",
    "hash": "58617679309980365093267034136285537132"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::count_ones",
    "hash": "1613614069226717632115361505694434904386"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::count_zeros",
    "hash": "170835878995621804586816897337195987299"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::from_be",
    "hash": "906374053157540139210490445583815396150"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::from_le",
    "hash": "1661883709248592753811552313005862134363"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::is_power_of_two",
    "hash": "36860568595336771258474513735378166165"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::leading_zeros",
    "hash": "42600796772031929677825504161732358366"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::next_power_of_two",
    "hash": "116422525342056432928582636757770982492"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::pow",
    "hash": "332029810135482201315467647183737441629"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::reverse_bits",
    "hash": "96908863552895011776496056399035414235"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::rotate_left",
    "hash": "1807070524197181908413560317440734335364"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::rotate_right",
    "hash": "44467447821782214662629440605307135435"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::swap_bytes",
    "hash": "70210984528926048301322457449774351534"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::to_be",
    "hash": "107469123569921087508989724056021532774"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::to_le",
    "hash": "50251765736207589305347375705661950294"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::trailing_zeros",
    "hash": "100138200192362709746922153227650592313"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::count_ones",
    "hash": "425293602833777645010388212864809470882"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::count_zeros",
    "hash": "5244766327795450328883899890519668088"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::from_be",
    "hash": "144571545917457592564797480943268493956"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::from_le",
    "hash": "159526022191432542354029006610364124569"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::is_power_of_two",
    "hash": "82712985841949737067854476062658727543"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::leading_zeros",
    "hash": "70771218906857559522227055453078394300"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::next_power_of_two",
    "hash": "774347515445029884416864159578103731285"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::pow",
    "hash": "85181953385585327057025016841003969736"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::reverse_bits",
    "hash": "73988751897147284007508963231559643009"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::rotate_left",
    "hash": "126293475435416480868571836890580594312"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::rotate_right",
    "hash": "358178696903460520613315626367499263840"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::swap_bytes",
    "hash": "1559695109355074653312225790053915030081"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::to_be",
    "hash": "1462701859301508294213589652141000280256"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::to_le",
    "hash": "79210161658681991978358429150319719166"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::trailing_zeros",
    "hash": "878683477517688831811583206689564386934"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::Add>::add",
    "hash": "44443695133507866173052989236644601082"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::AddAssign>::add_assign",
    "hash": "1226622271878306014711214817195631634005"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::Div>::div",
    "hash": "179277414552915012511489650553361328613"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::DivAssign>::div_assign",
    "hash": "1466619326553179173616282000924380930891"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::Mul>::mul",
    "hash": "1477690612743275457917915842808636867320"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::MulAssign>::mul_assign",
    "hash": "1028048201790918730315858150758432170523"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::Neg>::neg",
    "hash": "17379614829186422606212493198166322187"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::Rem>::rem",
    "hash": "29048993336370097756267479157405173321"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::RemAssign>::rem_assign",
    "hash": "1473475997109972535417167715970632151899"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::Sub>::sub",
    "hash": "22272019261683323803400905152375583408"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::SubAssign>::sub_assign",
    "hash": "76009413810789812433565163013657527227"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::Add>::add",
    "hash": "656663271581397563310741794773811775236"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::AddAssign>::add_assign",
    "hash": "196973745457136093912532390655138683939"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::Div>::div",
    "hash": "607357767823900722714988361227709155344"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::DivAssign>::div_assign",
    "hash": "489049920946002559018412753823101084757"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::Mul>::mul",
    "hash": "30460775194166185987855856242595917692"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::MulAssign>::mul_assign",
    "hash": "55368406257963698105322110987394460663"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::Neg>::neg",
    "hash": "164840806539152991893600125848246543443"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::Rem>::rem",
    "hash": "456530304931751435310666391288470030122"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::RemAssign>::rem_assign",
    "hash": "335904285113328987014404974390116111659"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::Sub>::sub",
    "hash": "142867308355902062391047573867110195867"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::SubAssign>::sub_assign",
    "hash": "169163488812773952059661101958074693194"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::Add>::add",
    "hash": "508271486912745440511615952333843888632"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::AddAssign>::add_assign",
    "hash": "18956986065478905248274522268812588148"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::Div>::div",
    "hash": "40411134638494638899413497119247190888"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::DivAssign>::div_assign",
    "hash": "1233995194335149931011754639753308013918"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::Mul>::mul",
    "hash": "112772361378118273376324851843635159707"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::MulAssign>::mul_assign",
    "hash": "1220828688087836937512717070067213744387"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::Neg>::neg",
    "hash": "32926970026138873229479387231018895957"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::Rem>::rem",
    "hash": "1077074035826284205215674638304126304918"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::RemAssign>::rem_assign",
    "hash": "267060808248569095511119335864952545525"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::Sub>::sub",
    "hash": "27673722025584846169039272051445894009"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::SubAssign>::sub_assign",
    "hash": "46228467634741728016612407512115087158"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::Add>::add",
    "hash": "486506952336466454910641261049628885738"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::AddAssign>::add_assign",
    "hash": "1646902801968599935918084062800638997619"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::Div>::div",
    "hash": "110892709662826101237375107061877207457"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::DivAssign>::div_assign",
    "hash": "127556470121600645837364189635958353606"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::Mul>::mul",
    "hash": "102949047447791174707669251865891123542"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::MulAssign>::mul_assign",
    "hash": "238794372394615823111288896987511635444"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::Neg>::neg",
    "hash": "109060992173910544547553666489134560572"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::Rem>::rem",
    "hash": "4168999617077776579925232765403951205"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::RemAssign>::rem_assign",
    "hash": "1177864940717511898716542524319361929757"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::Sub>::sub",
    "hash": "134957012108515249315205515502635002285"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::SubAssign>::sub_assign",
    "hash": "431781121473193876914969833807129757468"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::Add>::add",
    "hash": "180939457702266364756387883455748594090"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::AddAssign>::add_assign",
    "hash": "1999871034812690435694664659178872696"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::Div>::div",
    "hash": "13530624666631948691330061281020655561"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::DivAssign>::div_assign",
    "hash": "113640192987836571414630896461408584847"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::Mul>::mul",
    "hash": "72315241419013024954366599269533297735"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::MulAssign>::mul_assign",
    "hash": "2234085422594024569962970703753780960"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::Neg>::neg",
    "hash": "38254880224299109094957584209368999998"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::Rem>::rem",
    "hash": "182716850561567425683998683983154797678"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::RemAssign>::rem_assign",
    "hash": "1491207352652838106512101190110310121637"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::Sub>::sub",
    "hash": "183712329653106417033778184199131496129"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::SubAssign>::sub_assign",
    "hash": "93764636167607197113427241180114661125"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::Add>::add",
    "hash": "128898929114319553843582809842619278033"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::AddAssign>::add_assign",
    "hash": "1644197866328340381917189776815391398023"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::Div>::div",
    "hash": "1182860124965675521214018444737397607073"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::DivAssign>::div_assign",
    "hash": "901272607822794521616185502070289782683"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::Mul>::mul",
    "hash": "60762647226157463984812188789211220300"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::MulAssign>::mul_assign",
    "hash": "84714985226194901668098704157023505002"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::Neg>::neg",
    "hash": "138060884963648772472362125532294170054"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::Rem>::rem",
    "hash": "872477265323748931410034390846620102090"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::RemAssign>::rem_assign",
    "hash": "69272829053533532731508305060564775866"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::Sub>::sub",
    "hash": "316948154444344853616153856658645809704"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::SubAssign>::sub_assign",
    "hash": "482406881103991301910464989784879322994"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::Add>::add",
    "hash": "176038123912851636717181001177697939738"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::AddAssign>::add_assign",
    "hash": "59091337361690296495696656698339938095"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::Div>::div",
    "hash": "5504465159916226736233644551835612098"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::DivAssign>::div_assign",
    "hash": "116162006915438678092222360406072105553"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::Mul>::mul",
    "hash": "1361830654905566867612806665866894359978"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::MulAssign>::mul_assign",
    "hash": "163393867513561910826001496837052273"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::Neg>::neg",
    "hash": "1063506368158562375213024324256626800440"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::Rem>::rem",
    "hash": "1455698140165167994816868010447350743132"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::RemAssign>::rem_assign",
    "hash": "372816163441321267312692719832673013825"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::Sub>::sub",
    "hash": "123706226571764293649022195857975919765"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::SubAssign>::sub_assign",
    "hash": "50434228286183609677801054014415728473"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::Add>::add",
    "hash": "102300503039285186936401996126082004143"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::AddAssign>::add_assign",
    "hash": "1286344711565208954911442041396815841395"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::Div>::div",
    "hash": "394188825106289093612275166131450967405"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::DivAssign>::div_assign",
    "hash": "83916736728564446928911693755497753405"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::Mul>::mul",
    "hash": "1480280019405466309480857819887466736"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::MulAssign>::mul_assign",
    "hash": "116273164296678303514326589032284010368"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::Neg>::neg",
    "hash": "569787614750004160010776100613042378655"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::Rem>::rem",
    "hash": "68263926643546691864513921346928148306"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::RemAssign>::rem_assign",
    "hash": "2005829136022826129192926948709026179"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::Sub>::sub",
    "hash": "96516014671134718329949757920969022478"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::SubAssign>::sub_assign",
    "hash": "1489423196006039965505893748480305928"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::Add>::add",
    "hash": "77664444813391686578066042580911250377"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::AddAssign>::add_assign",
    "hash": "1158381074792105069515382714189996898247"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::Div>::div",
    "hash": "139860864721840033027850854066502040001"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::DivAssign>::div_assign",
    "hash": "505839498131792058314432207301867876374"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::Mul>::mul",
    "hash": "70808776637997449716795958299873086851"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::MulAssign>::mul_assign",
    "hash": "112045764696684393615924347439946418071"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::Neg>::neg",
    "hash": "3952901743078497551630941128387146276"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::Rem>::rem",
    "hash": "1185316329399955436015784821353885604874"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::RemAssign>::rem_assign",
    "hash": "167155519982412449337878944689384099049"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::Sub>::sub",
    "hash": "176587700949268650555220436235253969683"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::SubAssign>::sub_assign",
    "hash": "1094273692647140649811372148382567400097"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::Add>::add",
    "hash": "58702829733803041278209976036510386047"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::AddAssign>::add_assign",
    "hash": "914042721093238250410403807064275377829"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::Div>::div",
    "hash": "45579142048074889213321230078084515909"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::DivAssign>::div_assign",
    "hash": "85212405800446537259012932506649898423"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::Mul>::mul",
    "hash": "178727180376454345549324156966071132796"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::MulAssign>::mul_assign",
    "hash": "1808485623078224856710645856059773530955"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::Neg>::neg",
    "hash": "73385635675963071203554325423636870423"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::Rem>::rem",
    "hash": "75457982509565385558449066300474734788"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::RemAssign>::rem_assign",
    "hash": "939485256855840733415141502227336312222"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::Sub>::sub",
    "hash": "34388100492490933128558531691774740632"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::SubAssign>::sub_assign",
    "hash": "1067169204404641421916317878375012633942"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::Add>::add",
    "hash": "1402902597459728935916070669393820481166"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::AddAssign>::add_assign",
    "hash": "787303143716339277712905266112423462558"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::Div>::div",
    "hash": "21583290123968285234545601428509381550"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::DivAssign>::div_assign",
    "hash": "58711212094198103298457065561795244361"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::Mul>::mul",
    "hash": "1842262503462546508817712572233277033184"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::MulAssign>::mul_assign",
    "hash": "1295147707920106548811304353011912597124"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::Rem>::rem",
    "hash": "1478241970835155501511055888431993250982"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::RemAssign>::rem_assign",
    "hash": "119128309620204045384365079817452421882"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::Sub>::sub",
    "hash": "117860692007150857879979453393140389874"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::SubAssign>::sub_assign",
    "hash": "37171400200190225467619862218546801023"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::Add>::add",
    "hash": "136932066740021611447653180798913862776"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::AddAssign>::add_assign",
    "hash": "1136693712062826788313523590757276345412"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::Div>::div",
    "hash": "42970800222571564306495992008323959314"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::DivAssign>::div_assign",
    "hash": "1140659912304972430411452136862166853840"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::Mul>::mul",
    "hash": "177198181867662933244066889668312740896"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::MulAssign>::mul_assign",
    "hash": "885132676446520377914249979541314880363"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::Rem>::rem",
    "hash": "79550056097734619312886036852942532799"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::RemAssign>::rem_assign",
    "hash": "8785863816951305058508210548063562603"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::Sub>::sub",
    "hash": "175056666661777748461314928867213942631"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::SubAssign>::sub_assign",
    "hash": "466018795213947751816917718150518488183"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::Add>::add",
    "hash": "147082916948660022139522338496775099983"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::AddAssign>::add_assign",
    "hash": "174355281150286471671830262593496597407"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::Div>::div",
    "hash": "65203605087481216765956782074874375619"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::DivAssign>::div_assign",
    "hash": "900894681384665895317569845695268162327"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::Mul>::mul",
    "hash": "167590433297483224656812144139614142495"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::MulAssign>::mul_assign",
    "hash": "169802044628672220951674063631105999813"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::Rem>::rem",
    "hash": "424359451296716518917226365832879427330"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::RemAssign>::rem_assign",
    "hash": "98201208198305113017449816946077520777"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::Sub>::sub",
    "hash": "99176271258766477013272333171532202265"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::SubAssign>::sub_assign",
    "hash": "170544993272943776716324829632816239721"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::Add>::add",
    "hash": "1047226150592121619916791738425576155989"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::AddAssign>::add_assign",
    "hash": "152986766196414844916519978314917461009"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::Div>::div",
    "hash": "138811212228727350724477848972604910203"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::DivAssign>::div_assign",
    "hash": "1336996554940776999316248185732470250876"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::Mul>::mul",
    "hash": "359819478907929188013602569371333223640"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::MulAssign>::mul_assign",
    "hash": "1529107134624838038314045008243897253034"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::Rem>::rem",
    "hash": "72761304372883324528891952071758675679"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::RemAssign>::rem_assign",
    "hash": "71020868718922891295297090674155788062"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::Sub>::sub",
    "hash": "128926335496488349305282019115669664377"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::SubAssign>::sub_assign",
    "hash": "173839817657395971418614100409683771676"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::Add>::add",
    "hash": "104071935845405627502683988192867621419"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::AddAssign>::add_assign",
    "hash": "921818024699677455618018864647058716262"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::Div>::div",
    "hash": "17398617958855612112693169980447801917"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::DivAssign>::div_assign",
    "hash": "1121848682149855291813585908283984167641"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::Mul>::mul",
    "hash": "1426084362925482196314162655546120958514"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::MulAssign>::mul_assign",
    "hash": "1789452120354532371911265561406784465295"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::Rem>::rem",
    "hash": "364778951657854310011852463264419495840"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::RemAssign>::rem_assign",
    "hash": "88226505168359003336578091489083482501"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::Sub>::sub",
    "hash": "29874235246931591729627593783721476352"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::SubAssign>::sub_assign",
    "hash": "143052136274747400144891423970263416921"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::Add>::add",
    "hash": "136034500819524922108481081516304886547"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::AddAssign>::add_assign",
    "hash": "1140718361170680638413202916536227675596"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::Div>::div",
    "hash": "166420124560367274913477064584242996843"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::DivAssign>::div_assign",
    "hash": "13211279411104622587249227531073579389"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::Mul>::mul",
    "hash": "44216514909823486154857943284213338730"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::MulAssign>::mul_assign",
    "hash": "65752901451835306846753595962363338559"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::Rem>::rem",
    "hash": "160795408949865961775843320697525466875"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::RemAssign>::rem_assign",
    "hash": "195759120116020759715178538890870988657"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::Sub>::sub",
    "hash": "1766965486933727189812269861983304321521"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::SubAssign>::sub_assign",
    "hash": "103739426248503478092450330291434834982"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<bool as ops::bit::BitAnd>::bitand",
    "hash": "180888839812469963578187423573149022252"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<bool as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "478971231389937157416326380440003474964"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<bool as ops::bit::BitOr>::bitor",
    "hash": "15880649510421165924462327340646785458"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<bool as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "162095602182665906544506679949106054700"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<bool as ops::bit::BitXor>::bitxor",
    "hash": "1232275349043439496317490107459798511825"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<bool as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "175087117160319930449100853395959491635"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<bool as ops::bit::Not>::not",
    "hash": "127683964376859283925683988932427222351"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::BitAnd>::bitand",
    "hash": "1793961265973431064515729700594531162990"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "1241510405288407974411984324814276534865"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::BitOr>::bitor",
    "hash": "117205160468176404582129207928733339495"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "69156557079406364369665547120925359150"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::BitXor>::bitxor",
    "hash": "1784866493702880405010307828209832009808"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "114319754445131123567849389635670261473"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Not>::not",
    "hash": "17678035325146688367592291255783715019"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<i16>>::shl",
    "hash": "1051911981647690722111204613777739555606"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<i32>>::shl",
    "hash": "110102014567663319524818404262982198541"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<i64>>::shl",
    "hash": "758731034086364857812735993490705200503"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<i8>>::shl",
    "hash": "531168847392001917816701902598796389016"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<isize>>::shl",
    "hash": "1098986312911094505187177439838502003"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<u128>>::shl",
    "hash": "5577814679247007613053440336152216731"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<u16>>::shl",
    "hash": "83742444005501111915519486066795361900"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<u32>>::shl",
    "hash": "9458164198075436098441723664710260292"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<u64>>::shl",
    "hash": "895618851544763746210299514925838297341"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<u8>>::shl",
    "hash": "590390251558523788313003853718173739431"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<usize>>::shl",
    "hash": "79805846545077512506602781619243730067"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl>::shl",
    "hash": "247773998114642927412189136459238751450"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "83363938389101778639790775566646208794"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "1445473320005068861615052336098623747711"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "71901710818760044716359351118633088982"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "1925007595183906505815502702055857102"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "1457048255740161770311303287841026547519"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "86911545811241002147449785774807519051"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "139118577809642484063545915979340874535"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "1120148614679631851712474838035961886493"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "59333154752070655394404653247873226961"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "68096445399310962337809330477255015740"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "147482162180043816891516668382357786045"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign>::shl_assign",
    "hash": "7556668661766596343960853874978314047"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<i16>>::shr",
    "hash": "84916344515952752311788207558762884282"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<i32>>::shr",
    "hash": "52435484804804974527887903063871429119"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<i64>>::shr",
    "hash": "99200338107386963438875147620934595728"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<i8>>::shr",
    "hash": "6002511271470047711842111137051231966"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<isize>>::shr",
    "hash": "84572228637481824113234247337348394219"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<u128>>::shr",
    "hash": "172840407549012038064588194484624315373"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<u16>>::shr",
    "hash": "98529237184070080603325217213842599989"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<u32>>::shr",
    "hash": "565793581731622844414465320972761106167"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<u64>>::shr",
    "hash": "168160293718402717796006462411306155686"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<u8>>::shr",
    "hash": "167313332357784287245486503405016857501"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<usize>>::shr",
    "hash": "106187454283532802646410670095037736903"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr>::shr",
    "hash": "182375434031114599539512497756359352528"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "18647020375226198568306492128729894470"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "803818414561058551017069233093297353384"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "280909251878029845113781147932695349214"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "1072322582668858946410307969766306208030"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "967028155847984257317629590315728698959"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "62123004683544042334122393337983403092"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "680681089049655304613976866870325197816"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "1124038531436754727114334870572731094433"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "476989955395865267113652353744414620663"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "148349359005370492983416662727600259097"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "75371176521444391497882480854453679307"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign>::shr_assign",
    "hash": "95404696205850427385426410530805114958"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::BitAnd>::bitand",
    "hash": "30999621367085913989064922995058555589"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "183119649035395466311083314971991810356"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::BitOr>::bitor",
    "hash": "958410034813325860813708132645304900385"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "1194048836123447585914152821111891812803"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::BitXor>::bitxor",
    "hash": "530209102971899771613139995716482225573"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "14534946895362681165577647113830344591"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Not>::not",
    "hash": "390704660758868529713619147365142652722"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<i128>>::shl",
    "hash": "369994512059665529011824533827247579731"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<i32>>::shl",
    "hash": "1639290913960759156116682426187809890466"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<i64>>::shl",
    "hash": "16556233869150050072540551005019625618"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<i8>>::shl",
    "hash": "1920072071515277101984210099652972766"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<isize>>::shl",
    "hash": "1570192154120420937310441844352059545526"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<u128>>::shl",
    "hash": "26053435693509470397442453677652520863"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<u16>>::shl",
    "hash": "436528668831739602863484883866884212"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<u32>>::shl",
    "hash": "175668710277344790717049921182367096317"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<u64>>::shl",
    "hash": "83917819824467964607965356447679706718"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<u8>>::shl",
    "hash": "338217972981689382512099038577953327794"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<usize>>::shl",
    "hash": "1239780450572637696116386716012417840287"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl>::shl",
    "hash": "86562294690753258401862883002877994286"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "108139894333007392088407054213939166924"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "153899869152315193032064355613875996109"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "180134946943351161466933928062743639522"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "150467069344341470639713676978229844677"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "145765022243663327525981714445191795261"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "1516275153751637215711181411315279463052"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "1171037943147285775413080685913671757831"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "11878269676799555667997730912130817883"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "101933826162340095597050755493018436830"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "1456655223469814776915998521162224515319"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "19067839164712385752831665001148190629"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign>::shl_assign",
    "hash": "27219357548888200939455605708237645125"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<i128>>::shr",
    "hash": "12057382964003069878124771720455500341"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<i32>>::shr",
    "hash": "1256409340042216278214447668224584092328"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<i64>>::shr",
    "hash": "4855085874526357853596980962507078831"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<i8>>::shr",
    "hash": "129549758049917823815649535830816274403"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<isize>>::shr",
    "hash": "136916879351759009275847092297721965458"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<u128>>::shr",
    "hash": "1844315565305047916917037197446064436370"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<u16>>::shr",
    "hash": "1394223434116806892811619105111723075215"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<u32>>::shr",
    "hash": "274716319226916251113442083492208625184"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<u64>>::shr",
    "hash": "157177600882174100561634877618458373241"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<u8>>::shr",
    "hash": "163150434055219134854227902963864027566"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<usize>>::shr",
    "hash": "1800765062640731072818207021641813878113"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr>::shr",
    "hash": "591872212869530612416338306096322256878"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "1082340542743816482711603340217545789507"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "459499356469728970110265743287028469603"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "1302279817857854583414174176526989643"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "928151701679396305412687298312203592192"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "19499127775214975625941921011030064005"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "72177573456919826245532219479828185527"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "146357978976679609376362584762161285691"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "1740785398940159915311336406693563965267"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "394587160039029921714366589990787237054"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "168768552310252957874622463938008876967"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "702084249891481971616688585986828147322"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign>::shr_assign",
    "hash": "1162679549120175703215547779223070739050"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::BitAnd>::bitand",
    "hash": "650044328517567129113752435107124188048"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "523172257735532328410814092662594886432"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::BitOr>::bitor",
    "hash": "18325128366124804776304968433652290530"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "563689526491549462312349431393450620873"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::BitXor>::bitxor",
    "hash": "27847127737280982298448831176809313783"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "161512554564293508671022529456522544118"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Not>::not",
    "hash": "7673007499254698290421491074594689023"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<i128>>::shl",
    "hash": "372311767662588850914962226310870392516"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<i16>>::shl",
    "hash": "73933326459529212161103129326366366838"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<i64>>::shl",
    "hash": "945692740491802532516018972435014904337"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<i8>>::shl",
    "hash": "127284191918108322810994354230432984396"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<isize>>::shl",
    "hash": "166321779917433172976781337389312292866"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<u128>>::shl",
    "hash": "84916113287272664946116860756496215350"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<u16>>::shl",
    "hash": "60693524282621363113855407251761051106"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<u32>>::shl",
    "hash": "95569891536194112417990256218041626095"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<u64>>::shl",
    "hash": "49102357936995576999148573322335668801"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<u8>>::shl",
    "hash": "158071309878467722208845899662268064375"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<usize>>::shl",
    "hash": "127326226923293594714402772329831927248"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl>::shl",
    "hash": "115924809352986079492091746732207053045"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "98598243525298719369833084251205034922"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "5043021829551019955307616851817362747"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "97970598415413255698288556835718214161"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "162156145419285016963941393087307618633"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "141436038589986961691348712749643181981"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "1945107935776758139505761860965820103"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "602531937561273793810416282539112713337"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "675844158209124258512529760667288112736"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "1442165165511903602517824575001507841849"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "193903806064003679113566531225636948611"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "67858588031009218683476456680220132025"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign>::shl_assign",
    "hash": "77317202335624914285205463009906169736"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<i128>>::shr",
    "hash": "456288907330992092510475190493236783962"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<i16>>::shr",
    "hash": "111754207126526766211742199700332401485"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<i64>>::shr",
    "hash": "105560726995714340898671671697877890712"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<i8>>::shr",
    "hash": "1778482807745585723151711071786303547"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<isize>>::shr",
    "hash": "46824558396391075394133281167811439576"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<u128>>::shr",
    "hash": "62394613565502557831164743745815044594"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<u16>>::shr",
    "hash": "63193189775272741887688234090540009590"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<u32>>::shr",
    "hash": "6085411744444831555751785705114369522"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<u64>>::shr",
    "hash": "970523756054894816718027193809522169566"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<u8>>::shr",
    "hash": "1982978121002814698728983659544162953"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<usize>>::shr",
    "hash": "1252052816599646751916304726329220275217"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr>::shr",
    "hash": "1827190494142028610312458171742585639234"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "159625308452030148557683645364724176960"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "768788867936880734310297679208696962768"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "109642174482252228310588668556024668328"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "970751713481959125514679021117052854938"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "185861858140891289917530776264281708224"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "2858329227941886526873854772282381792"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "1367072615336776444510120125888338253351"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "136285508211340574525627896169264205909"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "104540169487069478378765314881949094651"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "113268035535056379856637557233958677472"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "1576059130050384470911293747112190065091"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign>::shr_assign",
    "hash": "179296206631014686195005660766763394118"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::BitAnd>::bitand",
    "hash": "177130259178368690396729436287782876554"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "92882203864182182873350311004168437437"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::BitOr>::bitor",
    "hash": "1251816211255550521312426977523193617803"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "152021507572025898891965891497268639569"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::BitXor>::bitxor",
    "hash": "92045038203233898566524957035306722228"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "557078001531630199912064711572310358392"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Not>::not",
    "hash": "895189105872042485310848603794885148381"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<i128>>::shl",
    "hash": "519886691618675496512472538252030165644"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<i16>>::shl",
    "hash": "600615754133054323114097439753133105226"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<i32>>::shl",
    "hash": "88143148239519780834881409085594168064"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<i8>>::shl",
    "hash": "1502636840613491635213427928807402919287"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<isize>>::shl",
    "hash": "923936075760432042913220817899822884807"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<u128>>::shl",
    "hash": "111478624590468670187088100192306220699"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<u16>>::shl",
    "hash": "56752266533731922342260253612077938022"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<u32>>::shl",
    "hash": "1164382060108326787316293534434865127647"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<u64>>::shl",
    "hash": "126499948389464426157703256714979285668"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<u8>>::shl",
    "hash": "215926913750976314314068960078188379447"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<usize>>::shl",
    "hash": "310908990363402840213294445644379965674"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl>::shl",
    "hash": "133086992157339230893167096127497255732"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "12022878947101614564287908552213206934"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "30123396312511948915366517312336076979"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "638730999575703380617188084555849314122"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "1217762814122437976313182829545440985626"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "334873923646372835711511981573344062594"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "171676398080742981299424224295233571809"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "162614080508702718738798474103051710211"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "1259268014087360420011611684771853658785"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "372109983934819602616853292906523361675"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "164294904009126686317481259368574742723"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "303849986522885022816895171834573922284"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign>::shl_assign",
    "hash": "4873473886976984715686454178756620308"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<i128>>::shr",
    "hash": "122365134876934392045583807237646072549"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<i16>>::shr",
    "hash": "785121155105854338814422036466866947632"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<i32>>::shr",
    "hash": "70476468952767819045644687821285988757"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<i8>>::shr",
    "hash": "108064687474438328212422910312087279159"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<isize>>::shr",
    "hash": "115888423558453966127052454938741917186"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<u128>>::shr",
    "hash": "541746987242881221315467975113861720213"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<u16>>::shr",
    "hash": "72016824465103687715830593610750451690"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<u32>>::shr",
    "hash": "984934232578002877118130435142307114962"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<u64>>::shr",
    "hash": "18615051785657418998105309652196250887"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<u8>>::shr",
    "hash": "252076705605397521315528966773778893585"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<usize>>::shr",
    "hash": "182334890493823297886561690050581993760"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr>::shr",
    "hash": "64323871058965727704958960261292247532"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "15541455504005157713039772872834355506"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "154246902498121656678561234135209622361"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "1711363271878871031416326473484662138184"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "629938562882551976515434068473019460031"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "1387440559648143154715489911502773094979"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "6349366645910570185696228170527570916"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "1277302577812576879817916744075541774693"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "174367599262246686849412450417936204822"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "139045564333225764262391973990296542059"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "125468399431457930326653850093260157867"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "81519386163857207772552616680129146329"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign>::shr_assign",
    "hash": "804100658757004607312580641724776428737"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::BitAnd>::bitand",
    "hash": "265934978426920325916139362043655563972"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "187656684940978225016253050002036561123"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::BitOr>::bitor",
    "hash": "1038439527947300424913485084014949533102"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "5450037425521674909577390011047896829"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::BitXor>::bitxor",
    "hash": "235161805994662708410335021936686730330"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "15141007315562777526300561672575058394"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Not>::not",
    "hash": "1537246348192884380817198491291708678007"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<i128>>::shl",
    "hash": "1500222601461225284011832209505507953980"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<i16>>::shl",
    "hash": "127788797766387834265333094192172909614"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<i32>>::shl",
    "hash": "876235355238578336118280187620191125577"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<i64>>::shl",
    "hash": "530570851229112537916340369895843732996"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<isize>>::shl",
    "hash": "173405338315610398805406335749852954840"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<u128>>::shl",
    "hash": "182574574704852282226519848780600798700"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<u16>>::shl",
    "hash": "346432348359634357810611753614394803704"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<u32>>::shl",
    "hash": "628821373677192073115424274188373035854"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<u64>>::shl",
    "hash": "1477471625163490621112228502358591359135"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<u8>>::shl",
    "hash": "1180349748674282520415885034699269524954"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<usize>>::shl",
    "hash": "1606409143407086665411344928646153381243"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl>::shl",
    "hash": "134388452439948460947565307447803923567"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "175953538873950220399780597119695289401"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "1167003380555467295713232357533484137535"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "1569672052333385953617317644114812707678"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "1401783655487088490715473219237431444699"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "43694178837655065098507930732722649717"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "81212066706277228045835755535670554742"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "10009080133801249209206330620284505960"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "157677295055230541791791240253338165399"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "668883006836114865313569556620229909277"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "124132922445684848416224827673667408259"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "39009543811048322152485258776391493287"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign>::shl_assign",
    "hash": "962687785728676651912193198008104208542"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<i128>>::shr",
    "hash": "13222223846942633966469387293813757454"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<i16>>::shr",
    "hash": "129354384357152128994023349724798298718"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<i32>>::shr",
    "hash": "440495384250601219917573140621983067495"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<i64>>::shr",
    "hash": "43353337102038939705025310351928996745"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<isize>>::shr",
    "hash": "1631066441864363168615667381643584165156"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<u128>>::shr",
    "hash": "15069049925476723758863568158100110495"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<u16>>::shr",
    "hash": "75512060347123581438434446194896001055"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<u32>>::shr",
    "hash": "822231302293652279812725886846301741897"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<u64>>::shr",
    "hash": "48692503252786750910817176032854459638"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<u8>>::shr",
    "hash": "764391322216929091916149774401401124429"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<usize>>::shr",
    "hash": "3033423382609026958834303599617874497"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr>::shr",
    "hash": "875301376810742097310968926539412077305"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "95759869150350915395931148901724047094"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "966573987564931707017359187861522454667"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "115230667055948088454393139001470862292"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "168176285236441151926312375282462478137"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "1091082086919245787312340753575872961032"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "1579416481525834184311006498817808888954"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "162176833042729613188518167084402371982"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "3851098092345842197412019227477802363"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "1526741996395734916812177274703204838375"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "13646406535042712152794047470294216622"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "1257251827191501629917477858341469208838"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign>::shr_assign",
    "hash": "53827271385891498898001380351226400171"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::BitAnd>::bitand",
    "hash": "76432713787776865871390085984946573323"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "570033010102498626916392611870710373476"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::BitOr>::bitor",
    "hash": "1323797199755613456415087515572321384502"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "651287959015088433815609945310032982203"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::BitXor>::bitxor",
    "hash": "241120474533219045010068829348993239515"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "1666658215730000042116961826414410846042"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Not>::not",
    "hash": "67465127472702371406606122427792653881"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<i128>>::shl",
    "hash": "124252566629162540710211192826211941778"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<i16>>::shl",
    "hash": "20407857733618364992738031189710182728"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<i32>>::shl",
    "hash": "138030836316318330562705735004424424551"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<i64>>::shl",
    "hash": "690869730633248965014633810433932065133"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<i8>>::shl",
    "hash": "15797597993320895974122687561255552224"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<u128>>::shl",
    "hash": "1354521478861213832417369059715475099588"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<u16>>::shl",
    "hash": "5290613153892006742932393402090598920"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<u32>>::shl",
    "hash": "73044831548130434963339717085621650239"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<u64>>::shl",
    "hash": "108057653085261391483904948960105328058"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<u8>>::shl",
    "hash": "1445128940321687963511513948550196397843"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<usize>>::shl",
    "hash": "1108913661172951105713458460969346870843"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl>::shl",
    "hash": "1335078385529779343411326551404773804995"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "409274026799394035318142342381754427094"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "97696315587218349949731581860100477770"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "1074217503505370800214103044388330466680"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "169715040062927096011126536896115620000"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "17565826884387431223646560914014227551"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "9683412502234847984414239394166788790"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "19522654744549055613155489562102960063"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "177059723492227865776533243919827248565"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "1587223423242235282517648148242404892437"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "142015009514126465491366015343125854399"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "156241664859030108363248602002617615015"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign>::shl_assign",
    "hash": "87042012756659532117718515910945786415"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<i128>>::shr",
    "hash": "14398438736517685926909515444084201162"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<i16>>::shr",
    "hash": "1697961557145322975113608464033088978107"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<i32>>::shr",
    "hash": "367164258728188495417286818328852304887"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<i64>>::shr",
    "hash": "84362255641806963116400185139711593383"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<i8>>::shr",
    "hash": "87832914315465300562381055478756435810"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<u128>>::shr",
    "hash": "164816886859396541954681472477225506407"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<u16>>::shr",
    "hash": "136688853923481111711046403475651137213"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<u32>>::shr",
    "hash": "158454290273284830745964738137700027277"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<u64>>::shr",
    "hash": "135777831227197261636397131917100822104"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<u8>>::shr",
    "hash": "855915505936532129878383965975151651"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<usize>>::shr",
    "hash": "140083736536507792678573490579968389476"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr>::shr",
    "hash": "97603112602427614806458485286914582838"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "633033568981137758111529831047668315802"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "69523313764541147078545550611566451610"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "18413833995721936053569619699773900797"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "844770127360393136610758605775174070762"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "111507185457589686111050260274356354970"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "343850695580523517716617606970814942217"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "1186049160652638151215329780278637040919"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "652179450612552890316734168878977202822"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "393495215948651898416378032098946644896"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "370654684617466413012581098721631117893"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "135587522201197448211467079381551232901"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign>::shr_assign",
    "hash": "167027232061063640710519469352000458165"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::BitAnd>::bitand",
    "hash": "698683589886308818816517921220151373414"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "123017279453042730449152307198036222275"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::BitOr>::bitor",
    "hash": "177851452712269505323409598312676865030"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "837803172349769495414167924563365128710"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::BitXor>::bitxor",
    "hash": "663730877907690999916441226851998822783"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "1796958685945818952113461391853864300285"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Not>::not",
    "hash": "58051596585258972945980051594985678051"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<i128>>::shl",
    "hash": "112495606245423211109883350240530298314"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<i16>>::shl",
    "hash": "96686797552048085984574146579993005860"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<i32>>::shl",
    "hash": "39137622506336967938731668104704170779"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<i64>>::shl",
    "hash": "1287011823963922977317571017329766960624"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<i8>>::shl",
    "hash": "4348935130766861177116042714398442100"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<isize>>::shl",
    "hash": "1657539756365399379415109198607340425139"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<u16>>::shl",
    "hash": "164911093200342327824872613281736554723"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<u32>>::shl",
    "hash": "1336946185925578093713438611242629189694"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<u64>>::shl",
    "hash": "182616157802369360283050352765235265077"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<u8>>::shl",
    "hash": "101567652060558363396060830755476229342"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<usize>>::shl",
    "hash": "1333121520770841230913836652975325703751"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl>::shl",
    "hash": "21065839941386437356566846014298232799"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "560601792088403816411193390335817606510"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "7286423301850060633738383931602569260"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "1225897943844593006512182713127596218031"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "24430215384470987569351338536717158801"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "624728818333329451717911659287261981332"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "167199075836402970079881338460500719590"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "54640285621692748396618279601558470638"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "44923138085046037111022094778969555085"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "15703922009065763410487786272660294980"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "135397585856537308549041378875272120980"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "92645675095284498027762993550272452185"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign>::shl_assign",
    "hash": "1315306681532292427014257992496562735101"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<i128>>::shr",
    "hash": "665011930864485544418402139627349278519"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<i16>>::shr",
    "hash": "710561866590987664815244306066189390488"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<i32>>::shr",
    "hash": "146166504108819161152238247312375191991"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<i64>>::shr",
    "hash": "1671831135230185286313848274305846604976"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<i8>>::shr",
    "hash": "1765941086975858800012517978772437594578"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<isize>>::shr",
    "hash": "154074820181499543705973179981078971176"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<u16>>::shr",
    "hash": "27723917931885615359683619149726644776"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<u32>>::shr",
    "hash": "1074290691146986455913220414394998355820"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<u64>>::shr",
    "hash": "188154924526487045617977071600152927877"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<u8>>::shr",
    "hash": "36228608325673870544611055550960056098"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<usize>>::shr",
    "hash": "31489583802490444244369012944294891814"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr>::shr",
    "hash": "1494106883292313936017579750248879702568"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "12538550557066233502563259039350679244"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "797308284339715255613418674503815214363"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "70375929778438969709980457220685585862"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "1271101983074831800811928802481427999605"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "58200750323953636002458604086138734842"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "205528280389973032011324337459939170426"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "28874133311605197234469741603507629317"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "1365992578558262081812445854956193194163"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "134889430978504513464157262520049825282"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "14671811483515516939338431445299183761"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "165631479488509255547765512481609374237"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign>::shr_assign",
    "hash": "4139114608543593465567357386321147577"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::BitAnd>::bitand",
    "hash": "173427564344180055716436903422574280366"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "29251664065752521517947747337802533290"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::BitOr>::bitor",
    "hash": "150746008680852917955868139213269468543"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "161315285151589141234139981392983931158"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::BitXor>::bitxor",
    "hash": "1154461855422818694111067968965886474884"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "221041606764486233011969717250576302894"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Not>::not",
    "hash": "468617947150591468914297928418923287178"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<i128>>::shl",
    "hash": "63627388099872270336521154994503857838"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<i16>>::shl",
    "hash": "684001467647245617918111725261451659152"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<i32>>::shl",
    "hash": "1669401695199587978914625328020029874055"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<i64>>::shl",
    "hash": "611031479428844733517002708644253628012"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<i8>>::shl",
    "hash": "57556201932280956439107937247171399155"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<isize>>::shl",
    "hash": "9162740072896255169130977666831784748"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<u128>>::shl",
    "hash": "138073773879659261103890470062109767232"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<u32>>::shl",
    "hash": "364936906377227211710947794863491976999"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<u64>>::shl",
    "hash": "669351057927740328411077596574964227577"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<u8>>::shl",
    "hash": "432879750867627762912436726342858514036"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<usize>>::shl",
    "hash": "54092777277852142899682146768365027715"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl>::shl",
    "hash": "144756502957481607414489579177398107801"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "1406955408444701256111693382016776816107"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "1058219818070999166014991462144549347067"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "62503935392705689254675010456476929601"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "104214552772085738944678747200355186885"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "109713009650072312299500846064429597253"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "253112130907389083615677765139831725740"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "612447828583840436610398310341857587136"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "1013952304263165487311098424980538170498"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "1122984055125181539213721305062412680717"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "158742375869050510124352468199391193569"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "3803938892909682109784623515605622405"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign>::shl_assign",
    "hash": "56275673718564273696484231190939685272"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<i128>>::shr",
    "hash": "847317206451198360614320017276115616486"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<i16>>::shr",
    "hash": "916260449698083443410594158701379820685"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<i32>>::shr",
    "hash": "67472990855912439212773902503127889495"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<i64>>::shr",
    "hash": "415192957626502827118286029751148023882"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<i8>>::shr",
    "hash": "1072667847943323394213084003568220842541"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<isize>>::shr",
    "hash": "85926974754168598625479074701509468247"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<u128>>::shr",
    "hash": "107922163026461907622643163844699676150"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<u32>>::shr",
    "hash": "485915223492594619514764989821076116849"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<u64>>::shr",
    "hash": "11092255168326787065490666672631908883"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<u8>>::shr",
    "hash": "1547561459444795339216932138971012945854"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<usize>>::shr",
    "hash": "17925727503641095687826717515893544103"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr>::shr",
    "hash": "76970808753788104168506652157955678317"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "1710507000627251318217465679030598917644"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "464282397391528237411216701692161467288"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "1293416623542554936617896794202181489993"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "179604938547372205751081475871288037418"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "42244867104792319844988093148019317367"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "117389570474324209365120953252940910618"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "76313130287868757993611291085463300695"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "26808161971584114193425476363374287495"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "1610079363733730907615162535182860274050"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "113461780143352055122598279533395549933"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "18272134386115547414357290305965859397"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign>::shr_assign",
    "hash": "102804061524072660142537794353836993328"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::BitAnd>::bitand",
    "hash": "1673863980281935094918086807947924435950"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "142306829594416791405668441502308780360"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::BitOr>::bitor",
    "hash": "1362525230579241954911680216599631237669"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "1139148345620831428749659470558028569"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::BitXor>::bitxor",
    "hash": "162208078896197843325103381628613305541"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "578707714099568739917051142064995408895"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Not>::not",
    "hash": "172880903987547070335734359297523817745"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<i128>>::shl",
    "hash": "163705261862499430953598653880423335223"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<i16>>::shl",
    "hash": "1102260420914714551311105865199798307623"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<i32>>::shl",
    "hash": "14658350123571528263100094820429056192"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<i64>>::shl",
    "hash": "381776224518002643512122732329189411596"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<i8>>::shl",
    "hash": "1588446216658386288611057521989552313464"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<isize>>::shl",
    "hash": "1090946927338323267715155563495299349901"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<u128>>::shl",
    "hash": "8947519438040413384360350613695683109"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<u16>>::shl",
    "hash": "286866382675375066014873368496479884381"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<u64>>::shl",
    "hash": "7909490610206413864354209015194717573"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<u8>>::shl",
    "hash": "66070526653236084614750203993133760938"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<usize>>::shl",
    "hash": "1702223401998509807117309042873300208634"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl>::shl",
    "hash": "885492306666178193413077054527521590248"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "218810956684961630113862449150705416625"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "55499629409874667589637106196084782063"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "1382813912018031450316645779169515714281"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "6844341869731607847896563335664042930"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "130766201658280833194116820848475759214"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "164199954366957163696610442239128843299"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "42742387108541224211116046274951688012"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "1261336879352056997711017667141534454157"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "1361296407650342816717256880582955857537"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "201589564017521372411717175795657527759"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "1605030014331966010913476043509743416723"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign>::shl_assign",
    "hash": "219933464340008248817578467515520077714"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<i128>>::shr",
    "hash": "57373957725973100585366874644162041628"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<i16>>::shr",
    "hash": "852549275396991398513602816091127487672"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<i32>>::shr",
    "hash": "168882209805648853906718556383339671394"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<i64>>::shr",
    "hash": "114151450368156592083078753702505281935"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<i8>>::shr",
    "hash": "21197608907701827619662023498180176744"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<isize>>::shr",
    "hash": "1114353026237248819611668801423260902028"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<u128>>::shr",
    "hash": "22606564707713544165005318799459670979"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<u16>>::shr",
    "hash": "71782951134938861159557261428222646596"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<u64>>::shr",
    "hash": "78888514238505564456476879798635885301"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<u8>>::shr",
    "hash": "143728921758734510162608205387835078441"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<usize>>::shr",
    "hash": "72565183847859785915776875246161852946"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr>::shr",
    "hash": "364690327770845926311867381198481136970"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "265206472096378688811464819093910062855"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "120406625836379378058796161130064288929"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "543079161144690968712141468935017447690"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "137356413575533408421046968379415822062"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "22492555266214795268197165756263134310"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "238846472373105996315820829218373102598"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "1433588639731021201310072703606111492529"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "1794355800322051165816389096918864638419"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "23451861148311286067215987617742168866"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "781036565853835770816006593157324073092"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "1581789081223100552812132101437735419093"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign>::shr_assign",
    "hash": "636711106934505501813840520987223402477"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::BitAnd>::bitand",
    "hash": "1808562075960099839614038510097164394688"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "5979574480440437904684316671733277667"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::BitOr>::bitor",
    "hash": "1135559399325654492218132048801409445489"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "93116706388311722292643752338495899418"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::BitXor>::bitxor",
    "hash": "722130409549399173514301067504257831340"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "16292966239304108680212321696710145693"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Not>::not",
    "hash": "133629259423682831247158747001292226448"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<i128>>::shl",
    "hash": "10742574220998421618164493741967838356"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<i16>>::shl",
    "hash": "1810680995021524971216217492950855755413"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<i32>>::shl",
    "hash": "177076017682049724264467080469411679501"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<i64>>::shl",
    "hash": "5358813538842901138456648486059178191"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<i8>>::shl",
    "hash": "1181683109011583069315934210827444322396"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<isize>>::shl",
    "hash": "1012888877497360212017794266500799651834"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<u128>>::shl",
    "hash": "166839037157192174061613727125412486429"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<u16>>::shl",
    "hash": "536820189421080754712620582316871731723"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<u32>>::shl",
    "hash": "259973385383139492817527305682536745599"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<u8>>::shl",
    "hash": "99852920796402937142214643074814974245"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<usize>>::shl",
    "hash": "141775538301465149417667422620012041668"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl>::shl",
    "hash": "41960749435837042785043983981024960568"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "96326310862744023696124703171630059045"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "1022499256757808816217404588271470260969"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "541719514153374163117771795689359840199"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "36647015297322078648244062429472910308"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "169092947638381073414535368241586453818"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "16778022640344321393039402103940771965"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "880231602657740389814315252212361168416"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "57538796077081138176423928859925250270"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "399855870144741934617492186703231598118"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "434577352903522908611082001490974500485"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "804903437495049546312861832205175626026"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign>::shl_assign",
    "hash": "748221215514892494510195499569996773109"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<i128>>::shr",
    "hash": "797079848154364800310070961530742669837"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<i16>>::shr",
    "hash": "797670007140260239112778945298424786489"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<i32>>::shr",
    "hash": "824440218948136033814484786368757470593"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<i64>>::shr",
    "hash": "1532732045950840639110649831760588508373"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<i8>>::shr",
    "hash": "601168048160620772915506101840192520804"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<isize>>::shr",
    "hash": "178838280612050467917366734706707007617"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<u128>>::shr",
    "hash": "7867226877433661838288505582398719656"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<u16>>::shr",
    "hash": "1710710212269797832010941849776964585966"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<u32>>::shr",
    "hash": "74922203822057127656700924308741580812"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<u8>>::shr",
    "hash": "34656551857064113291646292482060839714"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<usize>>::shr",
    "hash": "11513606239542329399581391988681075078"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr>::shr",
    "hash": "1321124021882285062611644025059940489284"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "92697703381866720187405754226116935270"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "233885649068252243811399278606348730895"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "63508606017509845554721294486848460710"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "58050929176070166775917707775551867516"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "1240740044971777801913632054307021580771"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "16571689904232535752738239570861536966"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "1186775781334651035115679196608955393569"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "150473795165838453116951120386625814508"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "951667255078741195410747375718965760873"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "168604736978726548471257515182036441142"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "134851092662173306928213753976820176072"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign>::shr_assign",
    "hash": "107255870892426289868753924860462801280"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::BitAnd>::bitand",
    "hash": "163055073906346081982558935553484599094"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "1522427492371917782218325836342021640496"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::BitOr>::bitor",
    "hash": "59695870353254306817249476797728848578"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "139814459349455595639552591847916859779"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::BitXor>::bitxor",
    "hash": "289612724989721365516133400572838343886"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "176236439661713818449535612280479753431"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Not>::not",
    "hash": "99837276899522761007121209212334173819"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<i128>>::shl",
    "hash": "508667239327231633915387578354016325960"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<i16>>::shl",
    "hash": "916041512222775024514460395009486318408"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<i32>>::shl",
    "hash": "155970302844763628402121285289327002392"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<i64>>::shl",
    "hash": "808934360180627873017254552452460267355"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<i8>>::shl",
    "hash": "62057211226735332512679192507681922078"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<isize>>::shl",
    "hash": "677367843074027646015523656261420592049"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<u128>>::shl",
    "hash": "166255109411838319513926387049157415921"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<u16>>::shl",
    "hash": "43967345708014526809974059569206849403"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<u32>>::shl",
    "hash": "1403862266853799578611691161760208135067"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<u64>>::shl",
    "hash": "182309797498385172963915336734868443334"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<usize>>::shl",
    "hash": "480140163070194193115677616825326340672"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl>::shl",
    "hash": "116624148708669674639855630566004052147"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "11271401955760429538406934173652122000"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "1967066170555311172902577438438373586"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "97795971475833611536171633277841531212"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "167983383936283971011444513208329454821"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "19615257899991107717181453945251554361"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "88975326402766764279516329941158194023"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "162950429530235688712252269372311567955"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "25573692665680057105876398649788821308"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "315633406897775510116243366687859250766"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "31876747051981091357950187070812260511"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "138297592999071778325741884403528883445"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign>::shl_assign",
    "hash": "1531456666341757137512469269875571476111"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<i128>>::shr",
    "hash": "754197432425754410112401480428816434684"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<i16>>::shr",
    "hash": "87526084686295297193720898425541111029"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<i32>>::shr",
    "hash": "1824545850793668501711727416187395106257"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<i64>>::shr",
    "hash": "354532329683367467211198523713108491855"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<i8>>::shr",
    "hash": "9419146855454227805718331080452770349"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<isize>>::shr",
    "hash": "1624867880203725226817828487864175243873"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<u128>>::shr",
    "hash": "11454160539387169877769659196592548743"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<u16>>::shr",
    "hash": "1556640042171270433314688230839185696488"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<u32>>::shr",
    "hash": "81753001705480145513172101527899601807"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<u64>>::shr",
    "hash": "17726076552561092217250030753296431577"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<usize>>::shr",
    "hash": "26866794836986693268015963595740135946"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr>::shr",
    "hash": "836788694656239547112464699888023079113"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "1311843228785684573808852424257497906"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "364937954481968752015681319714456548393"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "166987764041380645782048529335165995757"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "68036368165516142543844703208850786807"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "17363132347426779319981909448914141018"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "179264596804976352131270333756314081054"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "33813079874299572728089705370012881865"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "11122122109670600636735097380991263406"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "135220035808320771312875625592081576708"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "1338317524739320523217785338509239830842"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "892605463085677581810911371553207703625"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign>::shr_assign",
    "hash": "1073798466548681669113311383960904352501"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::BitAnd>::bitand",
    "hash": "16771476367484425796694558168446815942"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "622081157005077260314759493815852452203"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::BitOr>::bitor",
    "hash": "1275051197829266829712766665742757903591"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "1703766482140987019715402094983961130279"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::BitXor>::bitxor",
    "hash": "119701704121378852088213748178095036811"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "62264876436565555709202518453233799836"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Not>::not",
    "hash": "30973535777796014528485311002999565280"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<i128>>::shl",
    "hash": "95500265818439564612581777440464755977"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<i16>>::shl",
    "hash": "742941193128237660316037769766674984828"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<i32>>::shl",
    "hash": "1615970477525004432516242022432635199216"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<i64>>::shl",
    "hash": "59611195679488938916128027125139791052"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<i8>>::shl",
    "hash": "177143839742673294728788100357317693915"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<isize>>::shl",
    "hash": "99715262891713471154158783227161473159"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<u128>>::shl",
    "hash": "250763384606542192814743560506138038410"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<u16>>::shl",
    "hash": "106246458764779885921481007994418318733"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<u32>>::shl",
    "hash": "1028395694229329958516090929334568287186"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<u64>>::shl",
    "hash": "1047943483571934702513549839785730526760"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<u8>>::shl",
    "hash": "1045939082103161190915320270118623077777"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl>::shl",
    "hash": "155993972515903955041553233337320267286"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "1798402194881908881514013292263900727821"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "763656029763328247114383701792110493317"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "791513032780282592516564941643373820903"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "602677369170419498318233987375284819718"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "1009325097354152099015471812228154680959"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "170875579274450377035829601805437319514"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "38762452606098379476904398359350750675"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "104304635410177571013494581739861066473"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "104133625539030463513839758016185806196"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "386275648075037302311568212055613367065"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "30293361389874947074637051168295788430"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign>::shl_assign",
    "hash": "21972549607832508981574660158419350251"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<i128>>::shr",
    "hash": "264101220513686804911847415151110636412"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<i16>>::shr",
    "hash": "971221643427394612911384775283819999354"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<i32>>::shr",
    "hash": "101155205964421464167338163848358930954"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<i64>>::shr",
    "hash": "908682508045369252912303319007563102045"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<i8>>::shr",
    "hash": "1668650657427923235312253167138902188502"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<isize>>::shr",
    "hash": "1647436777064542551313081228223107843490"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<u128>>::shr",
    "hash": "117726796073459770036093351975115627254"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<u16>>::shr",
    "hash": "1700838212683236656576759255800517381"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<u32>>::shr",
    "hash": "238818209493624794013391137017349333459"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<u64>>::shr",
    "hash": "30758204697238112064420236563153216739"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<u8>>::shr",
    "hash": "127574341745270831528413377486926428409"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr>::shr",
    "hash": "25420271673514437128898122906823010824"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "1830922351316872807016196223995710910484"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "79002835650453447117736181593637260619"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "875279787195796434612647828141516335313"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "27478393509062300006994688139224682862"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "369265034820782587012795877669193768034"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "62758935646192353173722640446958259706"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "131845519455823243369929893867164896326"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "365368886707563193912397097748007777042"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "74521995352015400644579075353776479604"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "133266491362746914119536632728346726752"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "35942176761691364015496357013195269719"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign>::shr_assign",
    "hash": "69369011543899827447321548414184154640"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "<ops::index_range::IndexRange as clone::Clone>::clone",
    "hash": "366974912920839386515801963218903644372"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "<ops::index_range::IndexRange as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "14407072510473362121585929695509736529"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "<ops::index_range::IndexRange as cmp::PartialEq>::eq",
    "hash": "105868480734732351109523174461050716086"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "<ops::index_range::IndexRange as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by",
    "hash": "134659546361337577875790172492877718078"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "<ops::index_range::IndexRange as iter::traits::double_ended::DoubleEndedIterator>::next_back",
    "hash": "172082636219792331976556636606818475635"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "<ops::index_range::IndexRange as iter::traits::exact_size::ExactSizeIterator>::len",
    "hash": "880099753416866301016817688796490528363"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "<ops::index_range::IndexRange as iter::traits::iterator::Iterator>::advance_by",
    "hash": "481835834712446476615556589325864506358"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "<ops::index_range::IndexRange as iter::traits::iterator::Iterator>::next",
    "hash": "773976761025248625915288347453542326393"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "<ops::index_range::IndexRange as iter::traits::iterator::Iterator>::size_hint",
    "hash": "1501910614844152319711596790706136212807"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::IndexRange::assume_range",
    "hash": "212928144464252219117278275833446446061"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::IndexRange::end",
    "hash": "884246074448727927914595282961940941192"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::IndexRange::len",
    "hash": "975615807404907599012293873143289411403"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::IndexRange::new_unchecked",
    "hash": "1754912251153572666416298790825990122972"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::IndexRange::next_back_unchecked",
    "hash": "1420130676107142547213269032426901816001"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::IndexRange::next_unchecked",
    "hash": "607950375783975557417942361899442451503"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::IndexRange::start",
    "hash": "27547235193633795771352944920978011050"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::IndexRange::take_prefix",
    "hash": "84614053864276317792721518336362996588"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::IndexRange::take_suffix",
    "hash": "159736813722695483973676959462633832720"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::IndexRange::zero_to",
    "hash": "97912592448095803783191936410021855138"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::verify::proof_for_index_range_new_unchecked",
    "hash": "551150047287067492413662467301369738002",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::verify::proof_for_index_range_next_back_unchecked",
    "hash": "986159639522092295910886084431230900231",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::verify::proof_for_index_range_next_unchecked",
    "hash": "92144211047900601394479696047266878697",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ops/range.rs",
    "func": "<ops::range::RangeFull as clone::Clone>::clone",
    "hash": "51752851975167651917599410809504188585"
  },
  {
    "crate": "core",
    "file": "core/src/ops/range.rs",
    "func": "<ops::range::RangeFull as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "69470044579129534834211368379959643874"
  },
  {
    "crate": "core",
    "file": "core/src/ops/range.rs",
    "func": "<ops::range::RangeFull as cmp::PartialEq>::eq",
    "hash": "523097387427171583516900264263599857045"
  },
  {
    "crate": "core",
    "file": "core/src/ops/range.rs",
    "func": "<ops::range::RangeFull as default::Default>::default",
    "hash": "81626075067298248429457633037843071814"
  },
  {
    "crate": "core",
    "file": "core/src/ops/range.rs",
    "func": "ops::range::RangeInclusive::<usize>::into_slice_range",
    "hash": "146790947205902300248608006721818154078"
  },
  {
    "crate": "core",
    "file": "core/src/option.rs",
    "func": "option::unwrap_failed",
    "hash": "1262555611173615611410428101371636009066"
  },
  {
    "crate": "core",
    "file": "core/src/option.rs",
    "func": "option::verify::verify_as_slice",
    "hash": "81077079948431654495871158517589906998",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/panic.rs",
    "func": "cell::panic_already_borrowed::do_panic",
    "hash": "467005488139168322614992226177877716092"
  },
  {
    "crate": "core",
    "file": "core/src/panic.rs",
    "func": "cell::panic_already_mutably_borrowed::do_panic",
    "hash": "91389747737060612736113477458009999405"
  },
  {
    "crate": "core",
    "file": "core/src/panic.rs",
    "func": "char::methods::encode_utf16_raw::do_panic",
    "hash": "771657548169247668416871073529313726204"
  },
  {
    "crate": "core",
    "file": "core/src/panic.rs",
    "func": "char::methods::encode_utf8_raw::do_panic",
    "hash": "1440090119059276225817676096245272798728"
  },
  {
    "crate": "core",
    "file": "core/src/panic.rs",
    "func": "f128::<impl f128>::clamp::do_panic",
    "hash": "102633087293198091748903178684548038016"
  },
  {
    "crate": "core",
    "file": "core/src/panic.rs",
    "func": "f16::<impl f16>::clamp::do_panic",
    "hash": "1304495806021350928315109576622777190991"
  },
  {
    "crate": "core",
    "file": "core/src/panic.rs",
    "func": "f32::<impl f32>::clamp::do_panic",
    "hash": "1407383081852595764410218893634298134190"
  },
  {
    "crate": "core",
    "file": "core/src/panic.rs",
    "func": "f64::<impl f64>::clamp::do_panic",
    "hash": "14736520608719053799135236038773685789"
  },
  {
    "crate": "core",
    "file": "core/src/panic.rs",
    "func": "num::from_ascii_radix_panic::do_panic",
    "hash": "1214906432696303910315736243901795791154"
  },
  {
    "crate": "core",
    "file": "core/src/panic.rs",
    "func": "slice::<impl [T]>::copy_from_slice::len_mismatch_fail::do_panic",
    "hash": "1642223875233631504511785038737652816786"
  },
  {
    "crate": "core",
    "file": "core/src/panic.rs",
    "func": "slice::index::slice_index_fail::do_panic",
    "hash": "1440090119059276225817676096245272798728"
  },
  {
    "crate": "core",
    "file": "core/src/panic/location.rs",
    "func": "panic::location::Location::<'_>::caller",
    "hash": "1113032932815665948217565294476098756403"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_bounds_check",
    "hash": "1664829672909308150416377153180822060571"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_cannot_unwind",
    "hash": "242181715916107705416384707665609293091"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_add_overflow",
    "hash": "1072673519469559488813453527349548976770"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_async_fn_resumed",
    "hash": "349657222904462149212616592995763522873"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_async_fn_resumed_drop",
    "hash": "1335467998759013293416653527462738356104"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_async_fn_resumed_panic",
    "hash": "6671996234787244407531471198066377601"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_async_gen_fn_resumed",
    "hash": "830335467169936691315054046533870997056"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_async_gen_fn_resumed_drop",
    "hash": "1088979907211123224115851570164170819682"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_async_gen_fn_resumed_panic",
    "hash": "1805829311917702760813547210256212675351"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_coroutine_resumed",
    "hash": "5007351754840108096785729122042516196"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_coroutine_resumed_drop",
    "hash": "73430812404311502652626868957646901800"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_coroutine_resumed_panic",
    "hash": "1143565852981359394518134118974303400454"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_div_by_zero",
    "hash": "159758387025722397652298960757191525578"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_div_overflow",
    "hash": "150205495392768814893023078285399970790"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_gen_fn_none",
    "hash": "280580742645108837215018195653929072234"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_gen_fn_none_drop",
    "hash": "158599826685426328796537051658922303818"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_gen_fn_none_panic",
    "hash": "129292076861084820858170453651868860807"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_mul_overflow",
    "hash": "127306522968094690215901836632143286926"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_neg_overflow",
    "hash": "91143579459581669531697410698845229475"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_rem_by_zero",
    "hash": "25276774499438944304038182962141356458"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_rem_overflow",
    "hash": "1112274134915535276716097379666871971188"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_shl_overflow",
    "hash": "1023896071097414870617009867557788509225"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_shr_overflow",
    "hash": "176071303351409588245568559702828443159"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_sub_overflow",
    "hash": "55567374554354043818187702774263751884"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_in_cleanup",
    "hash": "856776841529391899418036583055339103886"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_invalid_enum_construction",
    "hash": "1015098900316965815914966596255662629960"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_misaligned_pointer_dereference",
    "hash": "7388277597605764559593831443417829472"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_null_pointer_dereference",
    "hash": "167632833524046317173183025505928308152"
  },
  {
    "crate": "core",
    "file": "core/src/pat.rs",
    "func": "<char as pat::RangePattern>::sub_one",
    "hash": "307766307881677337312512219077692063413"
  },
  {
    "crate": "core",
    "file": "core/src/pat.rs",
    "func": "<i128 as pat::RangePattern>::sub_one",
    "hash": "361281578073822233517043545491594558594"
  },
  {
    "crate": "core",
    "file": "core/src/pat.rs",
    "func": "<i16 as pat::RangePattern>::sub_one",
    "hash": "58528607818106380167270894772523028305"
  },
  {
    "crate": "core",
    "file": "core/src/pat.rs",
    "func": "<i32 as pat::RangePattern>::sub_one",
    "hash": "145021566784989974155960562683351724759"
  },
  {
    "crate": "core",
    "file": "core/src/pat.rs",
    "func": "<i64 as pat::RangePattern>::sub_one",
    "hash": "1408633512491585446317364637628690059994"
  },
  {
    "crate": "core",
    "file": "core/src/pat.rs",
    "func": "<i8 as pat::RangePattern>::sub_one",
    "hash": "1140441808157094468115655549303136774853"
  },
  {
    "crate": "core",
    "file": "core/src/pat.rs",
    "func": "<isize as pat::RangePattern>::sub_one",
    "hash": "212913348759484913014430859639319942525"
  },
  {
    "crate": "core",
    "file": "core/src/pat.rs",
    "func": "<u128 as pat::RangePattern>::sub_one",
    "hash": "51891148070238279566653551391697783280"
  },
  {
    "crate": "core",
    "file": "core/src/pat.rs",
    "func": "<u16 as pat::RangePattern>::sub_one",
    "hash": "1840704400811288768616956195441800233012"
  },
  {
    "crate": "core",
    "file": "core/src/pat.rs",
    "func": "<u32 as pat::RangePattern>::sub_one",
    "hash": "81105124175130538917774131319535214362"
  },
  {
    "crate": "core",
    "file": "core/src/pat.rs",
    "func": "<u64 as pat::RangePattern>::sub_one",
    "hash": "132522479241255032134107294641309842647"
  },
  {
    "crate": "core",
    "file": "core/src/pat.rs",
    "func": "<u8 as pat::RangePattern>::sub_one",
    "hash": "1204396810144656349224059851333882376"
  },
  {
    "crate": "core",
    "file": "core/src/pat.rs",
    "func": "<usize as pat::RangePattern>::sub_one",
    "hash": "639509894398381713112087612479311821648"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::Alignment as clone::Clone>::clone",
    "hash": "1175343087208465347513466616613459906017"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::Alignment as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1575422666862478312614030415211857333506"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::Alignment as cmp::Ord>::cmp",
    "hash": "1546445554760545130515472529981863323764"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::Alignment as cmp::PartialEq>::eq",
    "hash": "1687043565489565286816393188563214506807"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::Alignment as cmp::PartialOrd>::partial_cmp",
    "hash": "13493593393868133915439552907779913455"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::Alignment as convert::TryFrom<num::nonzero::NonZero<usize>>>::try_from",
    "hash": "892341479036606168411545565026506286025"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::Alignment as convert::TryFrom<usize>>::try_from",
    "hash": "931475801702098523114347913886012672372"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::Alignment as default::Default>::default",
    "hash": "1413009431915819452017776810764645880771"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::Alignment as ub_checks::Invariant>::is_safe",
    "hash": "144877226433824033613380567864192529906"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::AlignmentEnum as clone::Clone>::clone",
    "hash": "12559740367480838507886035148901052375"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::AlignmentEnum as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "964894992477855073313140429528301903390"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::AlignmentEnum as cmp::PartialEq>::eq",
    "hash": "71611202058661207025593126105578681869"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::<impl convert::From<ptr::alignment::Alignment> for num::nonzero::NonZero<usize>>::from",
    "hash": "5988075202567892016019814834317464944"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::<impl convert::From<ptr::alignment::Alignment> for usize>::from",
    "hash": "58511434068774707116799979293247780545"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::Alignment::as_nonzero",
    "hash": "201181288689639124415825169679319142024"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::Alignment::as_usize",
    "hash": "112152844438854238887994758767167519478"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::Alignment::log2",
    "hash": "567128593324850714615319747611018204654"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::Alignment::mask",
    "hash": "1799336182310472890312792116405543605007"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::Alignment::max",
    "hash": "170995228381040670003312121577996373865"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::Alignment::new",
    "hash": "1736977182485076761317539610623208326380"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::Alignment::new_unchecked",
    "hash": "533988295708650481813395127342663994217"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::_alignment_can_be_structurally_matched",
    "hash": "11571527646908301998114980104259248248"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_i128",
    "hash": "47563620699789261622738453020685800023",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_i16",
    "hash": "67165370269946170021177097382655286315",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_i32",
    "hash": "117646162523120964752527142473439723191",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_i64",
    "hash": "1788579022210201463316809019563189734484",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_i8",
    "hash": "1070897010422276068118416093559258042060",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_isize",
    "hash": "1081533862743216227212364243555148415183",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_i128",
    "hash": "118904484920425444441250840104558570404",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_i16",
    "hash": "10312404003767212703395992114888801151",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_i32",
    "hash": "127353712325932067024257778447029916525",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_i64",
    "hash": "124694907353876368968268544641984213779",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_i8",
    "hash": "1242278175259175188710695713017972986833",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_isize",
    "hash": "91778041150713842147605361386056549009",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_tuple_1",
    "hash": "145206096625743733119714376207813190321",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_tuple_2",
    "hash": "25979480457902230419007470127428384038",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_tuple_3",
    "hash": "8520610979790653754304375587733527707",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_tuple_4",
    "hash": "1564545978862523109316036944891577026245",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_u128",
    "hash": "894721266964255081372629531486514346",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_u16",
    "hash": "138284965862994127643054432851397691210",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_u32",
    "hash": "9879429036955137086941030927098514260",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_u64",
    "hash": "159389890917582925703237871765077587667",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_u8",
    "hash": "121766242526617182654620210332142292771",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_usize",
    "hash": "46358656487889045107093571886873280038",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_tuple_1",
    "hash": "180238511665586554113465875688947754809",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_tuple_2",
    "hash": "1033222422061169239411283335879762574070",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_tuple_3",
    "hash": "137584537845021426319617778769296592257",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_tuple_4",
    "hash": "678802243497090118810981290796736743457",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_u128",
    "hash": "58377693478654925605861840046233058316",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_u16",
    "hash": "67799405345299094979241463903414253856",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_u32",
    "hash": "171544482626984233519670825463678629802",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_u64",
    "hash": "1789690782393427474915589115507159129545",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_u8",
    "hash": "504573433148985974114161924937418160240",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_unit",
    "hash": "111374449542674792813780555137301001775",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_usize",
    "hash": "660746498650043639017843677779010572106",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_fixed_offset",
    "hash": "14362136867873712367176033741724107896",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i128",
    "hash": "82485227649068502616069966922843033877",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i128_arr",
    "hash": "18404228890395935592505383625277918928",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i16",
    "hash": "77825531292213101418286649369596594815",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i16_arr",
    "hash": "741698326525560246611708021205843179258",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i32",
    "hash": "3362380746877220173778170650780354412",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i32_arr",
    "hash": "173157372276806242905968632330016829071",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i64",
    "hash": "183179826819627816486905434593093428593",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i64_arr",
    "hash": "45596938422638256489203407644681364184",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i8",
    "hash": "1448448202822231950017866270029989884095",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i8_arr",
    "hash": "1178480603341182886517624224901371423692",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_isize",
    "hash": "24141064796132979065601861418941661746",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_isize_arr",
    "hash": "175356071017785459181754943687363632660",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_tuple_1",
    "hash": "61067939132650823366968900270339556960",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_tuple_1_arr",
    "hash": "7865932579511095376874808360488379925",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_tuple_2",
    "hash": "933214067366384103614566833746720953692",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_tuple_2_arr",
    "hash": "108424016936353966023182862303198500423",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_tuple_3",
    "hash": "51136364597168704303255484302454279012",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_tuple_3_arr",
    "hash": "1493468574930618383316312626770944854191",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_tuple_4",
    "hash": "53618667099916219797516854443018888239",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_tuple_4_arr",
    "hash": "134408424220917992579123902536992360302",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u128",
    "hash": "82531795104208580861846337133715412726",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u128_arr",
    "hash": "124531720807391759314824679000202848270",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u16",
    "hash": "906684132131150367912985059749563418534",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u16_arr",
    "hash": "5183546492978081837495104168331054200",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u32",
    "hash": "106616658750096757671160467700102916439",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u32_arr",
    "hash": "253213055395479577717398082990993161614",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u64",
    "hash": "273954024887914374173907333288725838",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u64_arr",
    "hash": "16872546404796651621967812071732586881",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u8",
    "hash": "71299377717603586437950537182108993349",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u8_arr",
    "hash": "24095570386423701073760795310823781117",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_unit",
    "hash": "115554606131167408651270916464148298193",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_usize",
    "hash": "1290984039674601978612152333933417668045",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_usize_arr",
    "hash": "190497860953404888618291359914506308573",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_i128",
    "hash": "673641539733710600117453784312762437869",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_i16",
    "hash": "126066905056775285265720209573569378280",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_i32",
    "hash": "110235862126256616637986285675484753007",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_i64",
    "hash": "975604592048796504243501421291843252",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_i8",
    "hash": "355208576690436340266851288363536072",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_isize",
    "hash": "103134630785539472992982238396362729486",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_i128",
    "hash": "88500109578865836918407571741243973442",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_i16",
    "hash": "152228727124997505228117384131668177388",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_i32",
    "hash": "10628170391867983852465800487682698899",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_i64",
    "hash": "58970381329247239426455181569453855511",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_i8",
    "hash": "138365474797488897739215769430782375828",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_isize",
    "hash": "40116221859072446715338144068714500684",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_tuple_1",
    "hash": "91120596327191537155673952050992410737",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_tuple_2",
    "hash": "1824366454304157582264834048962239147",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_tuple_3",
    "hash": "148411349514479014526371300997530995715",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_tuple_4",
    "hash": "1007700776800162451316180598242925531568",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_u128",
    "hash": "15220291918153044634915680176044268710",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_u16",
    "hash": "1741893827461696027012164314142109084001",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_u32",
    "hash": "645010357942648820117140793399383599458",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_u64",
    "hash": "1019048297844458156511352729325990190159",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_u8",
    "hash": "167064757953141691684036696594997246254",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_usize",
    "hash": "132446959565921015239670255964542872578",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_tuple_1",
    "hash": "94601189510323836494807662465936945743",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_tuple_2",
    "hash": "80117314935968166399455698467374516793",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_tuple_3",
    "hash": "113079321570774739642578214109258615772",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_tuple_4",
    "hash": "1429374661501942589814923755421986496723",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_u128",
    "hash": "141814802788068238315643021778216813140",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_u16",
    "hash": "12727385273259024845151949617536977909",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_u32",
    "hash": "1159310540625455975510642861909274709927",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_u64",
    "hash": "796366270878394065013098827862307289924",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_u8",
    "hash": "63816239876505806873435827660445103289",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_unit",
    "hash": "291934598987404729318421824551107003302",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_usize",
    "hash": "155503275510961542861534882242330998642",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_i128",
    "hash": "58417276852117810517673519782669157604",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_i16",
    "hash": "25780032474722199948729209585580004962",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_i32",
    "hash": "2284542120478776005749170699265997456",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_i64",
    "hash": "811576290546870806114164331794288613260",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_i8",
    "hash": "1677593804790427451012314833123686809214",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_isize",
    "hash": "169873224513234394047693412786673578325",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_i128",
    "hash": "696929863559130361618177834967722095219",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_i16",
    "hash": "585071103182162316817648289459563910993",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_i32",
    "hash": "992752713336392378615978248324555511918",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_i64",
    "hash": "40899394907973950481509752776502177681",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_i8",
    "hash": "559723894132215554613097780212343030732",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_isize",
    "hash": "546368150941963687710550550363292638627",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_tuple_1",
    "hash": "90404326604206627495422249708174530326",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_tuple_2",
    "hash": "68038138460622323667241355501617799685",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_tuple_3",
    "hash": "38458504564193665758774098791176112848",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_tuple_4",
    "hash": "31708867084686715116533120573631454285",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_u128",
    "hash": "64534490182939346813807518012559776557",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_u16",
    "hash": "176864064040304425909240343049595900388",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_u32",
    "hash": "136071290740037162293037328949207869613",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_u64",
    "hash": "148966548867903056415955381543749340366",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_u8",
    "hash": "1309591291998068957013328309766374710729",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_usize",
    "hash": "1457782680177808108814944858083223220101",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_tuple_1",
    "hash": "954353763040009490812436637173113061286",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_tuple_2",
    "hash": "107999188000034947852936072680660989351",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_tuple_3",
    "hash": "832971909098952231416095511833093505020",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_tuple_4",
    "hash": "63117840535852624239976481464571934690",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_u128",
    "hash": "42097464970976944162667706581746782782",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_u16",
    "hash": "1040516653306504130516943215714565068958",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_u32",
    "hash": "753142053224561474212132981500098762112",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_u64",
    "hash": "492368074407112813217075536871373919595",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_u8",
    "hash": "42400365946652580114417322811667610438",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_unit",
    "hash": "1068024135670438215816600071054783906126",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_usize",
    "hash": "1081693624004396009111771437893159125851",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::align_offset::mod_inv",
    "hash": "108552149900633290919250115311635650035"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_align_offset_4096",
    "hash": "3436917615190781361818514944578618664",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_align_offset_5",
    "hash": "173997332440598694696428515788283223791",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_align_offset_u128",
    "hash": "416095584183403467615884563244625492911",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_align_offset_u16",
    "hash": "3025955029189947652083930740852642460",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_align_offset_u32",
    "hash": "293350489147030149317579601582070206592",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_align_offset_u64",
    "hash": "167691306374022000771310026894646609676",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_align_offset_u8",
    "hash": "1372651441477284094916608502837844623864",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_align_offset_zst",
    "hash": "459625004001771040614812534938888483999",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_read_u128",
    "hash": "104964996280226512526624834248183415325",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_i128",
    "hash": "15963672905348682065695555466789489281",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_i16",
    "hash": "12256028094853869120849663521960478657",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_i32",
    "hash": "117722834973773508301119549309445723545",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_i64",
    "hash": "99761042155919568932090581234551296438",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_i8",
    "hash": "137555581513138409117840460268661108111",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_isize",
    "hash": "63530963138273531201336761430270913696",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_i128",
    "hash": "923950615725252699310130158025811407961",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_i16",
    "hash": "24625568450216330377988389811240355178",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_i32",
    "hash": "32893822927218327806926915818714414366",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_i64",
    "hash": "151954573188156233886898135908210360487",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_i8",
    "hash": "171693321360619646706683659196573026851",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_isize",
    "hash": "137118746689334560010413766885879042462",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_tuple_1",
    "hash": "55947765991524203853901216457696427220",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_tuple_2",
    "hash": "468289995699524478910495645863797389034",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_tuple_3",
    "hash": "1815330344597124678017517485491685649417",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_tuple_4",
    "hash": "309807835309929714311306369304354322851",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_u128",
    "hash": "70057804919275424641832403275453236351",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_u16",
    "hash": "814252214529433163917157512045224639218",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_u32",
    "hash": "159005084389574055489170839442006735953",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_u64",
    "hash": "24643340400086821772155682464518149505",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_u8",
    "hash": "61974644696836318765438277071581722183",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_usize",
    "hash": "119460663511327386884424271135090827257",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_tuple_1",
    "hash": "58230845539656789421593442223541611721",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_tuple_2",
    "hash": "83679601306055257417258433098095578434",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_tuple_3",
    "hash": "368286057391200900817836207864160875004",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_tuple_4",
    "hash": "354933215263930227010680434063592340334",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_u128",
    "hash": "1055990950447095574810703609846172208332",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_u16",
    "hash": "2055749356617095136960226264580946568",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_u32",
    "hash": "36957750570446953006512135519264531094",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_u64",
    "hash": "457923208046619162712133304591220858327",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_unit",
    "hash": "15072479919109609192116178705058330533",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_usize",
    "hash": "454184913797967050714840969290429843621",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_fixed_offset",
    "hash": "147855051862444956805835526188062923609",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i128",
    "hash": "355831885000676316413278726336337321498",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i128_array",
    "hash": "3605947827700981115940255900920108554",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i16",
    "hash": "32632878752915950895828012296142640284",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i16_array",
    "hash": "889580710987692257710332682604595328045",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i32",
    "hash": "571424138047636753418116758846263264983",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i32_array",
    "hash": "814901021856649462916550454237554602650",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i64",
    "hash": "393868531455400174011057444795873711426",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i64_array",
    "hash": "24077491379668473363060101020433769474",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i8",
    "hash": "81808745804998603349060578665675330413",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i8_array",
    "hash": "639389332654237105013863503575250651907",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_isize",
    "hash": "137509252804337512117573659683656259298",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_isize_array",
    "hash": "1265362293875717973213054946084331333753",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_tuple_1",
    "hash": "475801117545407655715627602443491454070",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_tuple_1_array",
    "hash": "55364919297407340657191820753359375568",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_tuple_2",
    "hash": "108298876668273382165164699118967253874",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_tuple_2_array",
    "hash": "32746126939450941397055478741338560274",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_tuple_3",
    "hash": "1137903596373925192512749643695525517979",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_tuple_3_array",
    "hash": "27412223188680584207296907286537290529",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_tuple_4",
    "hash": "15094211022689225324464319300741201051",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_tuple_4_array",
    "hash": "69271309817128958406629136620122473473",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u128",
    "hash": "327923202476314943910630598417462086851",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u128_array",
    "hash": "22505361942628050265997607424551281432",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u16",
    "hash": "9406811933484182696200604104811557616",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u16_array",
    "hash": "444053689909304593313710508689466019869",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u32",
    "hash": "743086192102543056513760687646643125651",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u32_array",
    "hash": "80330288789067612313289907163925599013",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u64",
    "hash": "7060254574787699404892935324378684835",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u64_array",
    "hash": "125086670632792331588217166678784111339",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u8",
    "hash": "1177548238663447427214998662831582094492",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u8_array",
    "hash": "792303955729122534917096988881567122346",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_unit",
    "hash": "565957972217767163114685095598082032803",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_usize",
    "hash": "559355756166921108512788065973769893012",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_usize_array",
    "hash": "14386932251021923883608393135750124982",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_i128",
    "hash": "138284893974556074875998791384027557575",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_i16",
    "hash": "10687410171961869991285280873296053456",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_i32",
    "hash": "152695920726359686501356357579965253746",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_i64",
    "hash": "57532865421882887778822271577009536178",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_i8",
    "hash": "1380653069555962938518082718756957460141",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_isize",
    "hash": "691658404293351030011746133756736269044",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_i128",
    "hash": "729882783072494016215861142442684966538",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_i16",
    "hash": "128459685638171821473450823140187260883",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_i32",
    "hash": "907356728314514542112535499889291904157",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_i64",
    "hash": "1333390526318810348413603660456008168953",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_i8",
    "hash": "170727944918208706095979638119705354392",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_isize",
    "hash": "129175450150735759995117198455700865888",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_tuple_1",
    "hash": "163612790570660627792969130996113614890",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_tuple_2",
    "hash": "5083198361211343469548786624064681109",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_tuple_3",
    "hash": "148421731384068201651476648323944533461",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_tuple_4",
    "hash": "2590676786068521387864697003947814180",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_u128",
    "hash": "1695210637905864571012243005858889011105",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_u16",
    "hash": "173344344960720298998987544618126554044",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_u32",
    "hash": "75433742767084502094154988999207648460",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_u64",
    "hash": "398046734678615091413189453311772690035",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_u8",
    "hash": "1075543584066743013610560555359544511725",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_usize",
    "hash": "32971567733112039782265949951570620884",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_tuple_1",
    "hash": "69411778733128302454788809011957919424",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_tuple_2",
    "hash": "1830878517906673300817971223463637288091",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_tuple_3",
    "hash": "161028658295169188868469882686878966935",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_tuple_4",
    "hash": "100831300188210242728183978944252385834",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_u128",
    "hash": "349757382128081512810669954219010114707",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_u16",
    "hash": "62705300927536623341538205905686336363",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_u32",
    "hash": "114658777522519473153022074844587017134",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_u64",
    "hash": "92319154073904574451043818322522146527",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_unit",
    "hash": "604032349863646529816817378255818213503",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_usize",
    "hash": "1220604975671095970712608287284945943116",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_i128",
    "hash": "96408181973195359961602699745942209151",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_i16",
    "hash": "134942586240013237477350812085397576411",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_i32",
    "hash": "34029058429131297618241111789766117130",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_i64",
    "hash": "1678546152959862938014247774815594259544",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_i8",
    "hash": "91362011958119959889652649211742170355",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_isize",
    "hash": "153864275619408551931499510109346958475",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_i128",
    "hash": "58873890894767687753976089559090455027",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_i16",
    "hash": "107613035877201348212771690861792794191",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_i32",
    "hash": "63604982094852066166086352199048831615",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_i64",
    "hash": "6425945917782585315559046685874680586",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_i8",
    "hash": "591345847530096560315221199929461450315",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_isize",
    "hash": "78965371119240765675623729815854547474",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_tuple_1",
    "hash": "1233052453774710760911726211031382208464",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_tuple_2",
    "hash": "88161073101353034517598791535820911148",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_tuple_3",
    "hash": "26000692747213312738918900767180685373",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_tuple_4",
    "hash": "1785714828984244403217288225165971746890",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_u128",
    "hash": "1034466770195677362715858758136687273258",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_u16",
    "hash": "1111648229868526724617405192421294476056",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_u32",
    "hash": "1347454232671509860311329785687913234388",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_u64",
    "hash": "274890869990641265316766294766193504269",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_u8",
    "hash": "1159892895926074369812746963501988157315",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_usize",
    "hash": "1141631548404431776011472601044464574793",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_tuple_1",
    "hash": "409396037909630547612684140627989649913",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_tuple_2",
    "hash": "77016593620925211505235564407512741128",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_tuple_3",
    "hash": "20849439581528518973741552137673039183",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_tuple_4",
    "hash": "540512282862387057411324412648712017182",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_u128",
    "hash": "955836807726334826114347342654690660491",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_u16",
    "hash": "434708457637055486713752766379452407555",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_u32",
    "hash": "9859890617651649563612779554002115045",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_u64",
    "hash": "1802317085309017220712707615324371378042",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_unit",
    "hash": "965995059498827789014907315307651538405",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_usize",
    "hash": "36577493956450524923855864772891164278",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "<ptr::non_null::verify::SampleStruct as ptr::non_null::verify::SampleTrait>::get_value",
    "hash": "1019146490540347874218323195995021106427"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "<ptr::non_null::verify::non_null_check_drop_in_place::Droppable as ops::drop::Drop>::drop",
    "hash": "27749331284307847912374479770917710724"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_byte_offset_from_dangling_proof",
    "hash": "47743126764091703621891906390367224410",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_byte_offset_from_proof",
    "hash": "15125429131648357209138956549196212200",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_byte_offset_proof",
    "hash": "1369877348021131494715262596529194305880",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_add",
    "hash": "145111506098783475826226618233028782182",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_addr",
    "hash": "130093778392243443377304689612105181391",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_align_offset",
    "hash": "82666267044290374710769161100448372708",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_align_offset_negative",
    "hash": "121729666004271326985560340236071482240",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_mut",
    "hash": "1488445502182209041810399005679984155746",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_mut_ptr",
    "hash": "6585660967383259062122943287903206378",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_non_null_ptr",
    "hash": "1035502292183802806018251559359206627219",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_ptr",
    "hash": "1077672158311193949716929962587177665080",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_ref",
    "hash": "499200822589825878116397146413864370192",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_uninit_mut",
    "hash": "1768135785683302425110634107005836394495",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_uninit_ref",
    "hash": "899997358846557600617115386310672158014",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_uninit_slice",
    "hash": "62571233668888716962028581526115979285",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_uninit_slice_mut",
    "hash": "157968792366737580214707745284702484295",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_cast",
    "hash": "155225448489665439367137811980972310879",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_copy_from",
    "hash": "62781706029229308249857588569680290114",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_copy_from_nonoverlapping",
    "hash": "535665153429665913273340548658893659",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_copy_to",
    "hash": "49567258843768145386569491520822589634",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_copy_to_nonoverlapping",
    "hash": "132302666847482432026538989242604661031",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_drop_in_place",
    "hash": "17492594024563461912619638431987487067",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_from_raw_part_trait",
    "hash": "1431861985627818240215180392146937552152",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_get_unchecked_mut",
    "hash": "836370013974916170714995599476400322058",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_is_aligned_to",
    "hash": "935621313690288936917620411565965250960",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_is_aligned_to_no_power_two",
    "hash": "821964387298207667714574881829596412553",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_is_empty",
    "hash": "97984995173178603144585052218501389235",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_len",
    "hash": "11000831651835643838677215964017210915",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_map_addr",
    "hash": "96235903155617922013419281479824379608",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_new",
    "hash": "2365092280006484965573016964914890209",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_new_unchecked",
    "hash": "866319762174552242311834032177299098131",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_offset",
    "hash": "108498621603559651199348262158714095641",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_offset_from",
    "hash": "16373775261679731012216368965387763354",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_read",
    "hash": "90316642577700491669255227188077453598",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_read_unaligned",
    "hash": "4632452757837617052635318624843182452",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_read_volatile",
    "hash": "691994113151413119610413636999165551953",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_replace",
    "hash": "156418543182343762082353772729767823995",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_slice_from_raw_parts",
    "hash": "114511604760832358604912993279457306007",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_sub",
    "hash": "1747581425007722499210639785383522624983",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_sub_ptr",
    "hash": "8073931715817571872476561589928884439",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_swap",
    "hash": "142326832124706117792053895916023530781",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_to_raw_parts",
    "hash": "127629994005741233545933339098654130078",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_with_addr",
    "hash": "1152252818790530355912145126166710328275",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_i128",
    "hash": "130163722027206087335257399973221695090",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_i16",
    "hash": "45537523163524763461859071139484141663",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_i32",
    "hash": "157819277220751294819612886402093563021",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_i64",
    "hash": "753420868896212140615489982821420136336",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_i8",
    "hash": "100918443167476517046425161360042197263",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_isize",
    "hash": "127627542360871044499025642580880308533",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_u128",
    "hash": "149599911029352186859494914767471464362",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_u16",
    "hash": "79252338674292255833671700009343709840",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_u32",
    "hash": "65915525317459485083499718705282569356",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_u64",
    "hash": "1678423512900101748212274355673735907851",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_u8",
    "hash": "768667727194229650613353212922701136829",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_unit",
    "hash": "942887828409750532917780605169179730309",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_usize",
    "hash": "110781920826683724126320715234432459088",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_i128",
    "hash": "122767572560132885277911171498502400358",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_i16",
    "hash": "59418419851968185719014415817810801462",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_i32",
    "hash": "1025053241009234874016926621716827208430",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_i64",
    "hash": "498181198683910228513139160216685589331",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_i8",
    "hash": "97433760241136835804075805995320685724",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_isize",
    "hash": "84156614125102495276126586298419051960",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_u128",
    "hash": "1646145271704101444115579205594385028868",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_u16",
    "hash": "1415961920748832358813518622338362513789",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_u32",
    "hash": "18769743752999292153111271065024222270",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_u64",
    "hash": "54447459841821352148385408035826197230",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_u8",
    "hash": "72062579592408451386648073399051146949",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_i128",
    "hash": "32921832769036731395360693806020390088",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_i16",
    "hash": "572414079140619982514413372786050431138",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_i32",
    "hash": "161944936917746087293887701658842172281",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_i64",
    "hash": "151425756128397920644919438062606511033",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_i8",
    "hash": "1177099814691601859517993953097068957707",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_isize",
    "hash": "9476773465492484143033862814169228726",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_u128",
    "hash": "95778792180599435612159472552478663926",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_u16",
    "hash": "121026384699983153594578926985513805749",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_u32",
    "hash": "37794176688655295299061581440160894877",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_u64",
    "hash": "47395556505717779536804132711198511453",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_u8",
    "hash": "142680287748166322772690349381144518393",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_unit",
    "hash": "52331318874437702237059009649880769753",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_usize",
    "hash": "16102011376840105193178463139745786375",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unit",
    "hash": "87260097447573660212838344407449291988",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_usize",
    "hash": "1808999227565336384315220696547863906071",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_i128",
    "hash": "14986797344786261943637286442488270498",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_i16",
    "hash": "40558280281224900162615830592895637887",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_i32",
    "hash": "564961268091331687516971590492099949825",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_i64",
    "hash": "1234074511177136371118363439722696254643",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_i8",
    "hash": "1565224214634695468912921421632148572694",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_isize",
    "hash": "94598050759342242672036009723085842131",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_u128",
    "hash": "923418311170580735312067520505417559198",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_u16",
    "hash": "68218759963554722347555205177590545028",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_u32",
    "hash": "168630616054415367549223933567660875602",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_u64",
    "hash": "6796175677564456141342560449474271393",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_u8",
    "hash": "145272993084806659999889006045613891796",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_unit",
    "hash": "158477154409272528372155390336924206432",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_usize",
    "hash": "100207036652795887358507594199805005531",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_slice_is_aligned_check",
    "hash": "560189309545852810413886474305383211383",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/unique.rs",
    "func": "ptr::unique::verify::check_as_mut",
    "hash": "679884805321021265916697715639001124811",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/unique.rs",
    "func": "ptr::unique::verify::check_as_non_null_ptr",
    "hash": "831016235601497219512943774543026617439",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/unique.rs",
    "func": "ptr::unique::verify::check_as_ptr",
    "hash": "169845159251586344486836085739714669048",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/unique.rs",
    "func": "ptr::unique::verify::check_as_ref",
    "hash": "846997950372594004714414720304169897810",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/unique.rs",
    "func": "ptr::unique::verify::check_cast",
    "hash": "157882158781714991307778283315480772994",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/unique.rs",
    "func": "ptr::unique::verify::check_new",
    "hash": "941048437777879100716884564257367247041",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/unique.rs",
    "func": "ptr::unique::verify::check_new_unchecked",
    "hash": "1166163788602461075615081779163807482614",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/range.rs",
    "func": "range::RangeInclusive::<usize>::into_slice_range",
    "hash": "34664134052203930611533160760242062974"
  },
  {
    "crate": "core",
    "file": "core/src/slice/ascii.rs",
    "func": "<slice::ascii::EscapeAscii<'a> as fmt::Display>::fmt::needs_escape",
    "hash": "1227194532305185117716552313218085751352"
  },
  {
    "crate": "core",
    "file": "core/src/slice/ascii.rs",
    "func": "<slice::ascii::EscapeByte as clone::Clone>::clone",
    "hash": "432433793620906686316774388443650435673"
  },
  {
    "crate": "core",
    "file": "core/src/slice/cmp.rs",
    "func": "slice::cmp::as_underlying",
    "hash": "693274662990856667216361442076956176163"
  },
  {
    "crate": "core",
    "file": "core/src/slice/index.rs",
    "func": "slice::index::into_range",
    "hash": "179054996397888500223818622688290667804"
  },
  {
    "crate": "core",
    "file": "core/src/slice/index.rs",
    "func": "slice::index::into_range_unchecked",
    "hash": "10029674899459793172135362115653879702"
  },
  {
    "crate": "core",
    "file": "core/src/slice/index.rs",
    "func": "slice::index::into_slice_range",
    "hash": "88210661052873513288125645065608015374"
  },
  {
    "crate": "core",
    "file": "core/src/slice/index.rs",
    "func": "slice::index::slice_index_fail",
    "hash": "1440090119059276225817676096245272798728"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_advance_back_by",
    "hash": "78552973849943460414417372709579147239",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_advance_by",
    "hash": "1571472791793507841512853091522872845822",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_as_ref",
    "hash": "144352018490769399219267336165980902130",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_as_slice",
    "hash": "846792538553816918710851964024317581855",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_clone",
    "hash": "99114688973237734055518438630015814359",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_count",
    "hash": "83316137351381733387047356836708926799",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_default",
    "hash": "136396793903225000342418494882001670017",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_is_empty",
    "hash": "161603972722263246691682224920547158675",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_len",
    "hash": "1706243724126106139814396517852218804317",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_new_iter",
    "hash": "454260918194716542513430350511533875304",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_next",
    "hash": "87238146191425395674331802403595199564",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_next_back",
    "hash": "629437867992960110214132453599724753215",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_next_back_unchecked",
    "hash": "3185311535956388717167036656940749407",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_nth",
    "hash": "24545267305258205425572901916650056475",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_nth_back",
    "hash": "1372148354095139122610656308861306581238",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_post_inc_start",
    "hash": "321703875305276919913234304401904580373",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_pre_dec_end",
    "hash": "104509519297102884456955870518993002116",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_size_hint",
    "hash": "565716924958261529715749758192014062697",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_advance_back_by",
    "hash": "586206479595800837812763116671518562130",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_advance_by",
    "hash": "1238225782943117147816718066917328133588",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_as_ref",
    "hash": "954586980240970876112747864656339700071",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_as_slice",
    "hash": "120376323176963932816578040401498555303",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_clone",
    "hash": "714137126682729202712955304034436398",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_count",
    "hash": "152823354527233816894714858647834862311",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_default",
    "hash": "174366789153057433738322680565655364950",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_is_empty",
    "hash": "897627640426453459412390404640512035300",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_len",
    "hash": "136235949122025124535713301858181534880",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_new_iter",
    "hash": "1339237458602822076918091099258475183083",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_next",
    "hash": "115935829809809942515179601635543179203",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_next_back",
    "hash": "11387476754772176410954015065540272105",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_next_back_unchecked",
    "hash": "620864352714841206313304805007341732831",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_nth",
    "hash": "718666802185317656212514848992401819568",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_nth_back",
    "hash": "9074833867066159595609903521171228814",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_post_inc_start",
    "hash": "547704822866362899714976725114870106584",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_pre_dec_end",
    "hash": "138072875149575651847181414110265616352",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_size_hint",
    "hash": "1162507995701918268018358550113757429837",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_advance_back_by",
    "hash": "1603063495851778393018286765060761833706",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_advance_by",
    "hash": "142192550646571001031352075495534270121",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_as_ref",
    "hash": "884526626957361052510196040767525721270",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_as_slice",
    "hash": "794417335957843240611503879778168117859",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_clone",
    "hash": "76049754492646240518041158691536800859",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_count",
    "hash": "74909828033229991294770410404610003162",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_default",
    "hash": "10874323669200005634362018172570945764",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_is_empty",
    "hash": "57685933151653433601490362207872387149",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_len",
    "hash": "1786321046242011106515345570286265581983",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_new_iter",
    "hash": "162551842259629192419735813605464383965",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_next",
    "hash": "56498915988687306314806737377437426710",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_next_back",
    "hash": "5669712626959561304647630640790966597",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_next_back_unchecked",
    "hash": "716454197358166906511522207987445068358",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_nth",
    "hash": "1710522063275478092717748651999362446539",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_nth_back",
    "hash": "165194301682492113639913677867603664945",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_post_inc_start",
    "hash": "2603495603342862987721030741459122894",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_pre_dec_end",
    "hash": "5206138395168846532277408773909103750",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_size_hint",
    "hash": "438858463590689209014256194008986301958",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_advance_back_by",
    "hash": "1283190463317341525417451139522440556522",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_advance_by",
    "hash": "16692816527945412943432692734192077660",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_as_ref",
    "hash": "207932483126751155514868946003667666896",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_as_slice",
    "hash": "227158172961285565616168795619622821646",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_clone",
    "hash": "105885661272469046643526853681936585623",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_count",
    "hash": "21598332689785079257861479488814230125",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_default",
    "hash": "344584512771137972012569904598828826280",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_is_empty",
    "hash": "13886081038957626567311603640330199253",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_len",
    "hash": "925354236708286425618041747904898526737",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_new_iter",
    "hash": "1403386801503620621710328378748529551726",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_next",
    "hash": "1371846788749173388512898796451984394565",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_next_back",
    "hash": "14544981727835093659184859893065436795",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_next_back_unchecked",
    "hash": "741175599403649286416674185147362636434",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_nth",
    "hash": "20153316850064778819785433084906669622",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_nth_back",
    "hash": "2689947529517779712534500099943995299",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_post_inc_start",
    "hash": "92378354901788455778364496340960771897",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_pre_dec_end",
    "hash": "159005567038355270836856246348455970589",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_size_hint",
    "hash": "308952777549687940916320079201197424227",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/memchr.rs",
    "func": "slice::memchr::contains_zero_byte",
    "hash": "83775950641407363752317229019037378868"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "<ops::range::Range<usize> as slice::GetDisjointMutIndex>::is_in_bounds",
    "hash": "1228444505496224592614798147834278536958"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "<ops::range::Range<usize> as slice::GetDisjointMutIndex>::is_overlapping",
    "hash": "103141837994909276101307811560806947523"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "<ops::range::RangeInclusive<usize> as slice::GetDisjointMutIndex>::is_in_bounds",
    "hash": "22422257990286609754819917724897024679"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "<ops::range::RangeInclusive<usize> as slice::GetDisjointMutIndex>::is_overlapping",
    "hash": "1266155675522051681915137248298477575410"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "<range::Range<usize> as slice::GetDisjointMutIndex>::is_in_bounds",
    "hash": "61488236212443953624987984202698020524"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "<range::Range<usize> as slice::GetDisjointMutIndex>::is_overlapping",
    "hash": "1453372801078840626314522683458257578133"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "<range::RangeInclusive<usize> as slice::GetDisjointMutIndex>::is_in_bounds",
    "hash": "81805920622333531514188832837209734000"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "<range::RangeInclusive<usize> as slice::GetDisjointMutIndex>::is_overlapping",
    "hash": "614652956106608365818241199567215031096"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "<slice::GetDisjointMutError as clone::Clone>::clone",
    "hash": "1645257322150250706911612999179300336998"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "<slice::GetDisjointMutError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "80766861920359694945860867830537583790"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "<slice::GetDisjointMutError as cmp::PartialEq>::eq",
    "hash": "523691030050819918113531301549014319341"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "<usize as slice::GetDisjointMutIndex>::is_in_bounds",
    "hash": "167253307782899958291861455937204858096"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "<usize as slice::GetDisjointMutIndex>::is_overlapping",
    "hash": "117485000197088428992304232441809614102"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::<impl [T]>::align_to_offsets::gcd",
    "hash": "363889497422173309816468671539791367786"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::<impl [T]>::copy_from_slice::len_mismatch_fail",
    "hash": "1006117414906135388813576545963181708439"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_bool::align_to_bool",
    "hash": "1052531587302149619916364152610805087127",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_bool::align_to_char",
    "hash": "315303754908317137712201557419661164421",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_bool::align_to_u128",
    "hash": "114346535729603922484741692530800756228",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_bool::align_to_u16",
    "hash": "559480508363698247115551339322458122892",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_bool::align_to_u32",
    "hash": "443449056397750732416652014522523594949",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_bool::align_to_u64",
    "hash": "16025417975934453925994998823990236222",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_bool::align_to_u8",
    "hash": "34622946743727067305847928617992778867",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_bool::align_to_unit",
    "hash": "969817990588046035216493000934049412731",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_char::align_to_bool",
    "hash": "70451447241946779548216615897133682195",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_char::align_to_char",
    "hash": "1238326351265631016913808400421164055659",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_char::align_to_u128",
    "hash": "1161403413548916412614261247144973360381",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_char::align_to_u16",
    "hash": "10542803138960049103949512972966703826",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_char::align_to_u32",
    "hash": "169778764690576360385695867702044656055",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_char::align_to_u64",
    "hash": "648811776727308103712148798613216279516",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_char::align_to_u8",
    "hash": "149611884305528486024411055370547827364",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_char::align_to_unit",
    "hash": "71104838746356269222003332777979289042",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u128::align_to_bool",
    "hash": "7925540437924655494039336824396860",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u128::align_to_char",
    "hash": "219170099848285477312573864922687394706",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u128::align_to_u128",
    "hash": "826794070292291412514632232261102791369",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u128::align_to_u16",
    "hash": "487353500782869963012108150257467319332",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u128::align_to_u32",
    "hash": "5634008665952702473422568570176455684",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u128::align_to_u64",
    "hash": "1804215123073300487015016409035197120569",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u128::align_to_u8",
    "hash": "129187164702669225979236431988572062024",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u128::align_to_unit",
    "hash": "15438059576232791554265198492437569334",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u16::align_to_bool",
    "hash": "114741763112756736701681615547512171745",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u16::align_to_char",
    "hash": "1654706152156398842612310620391453426276",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u16::align_to_u128",
    "hash": "1580807929239946944817647398359239506806",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u16::align_to_u16",
    "hash": "167756399326216164153409658666547715875",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u16::align_to_u32",
    "hash": "2360809280998000628144815004808115605",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u16::align_to_u64",
    "hash": "144958017291659687032227575114736535878",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u16::align_to_u8",
    "hash": "1513481746490570191718384743846506880875",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u16::align_to_unit",
    "hash": "211871599638333586314100421784910499067",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u32::align_to_bool",
    "hash": "170179272045389671899734251142778255256",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u32::align_to_char",
    "hash": "17017299633989032761615558514072392866",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u32::align_to_u128",
    "hash": "239843678081246247712684995624427681634",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u32::align_to_u16",
    "hash": "9392438640898365219817400877240609151",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u32::align_to_u32",
    "hash": "21076514883826832155670541769396841382",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u32::align_to_u64",
    "hash": "1082404795867857616214276953903615626612",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u32::align_to_u8",
    "hash": "953263876779302695716268151686770261270",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u32::align_to_unit",
    "hash": "19194994869695705739227204050266424441",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u64::align_to_bool",
    "hash": "108934985375437677058688841672434383603",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u64::align_to_char",
    "hash": "1383265537933926118814539444658435049924",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u64::align_to_u128",
    "hash": "97246313739858396277005057876407536258",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u64::align_to_u16",
    "hash": "721642766515591297213243910625523486600",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u64::align_to_u32",
    "hash": "144216575720055101361602637105716075315",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u64::align_to_u64",
    "hash": "879916063026219411515185289554039981697",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u64::align_to_u8",
    "hash": "1308664846496805181915306777193539905237",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u64::align_to_unit",
    "hash": "149928100964684867291290937049834765948",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u8::align_to_bool",
    "hash": "162544876426851370419871188295921320358",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u8::align_to_char",
    "hash": "1628911469958677456313995531607979304446",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u8::align_to_u128",
    "hash": "85490168930129368938908085596712459067",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u8::align_to_u16",
    "hash": "95982878271515013414898595354035762284",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u8::align_to_u32",
    "hash": "584306533187533002712878066218644640358",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u8::align_to_u64",
    "hash": "1225126163619516488114925137313011897258",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u8::align_to_u8",
    "hash": "135571714335626605775156647458096567025",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u8::align_to_unit",
    "hash": "72077430959105700407565945372673593117",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_unit::align_to_bool",
    "hash": "308441630562888684218352259621664057297",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_unit::align_to_char",
    "hash": "853224816150273286613625447145117671560",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_unit::align_to_u128",
    "hash": "89041623722514716210773339510772419219",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_unit::align_to_u16",
    "hash": "364411723449138092318390287413033483256",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_unit::align_to_u32",
    "hash": "865119432416233005310865455387279440819",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_unit::align_to_u64",
    "hash": "119473409711923639736803978437292014913",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_unit::align_to_u8",
    "hash": "354490111384885026716452853026634425710",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_unit::align_to_unit",
    "hash": "47965285472558573743060677771108894986",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_bool::align_to_mut_bool",
    "hash": "105389418972163456381840413420335698670",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_bool::align_to_mut_char",
    "hash": "906336392942192602011354557486558745376",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_bool::align_to_mut_u128",
    "hash": "1095474598735859838518385882544532407438",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_bool::align_to_mut_u16",
    "hash": "88040358001825521895692460987736930342",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_bool::align_to_mut_u32",
    "hash": "114893890792059459257904427235372673319",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_bool::align_to_mut_u64",
    "hash": "158903932240181151548157685822176053822",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_bool::align_to_mut_u8",
    "hash": "123102870540907496495251764718121208469",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_bool::align_to_mut_unit",
    "hash": "88449427261298982872212865191826632737",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_char::align_to_mut_bool",
    "hash": "77794878444208536917052809663653723795",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_char::align_to_mut_char",
    "hash": "125571917086313433187927786668924264008",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_char::align_to_mut_u128",
    "hash": "10941942768169382914805362229561625113",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_char::align_to_mut_u16",
    "hash": "1841746526722233203615140748296634145699",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_char::align_to_mut_u32",
    "hash": "1638378270193633830814521050374380512652",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_char::align_to_mut_u64",
    "hash": "62054457890213689812453991599793519522",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_char::align_to_mut_u8",
    "hash": "1382417864572098986915307913869126221689",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_char::align_to_mut_unit",
    "hash": "1707786328784140532315147626647020966170",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u128::align_to_mut_bool",
    "hash": "767337382156379433213118018866022817537",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u128::align_to_mut_char",
    "hash": "120957412083997126509447135944933055541",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u128::align_to_mut_u128",
    "hash": "10274905508945332203916511936914195387",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u128::align_to_mut_u16",
    "hash": "24035156121942445209493337249109145716",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u128::align_to_mut_u32",
    "hash": "148350687254956990354674523896782380550",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u128::align_to_mut_u64",
    "hash": "84388784338120017009138591326730827937",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u128::align_to_mut_u8",
    "hash": "271668875380927876015118646080217998928",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u128::align_to_mut_unit",
    "hash": "43173392013840353194355232193143332217",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u16::align_to_mut_bool",
    "hash": "168575647985100575172044062176008401684",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u16::align_to_mut_char",
    "hash": "800764485975948196211097860532333323852",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u16::align_to_mut_u128",
    "hash": "1004006339379220385810285263287728695478",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u16::align_to_mut_u16",
    "hash": "138070486975251713282440819162993285883",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u16::align_to_mut_u32",
    "hash": "983934420555931721110466898130270684252",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u16::align_to_mut_u64",
    "hash": "128019159205602757884186968414328338917",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u16::align_to_mut_u8",
    "hash": "999059730330735947918038217632661998258",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u16::align_to_mut_unit",
    "hash": "1251621232859546106115324932086597145863",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u32::align_to_mut_bool",
    "hash": "252973357581105012278464609706622357",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u32::align_to_mut_char",
    "hash": "1122922035620340811415024892249236030317",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u32::align_to_mut_u128",
    "hash": "157853469608377596771552709921652527862",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u32::align_to_mut_u16",
    "hash": "1132838808728037275317315720289307788632",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u32::align_to_mut_u32",
    "hash": "121650275765381480821072488209102999898",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u32::align_to_mut_u64",
    "hash": "134333628989477753846083272920397531945",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u32::align_to_mut_u8",
    "hash": "921863748395481525813132352595146665396",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u32::align_to_mut_unit",
    "hash": "903296206965869935813836349989969654621",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u64::align_to_mut_bool",
    "hash": "1318463258351935383513502624271748932682",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u64::align_to_mut_char",
    "hash": "153129326691372970516300443697861269696",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u64::align_to_mut_u128",
    "hash": "1282691114504266413614933793388890674357",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u64::align_to_mut_u16",
    "hash": "50147268073287575286082179308158350980",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u64::align_to_mut_u32",
    "hash": "847306583492133370611005824855127495859",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u64::align_to_mut_u64",
    "hash": "752954645873396128717644528995272583614",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u64::align_to_mut_u8",
    "hash": "459109370564122795613114174652654695031",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u64::align_to_mut_unit",
    "hash": "437229847496027146818254311125649216266",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u8::align_to_mut_bool",
    "hash": "87601031603323612562599321913979675412",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u8::align_to_mut_char",
    "hash": "15996074430664180503524865895874730984",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u8::align_to_mut_u128",
    "hash": "1520481390862131375117196766413598368185",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u8::align_to_mut_u16",
    "hash": "1398309035913490375311139646693177464675",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u8::align_to_mut_u32",
    "hash": "135194862739121727196928238332252887389",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u8::align_to_mut_u64",
    "hash": "1569073569811320557514921655902564201773",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u8::align_to_mut_u8",
    "hash": "18088093712381636823607451512486229490",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u8::align_to_mut_unit",
    "hash": "1480272140894330820315897783551448555331",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_unit::align_to_mut_bool",
    "hash": "6116539562815133155797743915062912179",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_unit::align_to_mut_char",
    "hash": "719176527925655837410195509927068611364",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_unit::align_to_mut_u128",
    "hash": "1373798511051611986714063010532899405181",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_unit::align_to_mut_u16",
    "hash": "1190162230066524637318018087765164002819",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_unit::align_to_mut_u32",
    "hash": "1646431686847955951010298875392175130747",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_unit::align_to_mut_u64",
    "hash": "1019571018726640831710483629893234549074",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_unit::align_to_mut_u8",
    "hash": "465584520119201763911478076780760598393",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_unit::align_to_mut_unit",
    "hash": "47612110945333781618076726475865217520",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/rotate.rs",
    "func": "slice::rotate::const_min",
    "hash": "1270438461514171088810672205753921848361"
  },
  {
    "crate": "core",
    "file": "core/src/slice/sort/shared/smallsort.rs",
    "func": "slice::sort::shared::smallsort::panic_on_ord_violation",
    "hash": "717316864195020333212717142816164069242"
  },
  {
    "crate": "core",
    "file": "core/src/slice/sort/stable/drift.rs",
    "func": "<slice::sort::stable::drift::DriftsortRun as clone::Clone>::clone",
    "hash": "12096648276996378769624952880035353568"
  },
  {
    "crate": "core",
    "file": "core/src/slice/sort/stable/drift.rs",
    "func": "slice::sort::stable::drift::DriftsortRun::len",
    "hash": "118910770894669336584356273918917991833"
  },
  {
    "crate": "core",
    "file": "core/src/slice/sort/stable/drift.rs",
    "func": "slice::sort::stable::drift::DriftsortRun::new_sorted",
    "hash": "76436199708318685525846013368064223359"
  },
  {
    "crate": "core",
    "file": "core/src/slice/sort/stable/drift.rs",
    "func": "slice::sort::stable::drift::DriftsortRun::new_unsorted",
    "hash": "1168707756219652878515544949458091231518"
  },
  {
    "crate": "core",
    "file": "core/src/slice/sort/stable/drift.rs",
    "func": "slice::sort::stable::drift::DriftsortRun::sorted",
    "hash": "50677806787826745946156566879001363075"
  },
  {
    "crate": "core",
    "file": "core/src/slice/sort/stable/drift.rs",
    "func": "slice::sort::stable::drift::merge_tree_depth",
    "hash": "1732938910153601346517924262821782339521"
  },
  {
    "crate": "core",
    "file": "core/src/slice/sort/stable/drift.rs",
    "func": "slice::sort::stable::drift::merge_tree_scale_factor",
    "hash": "168561266098859160454316669869333252408"
  },
  {
    "crate": "core",
    "file": "core/src/slice/sort/stable/drift.rs",
    "func": "slice::sort::stable::drift::sqrt_approx",
    "hash": "11891611180989635069996391796889720825"
  },
  {
    "crate": "core",
    "file": "core/src/str/count.rs",
    "func": "str::count::contains_non_continuation_byte",
    "hash": "133774208422544204712385208594916672852"
  },
  {
    "crate": "core",
    "file": "core/src/str/count.rs",
    "func": "str::count::sum_bytes_in_usize",
    "hash": "1359348022757067876111653570557060943600"
  },
  {
    "crate": "core",
    "file": "core/src/str/error.rs",
    "func": "<str::error::ParseBoolError as clone::Clone>::clone",
    "hash": "1421737906428699755616519336785560782860"
  },
  {
    "crate": "core",
    "file": "core/src/str/error.rs",
    "func": "<str::error::ParseBoolError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "100999279390663379189465280175234214979"
  },
  {
    "crate": "core",
    "file": "core/src/str/error.rs",
    "func": "<str::error::ParseBoolError as cmp::PartialEq>::eq",
    "hash": "1363812817795777260510003772117541250262"
  },
  {
    "crate": "core",
    "file": "core/src/str/error.rs",
    "func": "<str::error::Utf8Error as clone::Clone>::clone",
    "hash": "101189444776046950154912782937031422029"
  },
  {
    "crate": "core",
    "file": "core/src/str/error.rs",
    "func": "<str::error::Utf8Error as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1287375361982080621115781447982573194934"
  },
  {
    "crate": "core",
    "file": "core/src/str/error.rs",
    "func": "<str::error::Utf8Error as cmp::PartialEq>::eq",
    "hash": "373733674965495327516276036462381068725"
  },
  {
    "crate": "core",
    "file": "core/src/str/error.rs",
    "func": "str::error::Utf8Error::error_len",
    "hash": "1425690459290491886310479508103895905570"
  },
  {
    "crate": "core",
    "file": "core/src/str/error.rs",
    "func": "str::error::Utf8Error::valid_up_to",
    "hash": "28759182975857547098651469533205323676"
  },
  {
    "crate": "core",
    "file": "core/src/str/mod.rs",
    "func": "<str::BytesIsNotEmpty as clone::Clone>::clone",
    "hash": "1134462621956276629212356351043471815287"
  },
  {
    "crate": "core",
    "file": "core/src/str/mod.rs",
    "func": "<str::CharEscapeDebugContinue as clone::Clone>::clone",
    "hash": "1542207383255327621116904855085895476103"
  },
  {
    "crate": "core",
    "file": "core/src/str/mod.rs",
    "func": "<str::CharEscapeDefault as clone::Clone>::clone",
    "hash": "182649462031515700183352668661070243072"
  },
  {
    "crate": "core",
    "file": "core/src/str/mod.rs",
    "func": "<str::CharEscapeUnicode as clone::Clone>::clone",
    "hash": "921511568084263858117305124753064771755"
  },
  {
    "crate": "core",
    "file": "core/src/str/mod.rs",
    "func": "<str::IsAsciiWhitespace as clone::Clone>::clone",
    "hash": "690259270114141726215596604235015012549"
  },
  {
    "crate": "core",
    "file": "core/src/str/mod.rs",
    "func": "<str::IsNotEmpty as clone::Clone>::clone",
    "hash": "37158827771850946497299676093189518975"
  },
  {
    "crate": "core",
    "file": "core/src/str/mod.rs",
    "func": "<str::IsWhitespace as clone::Clone>::clone",
    "hash": "34849895375469610708345764686731926756"
  },
  {
    "crate": "core",
    "file": "core/src/str/mod.rs",
    "func": "<str::LinesMap as clone::Clone>::clone",
    "hash": "1001019627481923202716785672502496702184"
  },
  {
    "crate": "core",
    "file": "core/src/str/mod.rs",
    "func": "<str::UnsafeBytesToStr as clone::Clone>::clone",
    "hash": "211392954465144897813203494630722967946"
  },
  {
    "crate": "core",
    "file": "core/src/str/mod.rs",
    "func": "str::<impl default::Default for &mut str>::default",
    "hash": "1201451347459645491210659365263903205279"
  },
  {
    "crate": "core",
    "file": "core/src/str/mod.rs",
    "func": "str::<impl default::Default for &str>::default",
    "hash": "93123451915686974738005182859496240660"
  },
  {
    "crate": "core",
    "file": "core/src/str/pattern.rs",
    "func": "<char as str::pattern::Pattern>::as_utf8_pattern",
    "hash": "202979102918754469511973505088746121106"
  },
  {
    "crate": "core",
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::EmptyNeedle as clone::Clone>::clone",
    "hash": "846787316198935758617725690966544171763"
  },
  {
    "crate": "core",
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::MatchOnly as str::pattern::TwoWayStrategy>::matching",
    "hash": "1296411750804674058315087202364841236804"
  },
  {
    "crate": "core",
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::MatchOnly as str::pattern::TwoWayStrategy>::rejecting",
    "hash": "921040717020639707211435762660647759802"
  },
  {
    "crate": "core",
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::MatchOnly as str::pattern::TwoWayStrategy>::use_early_reject",
    "hash": "313548882690528367412077569528013544642"
  },
  {
    "crate": "core",
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::RejectAndMatch as str::pattern::TwoWayStrategy>::matching",
    "hash": "25147898751268070724297523336675951399"
  },
  {
    "crate": "core",
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::RejectAndMatch as str::pattern::TwoWayStrategy>::rejecting",
    "hash": "84124346961803484191975811234606759065"
  },
  {
    "crate": "core",
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::RejectAndMatch as str::pattern::TwoWayStrategy>::use_early_reject",
    "hash": "44839495425802162711973928630568384066"
  },
  {
    "crate": "core",
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::SearchStep as clone::Clone>::clone",
    "hash": "1087573110898129658217802012511246865689"
  },
  {
    "crate": "core",
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::SearchStep as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "816649430859910242810748878991678979217"
  },
  {
    "crate": "core",
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::SearchStep as cmp::PartialEq>::eq",
    "hash": "945101538962586226417160114872795629174"
  },
  {
    "crate": "core",
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::StrSearcherImpl as clone::Clone>::clone",
    "hash": "228562707203156515418360423522431696086"
  },
  {
    "crate": "core",
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::TwoWaySearcher as clone::Clone>::clone",
    "hash": "174247123207391243897841276514992390901"
  },
  {
    "crate": "core",
    "file": "core/src/str/pattern.rs",
    "func": "str::pattern::TwoWaySearcher::byteset_contains",
    "hash": "179238937216206703897978799586879197334"
  },
  {
    "crate": "core",
    "file": "core/src/str/traits.rs",
    "func": "str::traits::str_index_overflow_fail",
    "hash": "1789720728005117086117481954200849255673"
  },
  {
    "crate": "core",
    "file": "core/src/str/validations.rs",
    "func": "str::validations::contains_nonascii",
    "hash": "174654506174121724337210882592953964221"
  },
  {
    "crate": "core",
    "file": "core/src/str/validations.rs",
    "func": "str::validations::utf8_acc_cont_byte",
    "hash": "109849097723912452994088294171860151303"
  },
  {
    "crate": "core",
    "file": "core/src/str/validations.rs",
    "func": "str::validations::utf8_char_width",
    "hash": "96426103444183050012757094728170995506"
  },
  {
    "crate": "core",
    "file": "core/src/str/validations.rs",
    "func": "str::validations::utf8_first_byte",
    "hash": "486164287917427656918200146926298480057"
  },
  {
    "crate": "core",
    "file": "core/src/str/validations.rs",
    "func": "str::validations::utf8_is_cont_byte",
    "hash": "947833919457653120214810965083035955432"
  },
  {
    "crate": "core",
    "file": "core/src/str/validations.rs",
    "func": "str::validations::verify::check_run_utf8_validation",
    "hash": "152210293451198578592775440564756829798",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicBool as convert::From<bool>>::from",
    "hash": "183480036313976757114502341016561568095"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicBool as default::Default>::default",
    "hash": "77194354903380178842099972487523234876"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicI16 as convert::From<i16>>::from",
    "hash": "1345285359576590865214451300690554773081"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicI16 as default::Default>::default",
    "hash": "119928202940845174932574098066530978189"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicI32 as convert::From<i32>>::from",
    "hash": "128858439203493225603362721034910072026"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicI32 as default::Default>::default",
    "hash": "11778165355787553542994064086406935440"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicI64 as convert::From<i64>>::from",
    "hash": "1308679700610868303416751435714331883071"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicI64 as default::Default>::default",
    "hash": "1736398929860410553915002009337893474170"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicI8 as convert::From<i8>>::from",
    "hash": "1707428681992920130610831580594323566317"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicI8 as default::Default>::default",
    "hash": "57589688507300327068589576352982655814"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicIsize as convert::From<isize>>::from",
    "hash": "28295594151897961571262534879984396654"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicIsize as default::Default>::default",
    "hash": "41521891838931641323587888787432332472"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicU16 as convert::From<u16>>::from",
    "hash": "124753104211877815084044660962950897723"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicU16 as default::Default>::default",
    "hash": "31411873028829727202807761163569241779"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicU32 as convert::From<u32>>::from",
    "hash": "364179275443483109512333083918089514432"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicU32 as default::Default>::default",
    "hash": "269074034222960076415605119902113754631"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicU64 as convert::From<u64>>::from",
    "hash": "1471678529477754480913690575932109639021"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicU64 as default::Default>::default",
    "hash": "134965097114098770446871089206419494422"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicU8 as convert::From<u8>>::from",
    "hash": "351810933771922520816812111783476777460"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicU8 as default::Default>::default",
    "hash": "106827743666284834081369578136274101892"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicUsize as convert::From<usize>>::from",
    "hash": "4398061324881254741005532742759846956"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicUsize as default::Default>::default",
    "hash": "1420345302248180275816885249229207809886"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::Ordering as clone::Clone>::clone",
    "hash": "138806279762024948818653661609024359708"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::Ordering as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "74197694593619435539840984910913147793"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::Ordering as cmp::PartialEq>::eq",
    "hash": "1817167665889363590415326472386877373790"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::as_ptr",
    "hash": "121688814344096181017057708891062891331"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::compare_and_swap",
    "hash": "495268567909487488317734646410461089703"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::compare_exchange",
    "hash": "26390982529271784035353113031141869164"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::compare_exchange_weak",
    "hash": "26022529509928354922302895264644774425"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::fetch_and",
    "hash": "11820930757082158272571165899914201268"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::fetch_nand",
    "hash": "90085362725237813472262833885930880"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::fetch_not",
    "hash": "546131849496313178011178244589907773884"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::fetch_or",
    "hash": "14089071085555203616664473404114397517"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::fetch_xor",
    "hash": "58451948492497898931880582248136801712"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::from_mut",
    "hash": "80811973616330115478542452007388027916"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::get_mut",
    "hash": "37634861235939031522440502746263462764"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::into_inner",
    "hash": "15779969696117419224261908141634397317"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::load",
    "hash": "155469962834761107207525044850038410970"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::new",
    "hash": "33523035405396149479057659157941778464"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::store",
    "hash": "1333151912453279659910677642624636164672"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::swap",
    "hash": "1186837886665340036310854247971353381586"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::as_ptr",
    "hash": "1419078730675366892911563600650864918476"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::compare_and_swap",
    "hash": "121320064454801184783440365126132638169"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::compare_exchange",
    "hash": "37430567307082052595825528209650392047"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::compare_exchange_weak",
    "hash": "1371492748664229493612090949414491187412"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::fetch_add",
    "hash": "64988897516445035745480727899481834370"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::fetch_and",
    "hash": "18484636748074723658427884184099969196"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::fetch_max",
    "hash": "93192724635571526085658382893095529232"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::fetch_min",
    "hash": "175676638115857793893178572283678551193"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::fetch_nand",
    "hash": "77690474382400552851242128140949698698"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::fetch_or",
    "hash": "23902724660232160457194914295006622215"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::fetch_sub",
    "hash": "1324490226340447516310100333179322989905"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::fetch_xor",
    "hash": "11470636711978368722954685212372050220"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::from_mut",
    "hash": "1723789239722998781216460616869078018364"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::get_mut",
    "hash": "676477453533957407712493142304348744515"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::into_inner",
    "hash": "785204951124688346410955646439902648531"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::load",
    "hash": "104716995929690193003104393626473249687"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::new",
    "hash": "986957415451136482713009830403201491589"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::store",
    "hash": "717888581738578924110069317319139293850"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::swap",
    "hash": "375098209543940503211283271542752982871"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::as_ptr",
    "hash": "818728509806391825817529137701432406324"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::compare_and_swap",
    "hash": "1617999531088071324415808456404579422943"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::compare_exchange",
    "hash": "7926725214792803511642995705447979947"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::compare_exchange_weak",
    "hash": "169000355801090331110392060018837766387"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::fetch_add",
    "hash": "711164966451023580115018784149879916329"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::fetch_and",
    "hash": "1251998211556398616314846824162748798408"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::fetch_max",
    "hash": "22442579400679854331329387817233042483"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::fetch_min",
    "hash": "1818459317953387955614617294517826815786"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::fetch_nand",
    "hash": "9763269206975887510772468004311067477"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::fetch_or",
    "hash": "1033239767800828825116462307594001743922"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::fetch_sub",
    "hash": "94349056264372843806894976471092349893"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::fetch_xor",
    "hash": "11459211507828451774939986076983194066"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::from_mut",
    "hash": "1073879353432022178115051561096294353971"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::get_mut",
    "hash": "1633521646153876139617634109777685589452"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::into_inner",
    "hash": "1759503621725018742213642086323475709305"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::load",
    "hash": "16946673818752198034395638088730012599"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::new",
    "hash": "11136692658025000874516226607580461967"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::store",
    "hash": "62876349831433065676836413199201221521"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::swap",
    "hash": "1554455700321655919115611824163296998609"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::as_ptr",
    "hash": "704707902129161154412527350835781166153"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::compare_and_swap",
    "hash": "1697458613953236952814580547706906833600"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::compare_exchange",
    "hash": "1733832733862352974710096346696328844487"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::compare_exchange_weak",
    "hash": "36087203248431117608992561805653726856"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::fetch_add",
    "hash": "35644314911279536556664846047715510998"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::fetch_and",
    "hash": "9930490577199163509622320766873217769"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::fetch_max",
    "hash": "1414696993279199736816836075686473954908"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::fetch_min",
    "hash": "90317501772103519926056006873448766669"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::fetch_nand",
    "hash": "6935143408615204613156907516392676477"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::fetch_or",
    "hash": "1464169477697516343518429424360755944097"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::fetch_sub",
    "hash": "85582376586717581457865972543754816837"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::fetch_xor",
    "hash": "529435805698033193915562352770369534508"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::from_mut",
    "hash": "662156085174158255418365342492118034901"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::get_mut",
    "hash": "14678695776173835843925540390981891299"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::into_inner",
    "hash": "556760677060910231116861833313720931749"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::load",
    "hash": "1413899527109456935617169363533748287692"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::new",
    "hash": "4752521342856565415662485293366827079"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::store",
    "hash": "410508706797436465613825952714901944026"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::swap",
    "hash": "163041685000131549372075370957317423896"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::as_ptr",
    "hash": "728866748766286522416739052797954805488"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::compare_and_swap",
    "hash": "523121746659343496011644806676172388635"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::compare_exchange",
    "hash": "125416574086061488353805836756292497428"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::compare_exchange_weak",
    "hash": "127090776717136961922846012668026985146"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::fetch_add",
    "hash": "1474152824308646211710718012080654338266"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::fetch_and",
    "hash": "1566043885775949924211747631176376117983"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::fetch_max",
    "hash": "110421732023908652066123283498708289716"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::fetch_min",
    "hash": "817422171583172345212968906038997819099"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::fetch_nand",
    "hash": "191755408431273412215460911394006755311"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::fetch_or",
    "hash": "3235975657175854897293704430694892550"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::fetch_sub",
    "hash": "74365922762642392454518357315786582512"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::fetch_xor",
    "hash": "57618221898693344768815740647663606190"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::from_mut",
    "hash": "1027504703718032611815576549799660892119"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::get_mut",
    "hash": "694705232408917114711772591225136436539"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::into_inner",
    "hash": "172947635879455153378505996851244485905"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::load",
    "hash": "95904003637497656192771116395128987078"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::new",
    "hash": "40931214082184693007851982044949426101"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::store",
    "hash": "7672292305424018111445055801035080034"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::swap",
    "hash": "134282554867927456031357386390557791887"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::as_ptr",
    "hash": "11698116301849311137800310202491007423"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::compare_and_swap",
    "hash": "844765446032258468116419164155223040708"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::compare_exchange",
    "hash": "833157257571154874616139318634748880420"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::compare_exchange_weak",
    "hash": "108895303375708432827926197170646080661"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::fetch_add",
    "hash": "85812796022446865376808678238171078696"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::fetch_and",
    "hash": "87451747560516307746892782108492088822"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::fetch_max",
    "hash": "40130648091696848795576973434826885793"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::fetch_min",
    "hash": "49101064538208331966018613935427103849"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::fetch_nand",
    "hash": "30007655123453444017881106815368009505"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::fetch_or",
    "hash": "39932005784468399266099222717046880134"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::fetch_sub",
    "hash": "1160732512479183274816380177364021254126"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::fetch_xor",
    "hash": "60481323140480534956509005519061262145"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::from_mut",
    "hash": "1043735143619129756513111048024698743971"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::get_mut",
    "hash": "110910190022103526873107061416076978410"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::into_inner",
    "hash": "1826518533673099606317362324083371351773"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::load",
    "hash": "177096123008010102387351637821822608570"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::new",
    "hash": "527124460152914170018373779546327328783"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::store",
    "hash": "743613149303052524417817298645749318242"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::swap",
    "hash": "55372734541686723414359537439944858310"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::as_ptr",
    "hash": "30682591868736476407213149352816133598"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::compare_and_swap",
    "hash": "18285879599573203473794552576016940281"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::compare_exchange",
    "hash": "10027175761273936217517070680983592524"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::compare_exchange_weak",
    "hash": "106848754187958826454213243720189037025"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::fetch_add",
    "hash": "3212246963613375729103068861152238457"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::fetch_and",
    "hash": "104304890459222539699125790592270211663"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::fetch_max",
    "hash": "45253645449572809753999755964217672240"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::fetch_min",
    "hash": "155748037515702100716736406674769163971"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::fetch_nand",
    "hash": "1386795177966312566317515272510323216196"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::fetch_or",
    "hash": "18346121264671667975452569349848888335"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::fetch_sub",
    "hash": "8680454662238528651136396537561112081"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::fetch_xor",
    "hash": "79653610977162264915610477373545656144"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::from_mut",
    "hash": "32090640363814255039595183286637243509"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::get_mut",
    "hash": "155993143934539504073302969578630281576"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::into_inner",
    "hash": "1261340381272821407216398948769176999574"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::load",
    "hash": "182688399105696293057164275747504983105"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::new",
    "hash": "593982111087065890617004468856895749945"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::store",
    "hash": "1147049854380302885716901995830119576391"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::swap",
    "hash": "6511491705203383216723778674291409542"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::as_ptr",
    "hash": "53767978268021366376446606688326429321"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::compare_and_swap",
    "hash": "148855901607447163804202756151461184304"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::compare_exchange",
    "hash": "9059829429170152631728246215451927813"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::compare_exchange_weak",
    "hash": "1081349050098156846910115554466191777680"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::fetch_add",
    "hash": "1374880572186991839817975457185196024745"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::fetch_and",
    "hash": "986101375535224823713539365290854873926"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::fetch_max",
    "hash": "95570377315268159441517683252128917256"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::fetch_min",
    "hash": "1127256088300149870114545960232293705044"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::fetch_nand",
    "hash": "1187181785555762883214718294074028255640"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::fetch_or",
    "hash": "65763305500697529382603185927568006302"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::fetch_sub",
    "hash": "40377925203750904781594740234565048400"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::fetch_xor",
    "hash": "24771934218475240565267450157844999403"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::from_mut",
    "hash": "960419908547332716115909011688918749618"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::get_mut",
    "hash": "78026220086790156513608548074331739086"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::into_inner",
    "hash": "52818473178577877591936434524248040807"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::load",
    "hash": "1680046026087955183513546403551944198106"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::new",
    "hash": "766654395100541238413779665826184381431"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::store",
    "hash": "125101702286359086059397496314955320931"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::swap",
    "hash": "145558445333515118283385814202937822455"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::as_ptr",
    "hash": "420516520570976472535067436413136841"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::compare_and_swap",
    "hash": "17913509062402691511611162074555874717"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::compare_exchange",
    "hash": "1066132231578285581312256823118432911756"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::compare_exchange_weak",
    "hash": "148686902639749038807645758019500905147"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::fetch_add",
    "hash": "1835790459729843135818327561814038516827"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::fetch_and",
    "hash": "1465384374140658483511724510913131610333"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::fetch_max",
    "hash": "3831103896660188288796245776704780228"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::fetch_min",
    "hash": "1150633783437361236716140461360444554391"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::fetch_nand",
    "hash": "436049437402553544846758191297333626"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::fetch_or",
    "hash": "340870661771348328211835666536249067966"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::fetch_sub",
    "hash": "1267849043503957911248864083251363864"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::fetch_xor",
    "hash": "180670314061173575316886494916537874899"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::from_mut",
    "hash": "135128033694816506787838163750952533276"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::get_mut",
    "hash": "160337982031081811972498272139706414561"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::into_inner",
    "hash": "449656286855553385114994659684502165311"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::load",
    "hash": "1072671897157902758512066884223785534075"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::new",
    "hash": "43360654074465885714678461137592743426"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::store",
    "hash": "1530193686963550923717932915470332594299"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::swap",
    "hash": "17203229331079432003813301728731073953"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::as_ptr",
    "hash": "120220312933760776618478464247572265236"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::compare_and_swap",
    "hash": "1019825433660975476917645834571660564990"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::compare_exchange",
    "hash": "40019002043824688655563162620682024844"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::compare_exchange_weak",
    "hash": "184335915346297345539683220098604680869"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::fetch_add",
    "hash": "153441055667568304601162364678033589396"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::fetch_and",
    "hash": "79311840312941253991025372008094369551"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::fetch_max",
    "hash": "46522546675665907132643458098106889966"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::fetch_min",
    "hash": "11937705947083650301729784966572003485"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::fetch_nand",
    "hash": "122312372351913376762765465474614008299"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::fetch_or",
    "hash": "7363792441066162839312113093776822953"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::fetch_sub",
    "hash": "1552769196037074288330976018979380857"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::fetch_xor",
    "hash": "95485037723136811151195302734125961132"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::from_mut",
    "hash": "1247969181327273939212476363887889910794"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::get_mut",
    "hash": "163387855011647322878941417528784070571"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::into_inner",
    "hash": "81433395187075411828613185065947528770"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::load",
    "hash": "90302756914638196457966201042927435292"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::new",
    "hash": "91543856378391463789588115338206168957"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::store",
    "hash": "704654041503428006017609980007880200031"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::swap",
    "hash": "56128505594047321901767383111058255560"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::as_ptr",
    "hash": "124702576971877099375837554442900536610"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::compare_and_swap",
    "hash": "10951612951586611158166518528392924899"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::compare_exchange",
    "hash": "1224463907900660363210930964453397019508"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::compare_exchange_weak",
    "hash": "55000579734007843551113754976541629378"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::fetch_add",
    "hash": "1683198087505788679313678867881822259920"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::fetch_and",
    "hash": "55758781501940872114418715094020152972"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::fetch_max",
    "hash": "875123797524135581218014567745334794585"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::fetch_min",
    "hash": "1157544699234565935910894035071994662715"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::fetch_nand",
    "hash": "1486145708429408497711262033032188894456"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::fetch_or",
    "hash": "926830490517971823817469587855256654050"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::fetch_sub",
    "hash": "176168077815883709429856913543031005272"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::fetch_xor",
    "hash": "26059562220086691838856594909126667945"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::from_mut",
    "hash": "741678053397517627615994233764626258786"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::get_mut",
    "hash": "2379730687376558756979894620298849304"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::into_inner",
    "hash": "1042793694367586611415450952773905711899"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::load",
    "hash": "177774639660793667563390787349157682917"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::new",
    "hash": "177904128489390464237019893256267109628"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::store",
    "hash": "21121511309122211562439894067686930110"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::swap",
    "hash": "11670459246252001369598477621064656753"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::compiler_fence",
    "hash": "61816238058714215121027766931201528575"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::fence",
    "hash": "1142800993023095142010879166427662838664"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::spin_loop_hint",
    "hash": "1677967148543197169916730401772308021018"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::strongest_failure_ordering",
    "hash": "218040197053474425313489559789487598257"
  },
  {
    "crate": "core",
    "file": "core/src/task/wake.rs",
    "func": "task::wake::LocalWaker::noop",
    "hash": "82330340410293162775645493601862073801"
  },
  {
    "crate": "core",
    "file": "core/src/task/wake.rs",
    "func": "task::wake::Waker::noop",
    "hash": "1445662231951511073214825586059219916892"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as clone::Clone>::clone",
    "hash": "65687076940585733208123776482047119439"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1642312843313896828910665233548320572284"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as cmp::Ord>::cmp",
    "hash": "101117025658366857787145716466479498445"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as cmp::PartialEq>::eq",
    "hash": "50260268632718934194550421386752020750"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as cmp::PartialOrd>::partial_cmp",
    "hash": "1301409580026502721616319800882117348826"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as default::Default>::default",
    "hash": "453018381280335662813148794855191092916"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as ops::arith::Add>::add",
    "hash": "1244071303857876935113190552213988586830"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as ops::arith::AddAssign>::add_assign",
    "hash": "23080036689680493617729513651140474586"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as ops::arith::Div<u32>>::div",
    "hash": "43195783644388073177705616453563558287"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as ops::arith::DivAssign<u32>>::div_assign",
    "hash": "1035272283077356058418037926947001967715"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as ops::arith::Mul<u32>>::mul",
    "hash": "625782493898320969812734979082427830470"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as ops::arith::MulAssign<u32>>::mul_assign",
    "hash": "858831350310387015412035501658215510994"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as ops::arith::Sub>::sub",
    "hash": "90701851993009333012685949817398639092"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as ops::arith::SubAssign>::sub_assign",
    "hash": "4144620548107625863900571183639979451"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as ub_checks::Invariant>::is_safe",
    "hash": "788531292674870834010462035230957022933"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::TryFromFloatSecsError as clone::Clone>::clone",
    "hash": "155714902894008261069968758999815409878"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::TryFromFloatSecsError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "108545549794693267415403588934678840523"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::TryFromFloatSecsError as cmp::PartialEq>::eq",
    "hash": "85566024078542249467487241721543527233"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::TryFromFloatSecsErrorKind as clone::Clone>::clone",
    "hash": "1193007111090462156017855007416548484597"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::TryFromFloatSecsErrorKind as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1709300075504538552510219866853163139900"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::TryFromFloatSecsErrorKind as cmp::PartialEq>::eq",
    "hash": "1683444906971388816513571978098658055133"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::<impl ops::arith::Mul<time::Duration> for u32>::mul",
    "hash": "8189263138273553778593363315072415700"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::<impl ub_checks::Invariant for num::niche_types::Nanoseconds>::is_safe",
    "hash": "528675514942257179111086169806688306465"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::abs_diff",
    "hash": "50668425997965506654816290813327847821"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::as_micros",
    "hash": "571930634199669245812812567819354344963"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::as_millis",
    "hash": "363585868887122075111608777546152278592"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::as_millis_f32",
    "hash": "497683366917813053612024896607012068226"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::as_millis_f64",
    "hash": "17072118692122935153724602333653534924"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::as_nanos",
    "hash": "492805612452909684314175956217960078901"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::as_secs",
    "hash": "1659014498554188890211696833608412047370"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::as_secs_f32",
    "hash": "164296188866052955065756432173486900160"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::as_secs_f64",
    "hash": "1539174715707996134512003445079987591066"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::checked_add",
    "hash": "1808485848315174207917389829700123793613"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::checked_div",
    "hash": "95389435626385263867296203385967996095"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::checked_mul",
    "hash": "43117255774250033679497216145196214989"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::checked_sub",
    "hash": "1085170053830431788311734623810361094461"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::div_duration_f32",
    "hash": "386929958223544744816026537144745604330"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::div_duration_f64",
    "hash": "59170630740196932735985538530362951356"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::div_f32",
    "hash": "14942177305311755671404193698155100402"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::div_f64",
    "hash": "1097262069089383445912589027028203412937"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::from_days",
    "hash": "89556180249329041691424059385874639079"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::from_hours",
    "hash": "668214541815501826812824501992068812044"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::from_micros",
    "hash": "713582765544168457416896353134350734653"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::from_millis",
    "hash": "103201209251474754949132317369828318810"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::from_mins",
    "hash": "2767698577014075749183141505457057841"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::from_nanos",
    "hash": "388956341027180722217190897267579790662"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::from_secs",
    "hash": "1270888124877289178512994789532778292810"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::from_secs_f32",
    "hash": "1547855683958606664910173574555658582751"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::from_secs_f64",
    "hash": "182474532542214931414488625860411958608"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::from_weeks",
    "hash": "107686632415754588454502824225580487863"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::is_zero",
    "hash": "115997484158910770201044246611455284681"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::mul_f32",
    "hash": "19654493984236355268919282630924829786"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::mul_f64",
    "hash": "9018890532890929328454089011752424399"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::new",
    "hash": "53640592460995162692993450950786722359"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::saturating_add",
    "hash": "54676310260449489461918121923308869798"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::saturating_mul",
    "hash": "66101835888087859173579221839260609211"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::saturating_sub",
    "hash": "535474575950252448113565406065178504103"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::subsec_micros",
    "hash": "272178737756230533013362761810336437979"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::subsec_millis",
    "hash": "184084505959136145138783942518865749352"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::subsec_nanos",
    "hash": "10424362034996055643434835461049705887"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::try_from_secs_f32",
    "hash": "14315459327646819102992342111085421534"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::try_from_secs_f64",
    "hash": "441794478817319814118366150412846142734"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_as_micros",
    "hash": "121867380345680082203653821123983093173",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_as_micros_panics",
    "hash": "132890686177164090651143858698359938921",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_as_millis",
    "hash": "94543588084179535283719701026724744345",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_as_millis_panics",
    "hash": "144858428755562422629536309417242290630",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_as_nanos",
    "hash": "6868516916685080921291437305345924335",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_as_nanos_panics",
    "hash": "114857750634665308084806426992434441742",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_as_secs",
    "hash": "516719506646917603117438772755697412186",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_as_secs_panics",
    "hash": "1507207210013518504618364114831586840747",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_checked_add",
    "hash": "132961761325165969112107869992012961308",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_checked_add_panics",
    "hash": "410172836512302218217478272853136002947",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_checked_div",
    "hash": "15768009337649446689134623755187098228",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_checked_div_panics",
    "hash": "593149511798323305115664663264739140662",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_checked_mul",
    "hash": "148700469532762391687840674082496012236",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_checked_mul_panics",
    "hash": "474010056499710587115041591060477397947",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_checked_sub",
    "hash": "139244570929719201996064079904016023594",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_checked_sub_panics",
    "hash": "124286660049934854891894080734882838117",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_new",
    "hash": "93021780024092420009139225072483136184",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_new_panics",
    "hash": "581913061859906462313079690152052568315",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_subsec_micros",
    "hash": "48210524977934155974383477681799970267",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_subsec_micros_panics",
    "hash": "510783258237227085114782973448996692002",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_subsec_millis",
    "hash": "1272884741564366148916792438327840491457",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_subsec_millis_panics",
    "hash": "107727326405810537328198732735895931539",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_subsec_nanos",
    "hash": "976397296775102990711485707091414813412",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_subsec_nanos_panics",
    "hash": "1680768790512415631315587824023347597570",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::safe_duration",
    "hash": "122607864268356511539707090536317523252"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<() as ub_checks::Invariant>::is_safe",
    "hash": "54229515427671017203573246548975151329"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<bool as ub_checks::Invariant>::is_safe",
    "hash": "182722051273606271987746517691852152938"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<char as ub_checks::Invariant>::is_safe",
    "hash": "1081562602022881188015408144074574949189"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<f128 as ub_checks::Invariant>::is_safe",
    "hash": "127228044158492861747752718659586352270"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<f16 as ub_checks::Invariant>::is_safe",
    "hash": "105748599607233514519553006644461093268"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<f32 as ub_checks::Invariant>::is_safe",
    "hash": "120767812080352783216107881982502785135"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<f64 as ub_checks::Invariant>::is_safe",
    "hash": "1806276576190033820011008268836508626484"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<i128 as ub_checks::Invariant>::is_safe",
    "hash": "916483211580342228710324704543716633888"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<i16 as ub_checks::Invariant>::is_safe",
    "hash": "1538333059248075123817032651458329291536"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<i32 as ub_checks::Invariant>::is_safe",
    "hash": "170476200549671209213763477215045762164"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<i64 as ub_checks::Invariant>::is_safe",
    "hash": "73620221259828008709094330883095046370"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<i8 as ub_checks::Invariant>::is_safe",
    "hash": "401681340604920745717635283291834687048"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<isize as ub_checks::Invariant>::is_safe",
    "hash": "515005617658304496815492393738995269543"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<ops::index_range::IndexRange as slice::index::SliceIndex<[T]>>::get_unchecked::precondition_check",
    "hash": "527301041467884922111309565656307235599"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<ops::index_range::IndexRange as slice::index::SliceIndex<[T]>>::get_unchecked_mut::precondition_check",
    "hash": "98672616218528724113768882390038008401"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<ops::range::Range<usize> as slice::index::SliceIndex<[T]>>::get_unchecked::precondition_check",
    "hash": "87977286206191110206643684053945734595"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<ops::range::Range<usize> as slice::index::SliceIndex<[T]>>::get_unchecked_mut::precondition_check",
    "hash": "84580457401506839910573102725714505987"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<u128 as ub_checks::Invariant>::is_safe",
    "hash": "94118465921562944226287477600564225099"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<u16 as ub_checks::Invariant>::is_safe",
    "hash": "70720233014418988245990419244415294484"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<u32 as ub_checks::Invariant>::is_safe",
    "hash": "31561592644670893263830489280600757704"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<u64 as ub_checks::Invariant>::is_safe",
    "hash": "2706062861711493498336665932180657436"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<u8 as ub_checks::Invariant>::is_safe",
    "hash": "1002077497726722440517247562423742030908"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<usize as slice::index::SliceIndex<[T]>>::get_unchecked::precondition_check",
    "hash": "154911443990380340341563367924870465980"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<usize as slice::index::SliceIndex<[T]>>::get_unchecked_mut::precondition_check",
    "hash": "1504286091581735299715570781132246701377"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<usize as ub_checks::Invariant>::is_safe",
    "hash": "922315106903690419814131998191411440948"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "alloc::layout::Layout::from_size_align_unchecked::precondition_check",
    "hash": "6756636101355161997898429761438345451"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "ascii::ascii_char::AsciiChar::digit_unchecked::precondition_check",
    "hash": "159594069581531789011709166901887061080"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "char::convert::from_u32_unchecked::precondition_check",
    "hash": "419252743287388365818133393739775498357"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "char::methods::<impl char>::as_ascii_unchecked::precondition_check",
    "hash": "54503986970663360841733369066593556777"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "hint::assert_unchecked::precondition_check",
    "hash": "36990817497430174858508344623774643994"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "hint::unreachable_unchecked::precondition_check",
    "hash": "819756211280848030917202637728825520633"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_add::precondition_check",
    "hash": "246426550640402174817301298857768230658"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_exact_div::precondition_check",
    "hash": "1506426265365030546811680374286136620240"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_mul::precondition_check",
    "hash": "38355197497128216303515256461818878777"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_neg::precondition_check",
    "hash": "128222257465754608816348213475722260011"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_shl::precondition_check",
    "hash": "64179391826814637696248155403195475358"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_shr::precondition_check",
    "hash": "784164831812446869212154006695107486636"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_sub::precondition_check",
    "hash": "379859985984330318016840754376958346788"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_add::precondition_check",
    "hash": "698996739249672807115353142038177297396"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_exact_div::precondition_check",
    "hash": "786468959288672552111962390074393964412"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_mul::precondition_check",
    "hash": "8738768476565346001701424934363428865"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_neg::precondition_check",
    "hash": "57713686523984402793037370340305940277"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_shl::precondition_check",
    "hash": "104511098651369633827963442794565889287"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_shr::precondition_check",
    "hash": "171622155789765463333568102005951420255"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_sub::precondition_check",
    "hash": "89787214818095545155608773651514162331"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_add::precondition_check",
    "hash": "84218496572420687867645007812256120413"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_exact_div::precondition_check",
    "hash": "1424266339100554234417547406872407312081"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_mul::precondition_check",
    "hash": "146749399973928568014760605194732774075"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_neg::precondition_check",
    "hash": "1167393460775707373715939853994376557337"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_shl::precondition_check",
    "hash": "30173343328344748857755076510891715564"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_shr::precondition_check",
    "hash": "111704198074015051119528804194787688956"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_sub::precondition_check",
    "hash": "84799332118610046985420531562727662975"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_add::precondition_check",
    "hash": "128607335768057479179703052479178515757"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_exact_div::precondition_check",
    "hash": "1707629209826200541714327322876403812728"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_mul::precondition_check",
    "hash": "353087111298336919615516270212358575180"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_neg::precondition_check",
    "hash": "1844136050986349768112447803692319749359"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_shl::precondition_check",
    "hash": "92579432889776781999914978880631952367"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_shr::precondition_check",
    "hash": "99097932576385320474909133977249474928"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_sub::precondition_check",
    "hash": "125693872248856268734008036620106342638"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_add::precondition_check",
    "hash": "27683894573679935185860180525033621744"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_exact_div::precondition_check",
    "hash": "810300748441658514614454349519339033871"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_mul::precondition_check",
    "hash": "51284717540283156028731952571563639403"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_neg::precondition_check",
    "hash": "105878169426406524863234853856103314606"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_shl::precondition_check",
    "hash": "178331878238424864921801367552970651114"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_shr::precondition_check",
    "hash": "1408669803796965630112021077979141021863"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_sub::precondition_check",
    "hash": "9174059895490016228553315188120841723"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_add::precondition_check",
    "hash": "46568661489202494115142867540994376467"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_exact_div::precondition_check",
    "hash": "148720880437676300568415861230898776036"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_mul::precondition_check",
    "hash": "111450362102224144027182407197832052553"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_neg::precondition_check",
    "hash": "28697500381481026609000314362240608480"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_shl::precondition_check",
    "hash": "52750285890857131806435366118424538699"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_shr::precondition_check",
    "hash": "506714674637928694816074722987090146219"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_sub::precondition_check",
    "hash": "49891227631732077949794651864778897291"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_add::precondition_check",
    "hash": "162697206102613101255586072753567189976"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_disjoint_bitor::precondition_check",
    "hash": "1723093197971467163514106742095252341410"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_exact_div::precondition_check",
    "hash": "167634991952233988666983918237273733767"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_mul::precondition_check",
    "hash": "1150165228646582830412874460845205824680"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_shl::precondition_check",
    "hash": "657044060164339458517758787235060719925"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_shr::precondition_check",
    "hash": "48824981932562412235954923226666529381"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_sub::precondition_check",
    "hash": "466132494086859101411352203658127872041"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_add::precondition_check",
    "hash": "1173619380550749961218279785581209957347"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_disjoint_bitor::precondition_check",
    "hash": "81402695626867015903648195984774883361"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_exact_div::precondition_check",
    "hash": "110230906977566142326511743430549139429"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_mul::precondition_check",
    "hash": "6419026923916367813392466648301884271"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_shl::precondition_check",
    "hash": "82874228045572688829183856876562012452"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_shr::precondition_check",
    "hash": "86098377059053564277919526860107874698"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_sub::precondition_check",
    "hash": "4228242282085539161195657678182032335"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_add::precondition_check",
    "hash": "31145087629225328468120456950830909127"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_disjoint_bitor::precondition_check",
    "hash": "72318253966449281856206917327942987241"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_exact_div::precondition_check",
    "hash": "58190432612905090634584563077122921480"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_mul::precondition_check",
    "hash": "1221772864973935936910708154909201188236"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_shl::precondition_check",
    "hash": "165007212563409495346789402032520045595"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_shr::precondition_check",
    "hash": "54726905308085289252958660036154639163"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_sub::precondition_check",
    "hash": "258516681562352438610026479733081811199"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_add::precondition_check",
    "hash": "1537620656509644292516041088283814795870"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_disjoint_bitor::precondition_check",
    "hash": "76971344059943098071587208786463108692"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_exact_div::precondition_check",
    "hash": "1202411452053019073913928702206350069783"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_mul::precondition_check",
    "hash": "585184381471393288617209846456802724408"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_shl::precondition_check",
    "hash": "100323682784203444467695807594191883258"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_shr::precondition_check",
    "hash": "85320101462146465058397737770238260829"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_sub::precondition_check",
    "hash": "106348404924200679609506166731285951320"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::as_ascii_unchecked::precondition_check",
    "hash": "60862708504990940004958112708298831718"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_add::precondition_check",
    "hash": "20603415508489792714402435397275205992"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_disjoint_bitor::precondition_check",
    "hash": "61332638914237745711264203622616641973"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_exact_div::precondition_check",
    "hash": "143316484784319080145292788243734765072"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_mul::precondition_check",
    "hash": "40792962122533158062664668993624063580"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_shl::precondition_check",
    "hash": "38220087687325494803986095454686530651"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_shr::precondition_check",
    "hash": "27886473978691143816686162519287179044"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_sub::precondition_check",
    "hash": "63060913172181304272143007320292276408"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_add::precondition_check",
    "hash": "1166193540109608628217958100985031723667"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_disjoint_bitor::precondition_check",
    "hash": "90655791993982429734914982038015446426"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_exact_div::precondition_check",
    "hash": "1109587316809019711616742985547520260237"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_mul::precondition_check",
    "hash": "494945606026776562215371023869829498742"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_shl::precondition_check",
    "hash": "182189251850827178233946671463597729418"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_shr::precondition_check",
    "hash": "45565483247894306072041419601953841985"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_sub::precondition_check",
    "hash": "9560820795401642006736514627867392337"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::nonzero::NonZero::<T>::from_mut_unchecked::precondition_check",
    "hash": "947925086076299054212540105876296384566"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::nonzero::NonZero::<T>::new_unchecked::precondition_check",
    "hash": "887235042902537721816254572592014930578"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "ops::index_range::IndexRange::new_unchecked::precondition_check",
    "hash": "719065370181632267310362651566044974881"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "ptr::alignment::Alignment::new_unchecked::precondition_check",
    "hash": "42929387506448674333131743010069496689"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "slice::<impl [T]>::as_chunks_unchecked::precondition_check",
    "hash": "142792242795793464013625400011386967183"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "slice::<impl [T]>::as_chunks_unchecked_mut::precondition_check",
    "hash": "34716263383471097055249065694377104387"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "slice::<impl [T]>::split_at_mut_unchecked::precondition_check",
    "hash": "1262268302406396300513565250820649213634"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "slice::<impl [T]>::split_at_unchecked::precondition_check",
    "hash": "56448737519681294968960799914289695112"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "slice::<impl [T]>::swap_unchecked::precondition_check",
    "hash": "74402658018052786310281099043124569565"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "str::traits::<impl slice::index::SliceIndex<str> for ops::range::Range<usize>>::get_unchecked::precondition_check",
    "hash": "151177604553563121726407199103432119959"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "str::traits::<impl slice::index::SliceIndex<str> for ops::range::Range<usize>>::get_unchecked_mut::precondition_check",
    "hash": "124410959810549361578538764137673623205"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "str::traits::<impl slice::index::SliceIndex<str> for range::Range<usize>>::get_unchecked::precondition_check",
    "hash": "1129281868751164994310653221266111116623"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "str::traits::<impl slice::index::SliceIndex<str> for range::Range<usize>>::get_unchecked_mut::precondition_check",
    "hash": "36629814751342447939025170327808884335"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "ub_checks::check_language_ub",
    "hash": "739520556846959085018120036998133255835"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "ub_checks::is_valid_allocation_size",
    "hash": "154579918799348646172273891119983850679"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/printable.rs",
    "func": "unicode::printable::is_printable",
    "hash": "1769781601782564476611329024486919274685"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::ShortOffsetRunHeader::new",
    "hash": "573025224078501084417397699761968621329"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::ShortOffsetRunHeader::prefix_sum",
    "hash": "921093343429125213217757377270116064946"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::ShortOffsetRunHeader::start_index",
    "hash": "156172685843180766086305544173360207623"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::alphabetic::lookup",
    "hash": "155581048345586795618606155795347837104"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::case_ignorable::lookup",
    "hash": "70475182291227271031648100881722643625"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::cased::lookup",
    "hash": "126014107855162897646449061582968983264"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::conversions::to_lower",
    "hash": "133072051606571054384388233885378385874"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::conversions::to_upper",
    "hash": "22023706356024216254255925174011550972"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::grapheme_extend::lookup",
    "hash": "1217049781873001030816969872098750413149"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::grapheme_extend::lookup_slow",
    "hash": "99812071323021317174115889767949626803"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::lowercase::lookup",
    "hash": "134121232698295388179052186316389168347"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::n::lookup",
    "hash": "151065405841898050787016270759910926152"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::uppercase::lookup",
    "hash": "300906724317144574915093930284654690056"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::white_space::lookup",
    "hash": "89347776969484683885451283756595935835"
  },
  {
    "crate": "core",
    "file": "core/src/unit.rs",
    "func": "<() as unit::IsUnit>::is_unit",
    "hash": "60009806958671010299771237522837022530"
  }
]